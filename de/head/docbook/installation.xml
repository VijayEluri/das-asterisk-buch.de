<?xml version="1.0" encoding="UTF-8"?>
<chapter id="kapitel-installation" lang="de" revision="$Revision:473 $">
  <!--% Copyright (c) 2006 - 2008 by
% Stefan Wintermeyer <sw@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation;
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title>Installation und "Hello World"</title>

  <section id="installation-einleitung">
    <title id="Einleitung">Einleitung</title>

    <para>Ein nicht immer ganz zu Unrecht bestehendes Vorurteil gegenüber
    Asterisk ist die Behauptung, dass man mindestens 2 bis 3 Tage Webseiten
    und Dokumentation studieren muss, um überhaupt auch nur irgendetwas
    Lauffähiges zu Stande zu bekommen. Diese Hürde ist für viele Interessierte
    zu hoch oder es ist die Mühe und Zeit nicht wert. Wer zu denen gehört, die
    sich nicht lange mit einem theoretischen Unterbau beschäftigen möchten,
    sondern möglichst schnell ein Ergebnis sehen wollen, ist in diesem Kapitel
    genau richtig aufgehoben. Das Kapitel sollte im Gegensatz zum Rest des
    Buches von Anfang bis Ende durch gearbeitet werden.<important>
        <para>In diesem Buch geht es um Asterisk und nicht um Linux. Aus
        diesem Grund wird beim Leser grundlegendes Linux Know-How
        vorausgesetzt. Es sollte also klar sein, wie ein Editor bedient wird
        und wie man eine einfache Netzwerkkonfiguration einstellt. Falls nicht
        anders erwähnt wird immer als <emphasis>root</emphasis>
        gearbeitet.</para>
      </important></para>

    <section id="Asterisk-1.4-oder-1.6">
      <title>Asterisk 1.4 oder 1.6</title>

      <para>Das ist für dieses Einsteiger Kapitel absolut egal. Alle hier
      beschriebenen Basics gelten für beide Versionen. Da bei Telefonanlagen
      im Zweifelsfall immer die stabilere Version vorzuziehen ist, nehmen wir
      die Asterisk Version 1.4. Sollten Sie diese Dokumentation im Jahr 2010
      oder noch später in die Hand bekommen können Sie natürlich auch gerne
      ein Asterisk 1.6 installieren.</para>
    </section>
  </section>

  <section id="Asterisk-auf-dem-Server-installieren">
    <title>Asterisk auf dem Server installieren</title>

    <para>Bei der Wahl der Linux Distribution und der Entscheidung für eine
    Asterisk Version gehen die Meinungen wie so oft im Open-Source Lager
    auseinander. Die einen installieren einfach die in ihrer Lieblings Linux
    Distributionen vorhandenen Pakete (z.B. RPMs) und die anderen kompilieren
    Asterisk aus den Quellen. Für die Beispiele in diesem Kapitel sollten
    beide Wege gehen. Für den Rest des Buches sieht es allerdings teilweise
    anders aus. Deshalb sollten Sie im Zweifelsfall den langen Weg
    (kompilieren aus den Quellen) vorzuziehende. Der Grund ist einfach: Die in
    den Distributionen verwendeten Asterisk Versionen sind fast nie
    aktuell.<footnote>
        <para>Man kann den Distributionen dabei aber keinen Vorwurf machen. Es
        kommen fast jeden Monat neue Asterisk Versionen raus. Da kann keine
        Distribution mit Schritt halten.</para>
      </footnote> Bitte schlagen Sie dazu den Anhang <xref
    linkend="installationsanleitungen-asterisk-1.4" /> auf und installieren
    Sie ein Asterisk 1.4.x auf einem frisch installierten <link
    linkend="installation-1.4-debian-4.0">Debian Linux</link> oder einer <link
    linkend="installation-1.4-knoppix-5.1.x">Knoppix</link>. Dies kann zu
    Übungszwecken auch auf einem virtuellen x86 kompatiblen PC (z.B. <ulink
    url="http://www.vmware.com/">VMware</ulink>) geschehen. Wichtig ist bei
    beiden Varianten, das Sie auf dem Server oder in Ihrem virtuellen PC über
    eine Soundkarte und ein Ausgabe-Device (z.B. Lautsprecher)
    verfügen.<warning>
        <para>Wer an dieser oder einer anderen Stelle des Buches eine andere
        Distribution oder einen anderen Installationsweg als den beschriebenen
        einschlägt, sollte bei Problemen immer als erstes die hier aufgeführte
        Weise ausprobieren. Es ist oft einfacher mit einem fertigen Kochrezept
        zu arbeiten, als den Fehler in einer hier nicht behandelten
        Konfiguration/Umgebung zu finden.</para>
      </warning></para>
  </section>

  <section id="hello-world-im-cli">
    <title id="Eine-Minimal-Telefonanlage">Hello-World im CLI aufrufen</title>

    <para>Im ersten Beispiel werden wir einen einfachen Hello-World Dialplan
    programmieren und diesen von der Asterisk Console dem CLI (Command Line
    Interface) aufrufen.</para>

    <section>
      <title>Asterisk konfigurieren</title>

      <para>Im Verzeichnis <filename>/etc/asterisk/</filename> finden nach
      einer frischen Installation alle Konfigurationsdateien in einer
      einfachen Standardausführung:</para>

      <screen>debian:/usr/src# cd /etc/asterisk 
debian:/etc/asterisk# ls
adsi.conf           cdr_tds.conf     indications.conf  privacy.conf
adtranvofr.conf     codecs.conf      logger.conf       queues.conf
agents.conf         dnsmgr.conf      manager.conf      res_odbc.conf
alarmreceiver.conf  dundi.conf       meetme.conf       rpt.conf
alsa.conf           enum.conf        mgcp.conf         rtp.conf
asterisk.adsi       extconfig.conf   misdn.conf        sip.conf
asterisk.conf       extensions.ael   modem.conf        sip_notify.conf
cdr.conf            extensions.conf  modules.conf      skinny.conf
cdr_custom.conf     features.conf    musiconhold.conf  telcordia-1.adsi
cdr_manager.conf    festival.conf    osp.conf          voicemail.conf
cdr_odbc.conf       iax.conf         oss.conf          vpb.conf
cdr_pgsql.conf      iaxprov.conf     phone.conf        zapata.conf
debian:/etc/asterisk#</screen>

      <para>Dies ist jetzt eine recht umfangreiche Liste, aber -- keine Angst
      -- für unser Hello-World Beispiel müssen wir uns nur mit einer von
      diesen Dateien näher befassen. Diese mit <command>make samples</command>
      erstellen und recht komplexen Defaultdateien verschieben wir dazu erst
      einmal nach <filename>/var/tmp/asterisk-etc-backup/</filename> (damit
      wir später bei Bedarf darauf zugreifen können):</para>

      <screen>debian:/etc/asterisk# mkdir -p /var/tmp/asterisk-etc-backup
debian:/etc/asterisk# mv extensions.* /var/tmp/asterisk-etc-backup/
debian:/etc/asterisk# </screen>

      <para>Legen Sie mit Ihrem Lieblingseditor<footnote>
          <para>Wenn Sie keinen Editor kennen, den Sie in einem
          Terminalfenster verwenden können, empfehle ich Ihnen
          <command>nano</command>. Unter Debian ist dieser einfach als
          Benutzer root mit <command>apt-get -y install nano</command> zu
          installieren. Danach öffnen Sie mit <command>nano
          dateiname</command> die Datei. In Nano selbst sehen Sie im unteren
          Bereich des Bildschirms die wichtigsten Befehle.</para>
        </footnote> die Datei
      <filename>/etc/asterisk/extensions.conf</filename> mit folgendem Inhalt
      an:</para>

      <programlisting>[default]
exten =&gt; 1001,1,Answer()
exten =&gt; 1001,2,Playback(hello-world)
exten =&gt; 1001,3,Hangup()
</programlisting>
    </section>

    <section id="asterisk-konfigurieren">
      <title id="Server-konfigurieren">Asterisk starten und Hello-World
      abrufen</title>

      <para>Und diese paar Zeilen sollen ausreichen? Dabei heißt es doch
      immer, dass Asterisk so kompliziert sei. Probieren wir es einmal aus!
      Mit dem Befehl <command>asterisk -c</command> starten Sie
      Asterisk:</para>

      <screen>debian:/etc/asterisk# asterisk -c
Asterisk 1.4.2, Copyright (C) 1999 - 2005 Digium.
Written by Mark Spencer &lt;markster@digium.com&gt;
=========================================================================
[ Booting...Nov 20 18:59:28 NOTICE[14937]: cdr.c:1185 do_reload: CDR 
simple logging enabled.
.........................................................................
............................................... ]
Asterisk Ready.
*CLI&gt; </screen>

      <para>Mit dem erfolgreichen Start von Asterisk erhalten wir ebenfalls
      eine Konsole, auf der man mit dem laufenden Asterisk-Prozess
      kommunizieren kann. Vor uns sehen wir jetzt das Command Line Interface
      (CLI) von Asterisk. Hier können wir aktiv in das Geschehen eingreifen
      und als erste Handlung mit dem Befehl <command>console dial
      1001</command> das Hello-World Beispiel abrufen:<screen>*CLI&gt; console dial 1001
*CLI&gt;  &lt;&lt; Console call has been answered &gt;&gt; 
 &lt;&lt; Hangup on console &gt;&gt; 

*CLI&gt;</screen></para>

      <para>Mit <command>console dial 1001</command> rufen wir die Extention
      1001 auf. Diese spielt dann den Sprachbaustein
      <filename>hello-world.gsm</filename> aus dem Verzeichnis
      <filename>/var/lib/asterisk/sounds/</filename> ab.<note>
          <para><command>console dial</command> agiert wie ein ganz einfaches
          Telefon. Man kann eine Extension anrufen und auch über die
          Soundkarte hören.</para>
        </note></para>

      <section>
        <title>Was ist eine Extension?</title>

        <para>Eine Extension ist eine Programmeinheit in einem Dialplan. Jede
        Extension besteht mindestens aus einer Zeile die im
        Format<programlisting>exten =&gt; Name-der-Extension,Priorität,Applikation</programlisting></para>

        <para>geschrieben wird. Die Priorität ist dabei die Reihenfolge der
        einzelnen Programmabschnitte. Unsere Extension 1001 hat drei
        Prioritäten:<programlisting>exten =&gt; 1001,1,Answer()
exten =&gt; 1001,2,Playback(hello-world)
exten =&gt; 1001,3,Hangup()
</programlisting></para>

        <para>Die Applikationen sind selbsterklärend:<itemizedlist>
            <listitem>
              <para><command>Answer()</command></para>

              <para>Hebt ab und öffnet damit einen neuen Asterisk-Channel
              (siehe <link linkend="applikationen-answer"></link>).</para>
            </listitem>

            <listitem>
              <para><command>Playback(hello-world)</command></para>

              <para>Spielt im aktuellen Channel die Datei hello-world.gsm ab
              (siehe <link linkend="applikationen-playback"></link>).</para>
            </listitem>

            <listitem>
              <para><command>Hangup()</command></para>

              <para>Legt auf und schließt damit den Channel (siehe <link
              linkend="applikationen-hangup"></link>).</para>
            </listitem>
          </itemizedlist></para>
      </section>

      <section>
        <title>Verbosity erhöhen</title>

        <para>Zum Debuggen von Asterisk empfielt es sich oft im CLI die
        Verbosity (also die "Gesprächigkeit") von Asterisk zu erhöhen. Wenn
        Asterisk mit <command>asterisk -c</command> gestartet wird, ist der
        Verbose-Level auf 0 eingestellt (die Range geht von 0 bis 10). Im CLI
        können Sie mit dem Befehl <command>core set verbose 5</command> den
        Level auf 5 stellen (was ein guter Debug-Level ist):<screen>*CLI&gt; core set verbose 5
Verbosity was 0 and is now 5
*CLI&gt;</screen></para>

        <para>Wenn Sie jetzt den Befehl <command>console dial 1001</command>
        ausführen, dann bekommen Sie von Asterisk sehr viel mehr Informationen
        über den Ablauf im Dialplan:<screen>*CLI&gt; console dial 1001
  == Console is full duplex
*CLI&gt;     -- Executing [1001@default:1] Answer("Console/dsp", "") in new stack
 &lt;&lt; Console call has been answered &gt;&gt; 
    -- Executing [1001@default:2] Playback("Console/dsp", "hello-world") in new stack
    -- &lt;Console/dsp&gt; Playing 'hello-world' (language 'en')
*CLI&gt;     -- Executing [1001@default:3] Hangup("Console/dsp", "") in new stack
  == Spawn extension (default, 1001, 3) exited non-zero on 'Console/dsp'
 &lt;&lt; Hangup on console &gt;&gt; 

*CLI&gt;</screen></para>

        <para>Sie können den Verbose-Level aber auch beim Starten von Asterisk
        mit dem Softwareschalter <command>-vvvvv</command> auf den Level 5
        setzen.<warning>
            <para>Bitte nie zum Debuggen vom Dialplan als normaler User
            <command>core set debug</command> benutzen! Das ist eine für
            Asterisk Entwickler eingebaute Möglichkeiten Sachen im Quellcode
            von Asterisk zu analysieren. Das hilft beim Dialplan aber
            nicht.</para>
          </warning></para>
      </section>

      <section>
        <title>Asterisk stoppen</title>

        <para>Einfach im CLI den Befehl <command>stop now</command> eingeben
        und Asterisk fährt runter:<screen>*CLI&gt; stop now
debian:/etc/asterisk#</screen></para>
      </section>
    </section>
  </section>

  <section id="hello-world-mit-einem-sip-telefon">
    <title id="sip-telefone-konfigurieren">Hello-World mit einem
    SIP-Telefon</title>

    <indexterm>
      <primary>Telefon</primary>

      <secondary>SIP-Telefon konfigurieren</secondary>
    </indexterm>

    <para>Nachdem wir die Extension 1001 schon vom CLI aus aufgerufen haben,
    gehen wir jetzt den nächsten logischen Schritt und machen dies von einem
    SIP-Telefon. Wenn Sie kein Hardware SIP-Telefon besitzen, können Sie auch
    Software-Telefone, die Sie aus dem Internet herunterladen und auf einem
    anderen Rechner, benutzen.<warning>
        <para>Wenn Sie zu Testzwecken ein Software-SIP-Telefon und den
        Asterisk-Server auf den gleichen Rechner installieren wollen, so
        müssen Sie beim SIP-Telefon den SIP Port auf 5061 umstellen, da 5060
        bereits von Asterisk benutzt wird. Ein Hardware SIP-Telefon ist aber
        für den Anfänger vorzuziehen. Man sollte am Anfang immer so wenig
        Problemquellen wie möglich verbauen.</para>
      </warning></para>

    <section>
      <title>sip.conf und das SIP-Telefon konfigurieren</title>

      <para>Für das von uns benutzte SIP-Telefon muss in der Asterisk
      Konfiguration erst ein Account angelegt werden. Wie vorher mit der
      <filename>extensions.conf</filename> verschieben wir auch diesmal die
      Beispieldatei mit <command>mv sip.conf
      /var/tmp/asterisk-etc-backup/</command> nach
      <filename>/var/tmp/asterisk-etc-backup/</filename><screen>debian:/etc/asterisk# mv sip.conf /var/tmp/asterisk-etc-backup/
debian:/etc/asterisk# </screen>Danach legen wir mit dem Editor eine neue
      <filename>/etc/asterisk/sip.conf</filename> an. Die befühlen wir mit
      folgendem Inhalt:<programlisting>[general] 
port=5060 
bindaddr=0.0.0.0 

[2000] 
type=friend 
secret=1234 
host=dynamic</programlisting></para>

      <para>Das SIP-Telefon muss dann mit den hier angegebenen Daten
      konfiguriert werden:<itemizedlist>
          <listitem>
            <para>User: 2000</para>
          </listitem>

          <listitem>
            <para>Passwort: 1234</para>
          </listitem>

          <listitem>
            <para>SIP-Registrar: IP-Adresse Ihres Asterisk-Servers</para>
          </listitem>

          <listitem>
            <para>SIP-Proxy: IP-Adresse Ihres Asterisk-Servers</para>
          </listitem>
        </itemizedlist></para>

      <para><tip>
          <para>Bei manchen Telefon ist es notwendig alle verfügbaren Felder
          und notfalls mit xxx zu füllen. Leider gibt es dafür keine allgemein
          gültige Hilfe. Da hilft nur Ausprobieren!</para>
        </tip></para>
    </section>

    <section>
      <title>Asterisk und Telefon starten</title>

      <para>Diesmal starten wir Asterisk direkt mit <command>asterisk
      -vvvvvc</command> im Verbose-Level 5:<screen>debian:/etc/asterisk# asterisk -vvvvvc 
Asterisk 1.4.10, Copyright (C) 1999 - 2006 Digium. 
Written by Mark Spencer &lt;markster@digium.com&gt; 
=========================================================================  
...
</screen></para>

      <para>Danach starten wir das SIP-Telefon neu und warten im CLI auf die
      Meldung, das es sich beim Asterisk-Server registriert hat:<screen>*CLI&gt; -- Registered SIP ’2000’ at 47.6.3.4 port 5060 
expires 120 -- Unregistered SIP ’2000’ </screen></para>
    </section>

    <section>
      <title>Der Test</title>

      <para>Wenn Sie nun mit dem SIP-Telefon die 1001 anrufen, werden Sie von
      Asterisk den Sprachbaustein <filename>hello-world.gsm</filename>
      vorgespielt bekommen.</para>
    </section>

    <section>
      <title>Vom CLI aus das Telefon anrufen</title>

      <para>Da wir mit <command>console dial</command> eine Extension aufrufen
      können und ein SIP-Telefon angeschlossen haben, sollten wir ja auch in
      der Lage sein, diese Telefon gezielt anzurufen. Dazu müssen wir in der
      <filename>/etc/asterisk/extentions.conf</filename> eine weitere
      Extension einbauen:<programlisting>[default] 
exten =&gt; 1001,1,Answer()
exten =&gt; 1001,2,Playback(hello-world)
exten =&gt; 1001,3,Hangup()

exten =&gt; 2000,1,Dial(SIP/2000)</programlisting></para>

      <para>Jetzt müssen Sie Asterisk entweder mit <command>stop now</command>
      und <command>asterisk -vvvvvc</command> stoppen und starten oder mit
      einem <command>dialplan reload</command> im CLI den neuen Dialplan neu
      einlesen. Danach können Sie mit <command>console dial 2000</command> vom
      CLI aus das SIP-Telefon anrufen:<screen>*CLI&gt; console dial 2000</screen></para>
    </section>

    <section>
      <title>Analyse</title>

      <para>Die Applikation <command>Dial()</command> kann eine Verbindung zu
      einem Telefon aufbauen. Es werden dabei mindestens zwei Parameter
      angegeben. Der erste "SIP" steht für die Technologie, in unserem
      Beispiel das SIP-VoIP-Protokoll. Der zweite Parameter gibt das Ziel
      innerhalb dieses Protokolls an (hier die 2000). Bei
      <command>Dial()</command> ist kein <command>Answer()</command> und kein
      <command>Hangup()</command> notwendig, da man ja gar nicht weiß ob die
      Gegenstelle das Gespräch annimmt oder nicht, hat
      <command>Dial()</command> von den Asterisk Entwicklern die
      Eigenintelligenz den Channel auf- und abzubauen mitbekommen.</para>

      <para>Das der Name der Extension 2000 mit dem angerufenen Ziel (dem
      SIP-Telefon mit dem SIP-Account 2000) übereinstimmt ist genau genommen
      Zufall. Auch die folgende Extension wäre sinnvoll:<programlisting>exten =&gt; 55,1,Dial(SIP/2000)</programlisting></para>

      <para>Jetzt kann mit <command>console dial 55</command> das Telefon mit
      dem SIP-Account 2000 angerufen werden.</para>
    </section>

    <section>
      <title>Kommentare in der Konfiguration</title>

      <para>Da das Hash-Zeichen "#" in der Telefonie ein DTMF-Signal ist, kann
      es nicht als Signalzeichen für einen Kommentar benutzt werden. Deshalb
      werden Kommentare in Asterisk-Konfigurationsdateien mit einem Semikolon
      ";" eingeleitet. Beispiel:<programlisting>[default] 
; Die Extension 1001 wird als Funktionstest
; für alle Telefone benutzt.
;
exten =&gt; 1001,1,Answer()  ; abgehoben
exten =&gt; 1001,2,Playback(hello-world)
exten =&gt; 1001,3,Hangup()  ; aufgelegt

; Mit der Extension 2000 wird zum SIP-Telefon
; 2000 verbunden.
;
exten =&gt; 2000,1,Dial(SIP/2000)</programlisting></para>
    </section>
  </section>

  <section id="minimale-telefonanlage">
    <title>Eine Minimal-Telefonanlage mit zwei SIP-Telefonen</title>

    <para>Wie sieht die einfachst mögliche Telefonanlage aus? Zwei Telefone
    und ein Asterisk.</para>

    <para>Wir haben schon alle Einzelteile in diesem Puzzle behandelt und
    müssen Sie jetzt nur noch richtig zusammenfügen. Als erstes die
    Konfiguration der zwei SIP-Telefone in der
    <filename>/etc/asterisk/sip.conf</filename><programlisting>[general] 
port=5060 
bindaddr=0.0.0.0 

[2000] 
type=friend 
secret=1234 
host=dynamic

[2001] 
type=friend 
secret=1234 
host=dynamic</programlisting></para>

    <para>Als nächstes müssen wir noch die
    <filename>/etc/asterisk/extensions.conf</filename> anpassen. Das
    Hello-World Beispiel lassen wir zu Testzwecken im Dialplan. So können wir
    die Funktion jedes einzelnen Telefones durch Anwahl der 1001 überprüfen.
    Der Dialplan sieht wie folgt aus:<programlisting>[default] 
exten =&gt; 1001,1,Answer()
exten =&gt; 1001,2,Playback(hello-world)
exten =&gt; 1001,3,Hangup()

exten =&gt; 2000,1,Dial(SIP/2000)
exten =&gt; 2001,1,Dial(SIP/2001)</programlisting></para>

    <para>Nach einem Neustart von Asterisk und der SIP-Telefone können Sie
    nach dem die Telefone sich registriert haben von einem Telefon zum anderen
    und zur 1001 anrufen.</para>

    <section id="min-anlage-ab">
      <title id="anrufbeantworter">Und jetzt mit einem
      Anrufbeantworter</title>

      <indexterm>
        <primary>Anrufbeantworter</primary>

        <secondary>Einfaches Beispiel.</secondary>
      </indexterm>

      <para>Asterisk beinhaltet bereits ein fertiges Voicemail-Modul, wir
      müssen es lediglich in der Datei
      <filename>/etc/asterisk/voicemail.conf</filename> aktivieren. Als ersten
      Schritt verschieben wir diese Default-Datei in unser Verzeichnis mit den
      Sicherungskopien der Konfigurationsdateien:</para>

      <screen>debian:/etc/asterisk# mv voicemail.conf /var/tmp/asterisk-etc-backup/</screen>

      <para>Daraufhin erstellen wir eine neue
      <filename>/etc/asterisk/voicemail.conf</filename> und versehen diese mit
      folgendem Inhalt:</para>

      <programlisting>[general]
format = wav

[default]
2000 =&gt; 4711,Hans Mustermann,hansi@company.de
2001 =&gt; 0815,Ute Beispiel,ute.beispiel@company.de</programlisting>

      <para>Damit sind die Voicemailboxen grundsätzlich eingerichtet (ja, so
      einfach geht das!). Jetzt müssen wir aber noch in der
      <filename>/etc/asterisk/extensions.conf</filename> ein paar weitere
      Zeilen eintragen, um die Voicemail-Funktionalität unseren Telefonen
      zuzuweisen. Bitte vergessen Sie dabei nicht den neuen Eintrag
      <parameter>",20"</parameter> bei der Dial-Applikation.</para>

      <programlisting>[default] 
exten =&gt; 1001,1,Answer()
exten =&gt; 1001,2,Playback(hello-world)
exten =&gt; 1001,3,Hangup()

exten =&gt; 2000,1,Dial(SIP/2000,20)
exten =&gt; 2000,2,VoiceMail(2000,u)

exten =&gt; 2001,1,Dial(SIP/2001)
exten =&gt; 2001,2,VoiceMail(2001,u)

exten =&gt; 2999,1,VoiceMailMain(${CALLERID(num)},s)</programlisting>

      <para>Fertig! Asterisk nur noch mit <command>asterisk -vvvvvc</command>
      neu starten<tip>
          <para>In einem laufenden Asterisk System reicht auch ein
          <command>reload</command> im CLI aus.</para>
        </tip> und mit einem Telefon das andere anrufen. Nachdem es 20
      Sekunden lang geklingelt hat (deshalb die <parameter>20</parameter> am
      Ende des Dial-Befehls), kommt man auf die VoiceMailbox. Ist die
      Gegenstelle besetzt, wird man direkt auf die VoiceMailbox 2000 geleitet.
      Sie können vom Telefon mit der Nummer 2000 die entsprechende Mailboxen
      abhören, indem Sie die Nummer 2999 anrufen. Dann bekommen Sie Ihre
      Voicemailbox als Menü vorgespielt.<note>
          <para>Ist auf Ihrem System ein Mail Transfer Agent (MTA)
          eingerichtet (z.B. sendmail oder postfix), so werden von Ihnen neu
          aufgesprochene Nachrichten direkt an die in der
          <filename>voicemail.conf</filename> angegebenen E-Mail Adresse
          geschickt.</para>
        </note></para>

      <para>Wenn Sie das Ganze noch mit einer Passwortabfrage absichern wollen
      oder eine Auflistung des Menüs suchen, finden Sie dazu in <xref
      linkend="kapitel-voicemail" /> die nötigen Informationen.</para>
    </section>
  </section>

  <section id="rechteverwaltung-mit-contexten">
    <title>Rechteverwaltung mit Contexten</title>

    <para>Bis jetzt durften alle Telefone immer alle Extensions in der
    <filename>extensions.conf</filename> aufrufen. Dies ist für eine kleine
    interne Telefonanlage ausreichend. Für große Telefonanlagen und Anlagen,
    die sich mit anderen Telefonnetzen verbinden benötigen wir aber eine
    Rechteverwaltung. Asterisk realisiert dies über sogenannte
    Contexte.</para>

    <section>
      <title>Quelle: Jedes Telefon ist in einem Context</title>

      <para>Bis jetzt haben wir für die benutzen SIP-Telefone keinen Context
      definiert. Deshalb hat Asterisk automatisch den <code>[default]</code>
      Context genommen. Möchten wir bestimmte Telefone in bestimmten Contexten
      haben, so geht dies in der <filename>sip.conf</filename> mit dem Eintrag
      <programlisting>context = ContextName</programlisting></para>

      <para>Dabei kann im Bereich <code>[general]</code> ein Context für alle
      Telefone angegeben werden. Der aber wiederum bei jedem Telefon
      überschrieben werden kann.</para>

      <section>
        <title>Beispiel mit einem Context</title>

        <para>In der abc Firma gibt es die SIP-Telefone 10 und 11. Beide sind
        im Context <code>[intern]</code>. Die <filename>sip.conf</filename>
        sieht dann wie folgt aus:<programlisting>[general] 
port=5060 
bindaddr=0.0.0.0 

[10] 
type=friend 
secret=1234 
host=dynamic
context=intern  ; &lt;-- Context

[11] 
type=friend 
secret=1234 
host=dynamic
context=intern  ; &lt;-- Context</programlisting></para>

        <para>Das gleiche Ergebnis kann aber auch mit folgender
        <filename>sip.conf</filename> erreicht werden:<programlisting>[general] 
port=5060 
bindaddr=0.0.0.0 
context=intern  ; &lt;-- Context

[10] 
type=friend 
secret=1234 
host=dynamic

[11] 
type=friend 
secret=1234 
host=dynamic</programlisting></para>
      </section>

      <section>
        <title>Beispiel mit mehreren Telefonen</title>

        <para>In der abc Firma gibt es die SIP-Telefone 10, 11, 12 und 20. Die
        Telefone 10 bis 12 sind normale Mitarbeitertelefone im Context
        <code>[abc]</code> und das Telefon 20 ist ein Gästetelefon am Empfang
        mit dem Context <code>[gast]</code>:<programlisting>[general] 
port=5060 
bindaddr=0.0.0.0 
context=abc  ; &lt;-- Context

[10] 
type=friend 
secret=1234 
host=dynamic

[11] 
type=friend 
secret=1234 
host=dynamic

[12] 
type=friend 
secret=1234 
host=dynamic

[20] 
type=friend 
secret=1234 
host=dynamic
context=gast  ; &lt;-- Context</programlisting></para>
      </section>
    </section>

    <section>
      <title>Ziel: Contexte in der extentions.conf</title>

      <para>Die <filename>extensions.conf</filename> wird in verschiedene
      Abschnitte (also Contexte) aufgeteilt. Jeder Context wird durch den
      Contextnamen in eckigen Klammern eingeleitet.</para>

      <para>Beispiel für eine <filename>extensions.conf</filename> mit den
      drei Contexten <code>default</code>, <code>hausmeister</code> und
      <code>apfelkuchen</code>:<programlisting>[default] 
exten =&gt; 1001,1,Answer()
exten =&gt; 1001,2,Playback(hello-world)
exten =&gt; 1001,3,Hangup()

[hausmeister]
exten =&gt; 2000,1,Dial(SIP/2000,20)
exten =&gt; 2000,2,VoiceMail(2000,u)

exten =&gt; 2001,1,Dial(SIP/2001)
exten =&gt; 2001,2,VoiceMail(2001,u)

[apfelkuchen]
exten =&gt; 2999,1,VoiceMailMain(${CALLERID(num)},s)</programlisting></para>

      <para>Wird bei einem SIP-Telefon in der <filename>sip.conf</filename>
      kein Context angegeben, so nimmt Asterisk immer den
      <code>[default]</code> Context in der
      <filename>extensions.conf</filename>.</para>
    </section>
  </section>

  <section id="sip-ins-oeffentliche-netz">
    <title>Telefonate vom und ins öffentliche Netz</title>

    <para>In diesem Abschnitt werden wir unsere kleine Mini-Telefonanlage mit
    dem Rest der Telefonwelt verbinden.</para>

    <section id="min-anlage-festnetz">
      <title id="festnetz-outgoing">Ins öffentliche Telefonnetz
      telefonieren</title>

      <para>Jetzt werden Sie vielleicht einwenden, dass Sie zwar eine fertige
      Telefonanlage haben, was an und für sich spannend ist, aber ohne den
      Anschluss an die große weite Welt noch nicht wirklich nützlich. Wenn Sie
      mir weitere 10 Minuten Zeit geben und Ihre Mini-Telefonanlage eine
      Internetverbindung besitzt, lässt sich auch diese Aufgabe lösen und Sie
      erhalten in Kürze Anschluss ans Festnetz. Dazu benötigen Sie einen
      Account bei einem SIP-Provider.</para>

      <para>Jetzt konfigurieren wir Asterisk so, dass Sie mit den Telefonen
      2000 und 2001 ins deutsche Festnetz telefonieren können. Als Erstes muss
      der Provider-Account in der <filename>/etc/asterisk/sip.conf</filename>
      eingetragen werden:</para>

      <programlisting>[general]
port = 5060
bindaddr = 0.0.0.0
context = sonstige

register =&gt; 5587572:UHDZJD@mein-voip-provider.de/5587572
;              ^       ^       ^                    ^
;              |       |       |                    |
;             User Passwort  Provider              User

[2000]
type=friend
context=meine-telefone
secret=1234
host=dynamic

[2001]
type=friend
context=meine-telefone
secret=1234
host=dynamic

[ext-sip-account]
type=friend
context=von-voip-provider
username=5587572
fromuser=5587572
secret=UHDZJD
host=mein-voip-provider.de
fromdomain=mein-voip-provider.de
qualify=yes
insecure=very
nat=yes</programlisting>

      <para>Den Usernamen (im Beispiel <parameter>5587572</parameter>) und Ihr
      Passwort (im Beispiel <parameter>UHDZJD</parameter>) können Sie der
      SIP-Provider-Webseite entnehmen. Damit kann Asterisk diesen Account
      benutzen. Allerdings müssen wir jetzt noch in der
      <filename>/etc/asterisk/extensions.conf</filename> eine Regel zum
      Rauswählen einfügen:</para>

      <programlisting>[sonstige]

[meine-telefone]
exten =&gt; 2000,1,Dial(SIP/2000,20)
exten =&gt; 2000,2,VoiceMail(2000,u)

exten =&gt; 2001,1,Dial(SIP/2001,20)
exten =&gt; 2001,2,VoiceMail(2001,u)

exten =&gt; 2999,1,VoiceMailMain(${CALLERID(num)},s)

exten =&gt; _0[1-9].,1,Dial(SIP/${EXTEN}@ext-sip-account)</programlisting>

      <para>Nachdem die Einträge in den Konfigurationsdateien erstellt sind,
      starten Sie Asterisk, wie bekannt, mit <command>asterisk
      -vvvvvc</command> in das CLI und warten ein paar Sekunden, bis sich
      eines der SIP-Telefone angemeldet hat. Danach einfach eine beliebige
      Nummer im deutschen Festnetz (mit Vorwahl) wählen und warten (im CLI
      können Sie beobachten, was passiert). Nach kurzer Zeit hören Sie auch
      schon das Freizeichen und können mit einem Festnetz-Teilnehmer
      telefonieren. Wie die obige Konfiguration genau funktioniert, wird an
      dieser Stelle noch nicht verraten.<footnote>
          <para>Nur so viel an dieser Stelle: Die Variable
          <code>${EXTEN}</code> enthält die vom Benutzer gewählte Nummer
          (siehe <xref linkend="kapitel-programmieren" />).</para>
        </footnote></para>
    </section>

    <section id="festnetz-incoming">
      <title>Gespräche vom öffentlichen Netz entgegennehmen</title>

      <para>Der letzte Schritt ist ein kleiner. Wir wollen über unsere
      Rufnummer beim VoIP-Provider auf dem Telefon mit der Nummer
      <parameter>2000</parameter> angerufen werden können. Dazu müssen wir nur
      noch einen weiteren Context in die Konfigurationsdatei
      <filename>/etc/asterisk/extensions.conf</filename>
      hinzufügen:<programlisting>[sonstige]

[meine-telefone]
exten =&gt; 2000,1,Dial(SIP/2000,20)
exten =&gt; 2000,2,VoiceMail(2000,u)

exten =&gt; 2001,1,Dial(SIP/2001,20)
exten =&gt; 2001,2,VoiceMail(2001,u)

exten =&gt; 2999,1,VoiceMailMain(${CALLERID(num)},s)

exten =&gt; _0[1-9].,1,Dial(SIP/${EXTEN}@ext-sip-account)

[von-voip-provider]
exten =&gt; 5587572,1,Dial(SIP/2000)</programlisting></para>

      <para>Fertig! :-)</para>

      <para>Die <parameter>5587572</parameter> ist Ihre interne Rufnummer bei
      Ihrem VoIP-Provider. Bitte schauen Sie auf der Webseite des Providers in
      Ihren Kundendaten diese Nummer nach. Dass die Rufnummer hier dieselbe
      ist wie der Username, ist prinzipiell Zufall.</para>

      <para>Wer will kann natürlich ganz einfach mit der folgenden Variante
      noch eine Voicemailbox für Gespräche die vom SIP-Provider kommen
      aktivieren:<programlisting>[sonstige]

[meine-telefone]
exten =&gt; 2000,1,Dial(SIP/2000,20)
exten =&gt; 2000,2,VoiceMail(2000,u)

exten =&gt; 2001,1,Dial(SIP/2001,20)
exten =&gt; 2001,2,VoiceMail(2001,u)

exten =&gt; 2999,1,VoiceMailMain(${CALLERID(num)},s)

exten =&gt; _0[1-9].,1,Dial(SIP/${EXTEN}@ext-sip-account)

[von-voip-provider]
exten =&gt; 5587572,1,Dial(SIP/2000,20)
exten =&gt; 5587572,2,VoiceMail(2000,u)</programlisting></para>

      <para>In diesem Einführungs-Kapitel wollte ich Ihnen zeigen, wie schnell
      und einfach man mit Asterisk eine funktionierende Telefonanlage aufbauen
      kann. Im verbleibenden Teil des Buches gehen wir tiefer in die Details
      und ich zeige Ihnen, was man mit Asterisk alles machen kann.</para>
    </section>
  </section>
</chapter>