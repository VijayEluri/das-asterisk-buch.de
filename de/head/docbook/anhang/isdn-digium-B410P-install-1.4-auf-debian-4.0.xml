<?xml version="1.0" encoding="ISO-8859-1"?>
<section id="installation-1.4-mit-b410p-auf-debian-4.0" lang="de"
         revision="$Revision:473 $">
  <!--% Copyright (c) 2006 - 2007 by 
% Stefan Wintermeyer <sw@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation;
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title>Installation Asterisk 1.4.x mit ISDN Treiber für Digium B410P auf
  Debian Linux 4.0 (Etch)</title>

  <indexterm>
    <primary>Asterisk 1.4 Installation</primary>

    <secondary>Debian Linux</secondary>
  </indexterm>

  <para>Diese Installationsanleitung dient zur Installation eines Asterisk
  Systems mit Treibern für eine Digium B410P ISDN Karte. Die Karte muss dafür
  bereits in dem System eingebaut sein.</para>

  <note>
    <para>Die hier aufgeführte Installationsanleitung ist für ein
    Asterisk-System mit allen in diesem Buch beschriebenen Features (bei
    Ausnahmen wird dies gesondert besprochen). Deshalb ist die Installation
    etwas umfangreicher. Das hat aber auch den Vorteil, das man in der Zukunft
    nicht noch einmal etwas nachinstallieren muss.</para>
  </note>

  <para>Es wird ein frisch installiertes Debian GNU/Linux 4.0 (a.k.a Etch)
  vorausgesetzt. Ein ISO-Image für die Installation finden Sie auf <ulink
  url="http://www.debian.org/releases/etch/debian-installer/">http://www.debian.org/releases/etch/debian-installer/</ulink>.
  Ich empfehle das etwa 140 MB grosse Netzinstallations-CD-Image. Eine Debian
  GNU/Linux-Installationsanleitung befindet sich unter <ulink
  url="http://www.debian.org/releases/etch/i386/">http://www.debian.org/releases/etch/i386/</ulink>.
  Ein allgemeines Anwenderhandbuch steht unter <ulink
  url="http://debiananwenderhandbuch.de/"><citetitle>http://debiananwenderhandbuch.de.</citetitle></ulink></para>

  <para><emphasis>Bitte loggen Sie sich nach der Installation als Benutzer
  root am System an und führen Sie alle hier angegebenen Befehle mit diesem
  Benutzer aus.</emphasis></para>

  <para>Als Erstes stellen Sie mit einem <command>apt-get update</command>
  sicher, dass <code>apt-get</code> alle aktuellen Paketlisten zur Verfügung
  hat:<screen>debian:~# apt-get update
Hole:1 http://ftp.de.debian.org etch Release.gpg [378B]
Hole:2 http://security.debian.org etch/updates Release.gpg [189B]
OK   http://ftp.de.debian.org etch Release                      
OK   http://security.debian.org etch/updates Release
Ign http://ftp.de.debian.org etch/main Packages/DiffIndex
Ign http://security.debian.org etch/updates/main Packages/DiffIndex
Ign http://ftp.de.debian.org etch/main Sources/DiffIndex
Ign http://security.debian.org etch/updates/main Sources/DiffIndex
OK   http://ftp.de.debian.org etch/main Packages
OK   http://security.debian.org etch/updates/main Packages
OK   http://ftp.de.debian.org etch/main Sources
OK   http://security.debian.org etch/updates/main Sources
Es wurden 2B in 0s geholt (3B/s)   
Paketlisten werden gelesen... Fertig
debian:~# </screen></para>

  <para>Um sicherzugehen, dass alle Pakete auf dem neuesten Stand sind, führen
  Sie noch ein <command>apt-get -y upgrade</command> aus:<screen>debian:~# apt-get -y upgrade
Paketlisten werden gelesen... Fertig
Abhängigkeitsbaum wird aufgebaut... Fertig
0 aktualisiert, 0 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.
debian:~# </screen></para>

  <para>Für den Fall das beim Upgrade der Pakete auch ein neuer Kernel
  installiert wurde, müssen wir jetzt das System mit <command>shutdown -r
  now</command> rebooten:<screen>debian:~# shutdown -r now

Broadcast message from root@debian (pts/0) (Fri May  4 19:43:09 2007):

The system is going down for reboot NOW!
</screen></para>

  <para>Nach dem Booten bitte wieder als root einloggen.</para>

  <para>Jetzt müssen Sie mit <command>apt-get -y install build-essential
  libncurses5-dev libcurl3-dev libvorbis-dev libspeex-dev unixodbc
  unixodbc-dev libiksemel-dev linux-headers-`uname -r` flex bc pciutils
  libnewt-dev libusb-dev`</command> noch ein paar Pakete nachinstallieren,
  damit das Kompilieren von Asterisk erfolgreich durchgeführt werden
  kann:</para>

  <screen>debian:~# apt-get -y install build-essential libncurses5-dev libcurl3-dev libvorbis-dev libspeex-dev unixodbc unixodbc-dev libiksemel-dev linux-headers-`uname -r` flex bc pciutils libnewt-dev libusb-dev
Paketlisten werden gelesen... Fertig
AbhÃ¤ngigkeitsbaum wird aufgebaut... Fertig
Die folgenden zusÃ¤tzlichen Pakete werden installiert:
  binutils ca-certificates comerr-dev cpp cpp-4.1 defoma dpkg-dev file
  fontconfig fontconfig-config g++ g++-4.1 gcc gcc-4.1 libaudio2 libc6-dev
  libcurl3 libcurl3-openssl-dev libexpat1 libfontconfig1 libfreetype6 libice6
  libidn11 libidn11-dev libiksemel3 libjpeg62 libkadm55 libkrb5-dev liblcms1
  libltdl3 libltdl3-dev libmagic1 libmng1 libodbcinstq1c2 libogg-dev libogg0
  libpci2 libpng12-0 libqt3-mt libsm6 libspeex1 libssl-dev libssp0
  libstdc++6-4.1-dev libvorbis0a libvorbisenc2 libvorbisfile3 libxcursor1
  libxext6 libxfixes3 libxft2 libxi6 libxinerama1 libxrandr2 libxrender1
  libxt6 linux-headers-2.6.18-5 linux-kbuild-2.6.18 linux-kernel-headers m4
  make odbcinst1debian1 openssl patch pkg-config ttf-dejavu ucf zlib1g-dev
Vorgeschlagene Pakete:
  binutils-doc doc-base cpp-doc gcc-4.1-locales defoma-doc psfontmgr
  x-ttcidfont-conf dfontmgr debian-keyring bison gcc-4.1-doc lib64stdc++6
  manpages-dev autoconf automake1.9 libtool gdb gcc-doc libc6-dev-amd64
  lib64gcc1 lib64ssp0 nas glibc-doc libcurl3-dbg libfreetype6-dev krb5-doc
  liblcms-utils libtool-doc libqt3-mt-psql libqt3-mt-mysql libqt3-mt-odbc
  speex libstdc++6-4.1-doc make-doc-non-dfsg diff-doc libgnome-dev libmyodbc
  odbc-postgresql libct1 libqt3-mt-dev
Empfohlene Pakete:
  libft-perl bzip2 libmudflap0-dev libgl1-mesa-glx libgl1 libglu1-mesa libglu1
  libxmu6 debconf-utils
Die folgenden NEUEN Pakete werden installiert:
  bc binutils build-essential ca-certificates comerr-dev cpp cpp-4.1 defoma
  dpkg-dev file flex fontconfig fontconfig-config g++ g++-4.1 gcc gcc-4.1

[...]

Richte libvorbis-dev ein (1.1.2.dfsg-1.2) ...
Richte linux-headers-2.6.18-4 ein (2.6.18.dfsg.1-12) ...
Richte linux-kbuild-2.6.18 ein (2.6.18-1) ...
Richte linux-headers-2.6.18-4-686 ein (2.6.18.dfsg.1-12) ...
Richte unixodbc-dev ein (2.2.11-13) ...
Richte libstdc++6-4.1-dev ein (4.1.1-21) ...
Richte g++-4.1 ein (4.1.1-21) ...
Richte g++ ein (4.1.1-15) ...

Richte build-essential ein (11.3) ...
debian:~#</screen>

  <para>Als nächstes wechseln wir mit <command>cd /usr/src</command> in das
  Verzeichnis <filename>/usr/src</filename><screen>debian:~# cd /usr/src
debian:/usr/src#</screen></para>

  <para>Auf der Asterisk-Homepage <ulink
  url="http://www.asterisk.org/"><citetitle>http://www.asterisk.org/</citetitle></ulink>
  finden Sie die notwendigen Quellen, um Asterisk zu mit allen sinnvollen
  Extras zu installieren. Nehmen Sie bitte eine <emphasis
  role="bold">stabile</emphasis> und keine Entwickler-Version und laden Sie
  diese mit <command>wget
  http://downloads.digium.com/pub/asterisk/asterisk-1.4-current.tar.gz</command>
  in das Verzeichnis <filename>/usr/src/</filename> herunter:</para>

  <screen>debian:/usr/src# wget http://downloads.digium.com/pub/asterisk/asterisk-1.4-current.tar.gz
--18:53:00--  http://downloads.digium.com/pub/asterisk/asterisk-1.4-current.tar.gz
           =&gt; `asterisk-1.4-current.tar.gz'
Auflösen des Hostnamen »downloads.digium.com«.... 69.16.138.164
Verbindungsaufbau zu downloads.digium.com[69.16.138.164]:80... verbunden.
HTTP Anforderung gesendet, warte auf Antwort... 200 OK
Länge: 10,928,902 [application/x-gzip]

100%[====================================&gt;] 10,928,902   230.71K/s    ETA 00:00

18:53:47 (227.00 KB/s) - »asterisk-1.4-current.tar.gz« gespeichert [10928902/10928902]
debian:/usr/src#</screen>

  <para>Weiterhin benötigen wir noch die aktuelle Zaptel-Version, die wir mit
  <command>wget
  http://downloads.digium.com/pub/zaptel/zaptel-1.4-current.tar.gz</command>
  downloaden:<screen>debian:/usr/src# wget http://downloads.digium.com/pub/zaptel/zaptel-1.4-current.tar.gz
--19:13:47--  http://downloads.digium.com/pub/zaptel/zaptel-1.4-current.tar.gz
           =&gt; `zaptel-1.4-current.tar.gz'
Auflösen des Hostnamen »downloads.digium.com«.... 216.27.40.102
Verbindungsaufbau zu downloads.digium.com|216.27.40.102|:80... verbunden.
HTTP Anforderung gesendet, warte auf Antwort... 200 OK
Länge: 2.835.893 (2.7M) [application/x-gzip]

100%[====================================&gt;] 2.835.893    119.68K/s    ETA 00:00

19:14:12 (115.45 KB/s) - »zaptel-1.4-current.tar.gz« gespeichert [2835893/2835893]

debian:/usr/src#</screen></para>

  <para>Die komprimierten Datein werden jetzt mit <command>tar xvzf
  asterisk-1.4-current.tar.gz &amp;&amp; tar xvzf
  zaptel-1.4-current.tar.gz</command> entpackt:<screen>debian:/usr/src# tar xvzf asterisk-1.4-current.tar.gz &amp;&amp; tar xvzf zaptel-1.4-current.tar.gz
asterisk-1.4.2/
asterisk-1.4.2/build_tools/
asterisk-1.4.2/build_tools/menuselect-deps.in
asterisk-1.4.2/build_tools/get_moduleinfo
asterisk-1.4.2/build_tools/mkpkgconfig
asterisk-1.4.2/build_tools/embed_modules.xml
asterisk-1.4.2/build_tools/get_makeopts
asterisk-1.4.2/build_tools/make_version

[...]

zaptel-1.4.1/timertest.c
zaptel-1.4.1/mec3-float.h
zaptel-1.4.1/zaptel.init
zaptel-1.4.1/hdlcverify.c
zaptel-1.4.1/fxstest.c
zaptel-1.4.1/zaptel-base.c
debian:/usr/src#  </screen></para>

  <remark>1.4 ist die erste Asterisk-Version, die den Unix/Linux üblichen
  autoconf-Mechanismus benutzt.</remark>

  <para><important>
      <para>Bitte beachten Sie das sich die folgenden Verzeichnisnamen
      natürlich mit aufsteigenden Versionsnummern im Laufe der Zeit verändern.
      Es liegt in der Natur einer Dokumentation, das diese Links nicht immer
      aktuell gehalten werden können.</para>
    </important></para>

  <para>Als erstes wechseln wir mit <command>cd zaptel-1.4.7.1</command> in
  das Zaptel Verzeichnis und rufen ein <command>./configure &amp;&amp; make
  &amp;&amp; make install &amp;&amp; make b410p</command> auf. Die Abarbeitung
  der einzelnen Skripte wird eine Weile dauern. Zeit für einen Tee.<screen>debian:/usr/src# cd zaptel-1.4.7.1
debian:/usr/src/zaptel-1.4.7.1# ./configure &amp;&amp; make &amp;&amp; make install &amp;&amp; make b410p
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E


[...]

make[3]: Leaving directory `/usr/src/zaptel-1.4.7.1/mISDNuser-1_1_3/voip'
make[3]: Entering directory `/usr/src/zaptel-1.4.7.1/mISDNuser-1_1_3/suppserv'
install -m 644 libsuppserv.a //usr/lib
install -m 644 libsuppserv_pic.a //usr/lib
install -m 644 libsuppserv.so //usr/lib
cp *.h //usr/include/mISDNuser/
make[3]: Leaving directory `/usr/src/zaptel-1.4.7.1/mISDNuser-1_1_3/suppserv'
make[3]: Entering directory `/usr/src/zaptel-1.4.7.1/mISDNuser-1_1_3/bridge'
for i in isdnbridge ; do \
		install -m 755 $i //usr/bin ;\
	done
make[3]: Leaving directory `/usr/src/zaptel-1.4.7.1/mISDNuser-1_1_3/bridge'
make[2]: Leaving directory `/usr/src/zaptel-1.4.7.1/mISDNuser-1_1_3'
cp include/*.h //usr/include/mISDNuser/
make[1]: Leaving directory `/usr/src/zaptel-1.4.7.1/mISDNuser-1_1_3'
debian:/usr/src/zaptel-1.4.7.1# </screen></para>

  <para>Danach gehen wir mit <command>cd /usr/src/asterisk-1.4.17</command> in
  das Asterisk Verzeichnis und führen auch dort ein <command>./configure
  &amp;&amp; make &amp;&amp; make install</command> aus:<screen>debian:/usr/src/zaptel-1.4.7.1# cd /usr/src/asterisk-1.4.17
debian:/usr/src/asterisk-1.4.17# ./configure &amp;&amp; make &amp;&amp; make install
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes

[...]

make[1]: Entering directory `/usr/src/asterisk-1.4.17/main'
for x in ; do /usr/bin/install -c -m 755 $x /usr/lib/asterisk/modules ; done
make[1]: Leaving directory `/usr/src/asterisk-1.4.17/main'
 +---- Asterisk Installation Complete -------+
 +                                           +
 +    YOU MUST READ THE SECURITY DOCUMENT    +
 +                                           +
 + Asterisk has successfully been installed. +
 + If you would like to install the sample   +
 + configuration files (overwriting any      +
 + existing config files), run:              +
 +                                           +
 +               make samples                +
 +                                           +
 +-----------------  or ---------------------+
 +                                           +
 + You can go ahead and install the asterisk +
 + program documentation now or later run:   +
 +                                           +
 +              make progdocs                +
 +                                           +
 + **Note** This requires that you have      +
 + doxygen installed on your local system    +
 +-------------------------------------------+
debian:/usr/src/asterisk-1.4.17# </screen></para>

  <para>Die eben kompilierten Programmdateien sind jetzt auf dem System
  installiert. Allerdings finden wir im Asterisk-Konfigurationsverzeichnis
  <filename>/etc/asterisk/</filename> noch gähnende Leere vor. In diesem
  Verzeichnis liegen die Konfigurationsdateien von Asterisk und da wir nicht
  von Null beginnen möchten, lassen wir uns die Standarddateien erstellen.
  Dies erreichen wir mit einem <command>make samples</command></para>

  <screen>debian:/usr/src/asterisk-1.4.17# make samples
mkdir -p /etc/asterisk
for x in configs/*.adsi; do \
  if [ ! -f /etc/asterisk/$x ]; then \
   /usr/bin/install -c -m 644 $x /etc/asterisk/`/usr/bin/basename $x` ; \
  fi ; \
 done
mkdir -p /etc/asterisk

[...]

  echo "Skipping asterisk.conf creation"; \
 fi
mkdir -p /var/spool/asterisk/voicemail/default/1234/INBOX
build_tools/make_sample_voicemail //var/lib/asterisk //var/spool/asterisk
debian:/usr/src/asterisk-1.4.17#</screen>

  <para>Fertig! Asterisk ist auf Ihrem System installiert. Mit dem Befehl
  <command>asterisk -V</command> können Sie die installierte Version
  rausfinden (bitte achten Sie auf das großgeschriebene V):<screen>debian:/usr/src/asterisk-1.4.17# asterisk -V
Asterisk 1.4.17
debian:/usr/src/asterisk-1.4.17# </screen></para>

  <section>
    <title>Konfiguration der ISDN-Karte</title>

    <para>Ob die von Ihnen eingebaute B410P ISDN-Karte auch richtig erkannt
    wird, können Sie mit dem Kommando <command>/usr/sbin/misdn-init
    scan</command> überprüfen:</para>

    <para><screen>debian:/usr/src/asterisk-1.4.17# /usr/sbin/misdn-init scan
[OK] found the following devices:
card=1,0x4
[ii] run "/usr/sbin/misdn-init config" to store this information to /etc/misdn-init.conf
debian:/usr/src/asterisk-1.4.17#  </screen>Die für den Betrieb der Karte
    notwendige Konfigurationsdatei kann mit dem Kommando
    <command>/usr/sbin/misdn-init config</command> erstellt werden:<screen>debian:/usr/src/asterisk-1.4.17# /usr/sbin/misdn-init config
[OK] /etc/misdn-init.conf created. It's now safe to run "/usr/sbin/misdn-init start"
[ii] make your ports (1-4) available in asterisk by editing "/etc/asterisk/misdn.conf"
debian:/usr/src/asterisk-1.4.17#</screen></para>

    <para>Die erstellte Standardkonfiguration können Sie mit
    <command>/etc/init.d/misdn-init start</command> in Betrieb nehmen:<screen>debian:/usr/src/asterisk-1.4.17# /etc/init.d/misdn-init start
-----------------------------------------
 Loading module(s) for your misdn-cards:
-----------------------------------------
/sbin/modprobe --ignore-install hfcmulti type=0x4 protocol=0x2,0x2,0x2,0x2 layermask=0xf,0xf,0xf,0xf poll=128 debug=0
/sbin/modprobe mISDN_dsp debug=0x0 options=0 poll=128 dtmfthreshold=100
[i] creating device node: /dev/mISDN
debian:/usr/src/asterisk-1.4.17#</screen></para>

    <para>Die Konfigurationsdateien <filename>/etc/misdn-init.conf</filename>
    und <filename>/etc/asterisk/misdn.conf</filename> sind sehr gut
    dokumentiert. Für den ersten Test sollten Sie nur sicherstellen, dass in
    der <filename>/etc/misdn-init.conf</filename> der Eintrag Port settings
    für Ihre Bedürfnisse passend ist. <tip>
        <para>Die Portnummern stehen auf der Karte klein neben den
        entsprechenden Ports.</para>
      </tip></para>
  </section>

  <section>
    <title>Start- und Stopskripte</title>

    <para>Damit Asterisk beim Booten des Rechners auch automatisch gestartet
    und bei einem Shutdown auch ordentlich runtergefahren wird, benötigen wir
    noch entsprechende Init-Skripte. Diese können im Verzeichnise
    <filename>/usr/src/asterisk-1.4.2</filename> mit dem von den Entwicklern
    etwas unglücklich gewählten Befehl <command>make config</command> erstellt
    werden:<screen>debian:/usr/src/asterisk-1.4.17# make config
 Adding system startup for /etc/init.d/asterisk ...
   /etc/rc2.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc3.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc4.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc5.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc2.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc3.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc4.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc5.d/S50asterisk -&gt; ../init.d/asterisk
debian:/usr/src/asterisk-1.4.17# </screen></para>
  </section>

  <section>
    <title>Konfiguration der ISDN-Anschlussart</title>

    <para>Bitte erkundigen Sie sich vor dem nächsten Schritt über die Art
    Ihres ISDN-Anschlusses. Mit der hier besprochenen B410P ISDN-Karte können
    Sie Anlagen- und Mehrgeräteanschlüsse betreiben.</para>

    <section>
      <title>Anlagenanschluss</title>

      <para>Sie haben Glück, denn die Standardkonfiguration enthält bereits
      den Eintrag <parameter>te_ptmp=1,2,3,4</parameter> und das bedeutet,
      dass auf allen vier Ports Point-to-Multi-Point (Anlagenanschluss)
      signalisiert wird.</para>
    </section>

    <section>
      <title>Mehrgeräteanschluss</title>

      <para>Bitte tauschen Sie in der
      <filename>/etc/misdn-init.conf</filename> die Zeile
      <code>te_ptmp=1,2,3,4</code> gegen den Eintrag
      <code>te_ptp=1,2,3,4</code> aus. Bitte nach einer Anpassung dieser Datei
      das <command>/etc/init.d/misdn-init restart</command> nicht
      vergessen.</para>
    </section>
  </section>
</section>