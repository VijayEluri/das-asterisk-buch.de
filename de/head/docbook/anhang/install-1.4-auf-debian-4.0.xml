<?xml version="1.0" encoding="ISO-8859-1"?>
<section id="installation-1.4-debian-4.0" lang="de" revision="$Revision:473 $">
  <!--% Copyright (c) 2006 - 2007 by 
% Stefan Wintermeyer <sw@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation;
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title>Installation Asterisk 1.4.x auf Debian Linux 4.0 (Etch)</title>

  <indexterm>
    <primary>Asterisk 1.4 Installation</primary>

    <secondary>Debian Linux</secondary>
  </indexterm>

  <para>Die hier aufgeführte Installationsanleitung ist für ein
  Asterisk-System mit allen in diesem Buch beschriebenen Features (bei
  Ausnahmen wird dies gesondert besprochen). Deshalb ist die Installation
  etwas umfangreicher. Das hat aber auch den Vorteil, das man in der Zukunkt
  nicht noch einmal etwas nachinstallieren muss.</para>

  <para>Es wird ein frisch installiertes Debian GNU/Linux 4.0 (a.k.a Etch)
  vorausgesetzt. Ein ISO-Image für eine entsprechende i386er Debian
  Linux-Installation finden Sie unter <ulink
  url="http://ftp.de.debian.org/debian-cd/3.1_r5/i386/iso-cd/debian-31r5-i386-netinst.iso"><citetitle>http://cdimage.debian.org/debian-cd/4.0_r0/i386/iso-cd/debian-40r0-i386-netinst.iso</citetitle></ulink>.
  Eine Debian GNU/Linux-Installationsanleitung befindet sich unter <ulink
  url="http://www.debian.org/releases/stable/i386/"><citetitle>http://www.debian.org/releases/stable/i386/</citetitle></ulink>.
  Ein allgemeines Anwenderhandbuch steht unter <ulink
  url="http://debiananwenderhandbuch.de/"><citetitle>http://debiananwenderhandbuch.de.</citetitle></ulink></para>

  <para><emphasis>Bitte loggen Sie sich nach der Installation als Benutzer
  root am System an und führen Sie alle hier angegebenen Befehle mit diesem
  Benutzer aus.</emphasis></para>

  <para>Als Erstes stellen Sie mit einem <command>apt-get update</command>
  sicher, dass <code>apt-get</code> alle aktuellen Paketlisten zur Verfügung
  hat:<screen>debian:~# apt-get update
Ign cdrom://[Debian GNU/Linux 4.0 r0 _Etch_ - Official i386 NETINST Binary-1 20070407-11:29] etch Release.gpg
Ign cdrom://[Debian GNU/Linux 4.0 r0 _Etch_ - Official i386 NETINST Binary-1 20070407-11:29] etch Release
Ign cdrom://[Debian GNU/Linux 4.0 r0 _Etch_ - Official i386 NETINST Binary-1 20070407-11:29] etch/contrib Packages/DiffIndex
Ign cdrom://[Debian GNU/Linux 4.0 r0 _Etch_ - Official i386 NETINST Binary-1 20070407-11:29] etch/main Packages/DiffIndex
Hole:1 http://security.debian.org etch/updates Release.gpg [189B]
OK   http://security.debian.org etch/updates Release
Ign http://security.debian.org etch/updates/main Packages/DiffIndex   
Hole:2 http://ftp.de.debian.org etch Release.gpg [378B]
Ign http://security.debian.org etch/updates/contrib Packages/DiffIndex
Ign http://security.debian.org etch/updates/main Sources/DiffIndex 
OK   http://ftp.de.debian.org etch Release                         
Ign http://security.debian.org etch/updates/contrib Sources/DiffIndex
OK   http://security.debian.org etch/updates/main Packages
OK   http://security.debian.org etch/updates/contrib Packages
Ign http://ftp.de.debian.org etch/main Packages/DiffIndex          
OK   http://security.debian.org etch/updates/main Sources          
OK   http://security.debian.org etch/updates/contrib Sources       
Ign http://ftp.de.debian.org etch/main Sources/DiffIndex           
OK   http://ftp.de.debian.org etch/main Packages
OK   http://ftp.de.debian.org etch/main Sources
Es wurden 2B in 1s geholt (1B/s)
Paketlisten werden gelesen... Fertig
debian:~# </screen></para>

  <para>Um sicherzugehen, dass alle Pakete auf dem neuesten Stand sind, führen
  Sie noch ein <command>apt-get -y upgrade</command> aus:<screen>debian:~# apt-get -y upgrade
Paketlisten werden gelesen... Fertig
Abhängigkeitsbaum wird aufgebaut... Fertig
0 aktualisiert, 0 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.
debian:~# </screen></para>

  <para>Für den Fall das beim Upgrade der Pakete auch ein neuer Kernel
  installiert wurde, müssen wir jetzt das System mit <command>shutdown -r
  now</command> rebooten:<screen>debian:~# shutdown -r now

Broadcast message from root@debian (pts/0) (Fri May  4 19:43:09 2007):

The system is going down for reboot NOW!
</screen></para>

  <para>Nach dem Booten bitte wieder als root einlogen.</para>

  <para>Jetzt müssen Sie mit <command>apt-get -y install build-essential
  libncurses5-dev libcurl3-dev libvorbis-dev libspeex-dev unixodbc
  unixodbc-dev libiksemel-dev linux-headers-`uname -r`</command> noch ein paar
  Pakete nachinstallieren, damit das Kompilieren von Asterisk erfolgreich
  durchgeführt werden kann:</para>

  <screen>debian:~# apt-get -y install build-essential libncurses5-dev libcurl3-dev libvorbis-dev libspeex-dev unixodbc unixodbc-dev libiksemel-dev linux-headers-`uname -r`
Paketlisten werden gelesen... Fertig
Abhängigkeitsbaum wird aufgebaut... Fertig
Die folgenden zusätzlichen Pakete werden installiert:
  binutils ca-certificates comerr-dev cpp cpp-4.1 defoma dpkg-dev fontconfig
  fontconfig-config g++ g++-4.1 gcc gcc-4.1 libaudio2 libc6-dev libcurl3
  libcurl3-openssl-dev libexpat1 libfontconfig1 libfreetype6 libice6
  libidn11-dev libiksemel3 libjpeg62 libkadm55 libkrb5-dev liblcms1 libltdl3
  libltdl3-dev libmng1 libodbcinstq1c2 libogg-dev libogg0 libpng12-0 libqt3-mt
  libsm6 libspeex1 libssl-dev libssp0 libstdc++6-4.1-dev libvorbis0a
  libvorbisenc2 libvorbisfile3 libxcursor1 libxext6 libxfixes3 libxft2 libxi6
  libxinerama1 libxrandr2 libxrender1 libxt6 linux-headers-2.6.18-4
  linux-kbuild-2.6.18 linux-kernel-headers make odbcinst1debian1 openssl
  pkg-config ttf-dejavu zlib1g-dev
Vorgeschlagene Pakete:
  binutils-doc doc-base cpp-doc gcc-4.1-locales defoma-doc psfontmgr
  x-ttcidfont-conf dfontmgr debian-keyring gcc-4.1-doc lib64stdc++6
  manpages-dev autoconf automake1.9 libtool flex bison gdb gcc-doc
  libc6-dev-amd64 lib64gcc1 lib64ssp0 nas glibc-doc libcurl3-dbg
  libfreetype6-dev krb5-doc liblcms-utils libtool-doc libqt3-mt-psql
  libqt3-mt-mysql libqt3-mt-odbc speex libstdc++6-4.1-doc make-doc-non-dfsg
  libgnome-dev libmyodbc odbc-postgresql libct1 libqt3-mt-dev
Empfohlene Pakete:
  libft-perl bzip2 libmudflap0-dev libgl1-mesa-glx libgl1 libglu1-mesa libglu1
  libxmu6
Die folgenden NEUEN Pakete werden installiert:
  binutils build-essential ca-certificates comerr-dev cpp cpp-4.1 defoma
  dpkg-dev fontconfig fontconfig-config g++ g++-4.1 gcc gcc-4.1 libaudio2
  libc6-dev libcurl3 libcurl3-dev libcurl3-openssl-dev libexpat1
  libfontconfig1 libfreetype6 libice6 libidn11-dev libiksemel-dev libiksemel3
  libjpeg62 libkadm55 libkrb5-dev liblcms1 libltdl3 libltdl3-dev libmng1
  libncurses5-dev libodbcinstq1c2 libogg-dev libogg0 libpng12-0 libqt3-mt
  libsm6 libspeex-dev libspeex1 libssl-dev libssp0 libstdc++6-4.1-dev
  libvorbis-dev libvorbis0a libvorbisenc2 libvorbisfile3 libxcursor1 libxext6
  libxfixes3 libxft2 libxi6 libxinerama1 libxrandr2 libxrender1 libxt6
  linux-headers-2.6.18-4 linux-headers-2.6.18-4-686 linux-kbuild-2.6.18
  linux-kernel-headers make odbcinst1debian1 openssl pkg-config ttf-dejavu
  unixodbc unixodbc-dev zlib1g-dev
0 aktualisiert, 70 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.
Es müssen noch 23,1MB von 37,0MB Archiven geholt werden.
Nach dem Auspacken werden 133MB Plattenplatz zusätzlich benutzt.
Hole:1 http://ftp.de.debian.org etch/main libice6 1:1.0.1-2 [42,6kB]
Hole:2 http://ftp.de.debian.org etch/main libsm6 1:1.0.1-3 [18,0kB]
Hole:3 http://ftp.de.debian.org etch/main libxt6 1:1.0.2-2 [154kB]
Hole:4 http://ftp.de.debian.org etch/main linux-kernel-headers 2.6.18-7 [1875kB]

[...]

Richte libvorbis-dev ein (1.1.2.dfsg-1.2) ...
Richte linux-headers-2.6.18-4 ein (2.6.18.dfsg.1-12) ...
Richte linux-kbuild-2.6.18 ein (2.6.18-1) ...
Richte linux-headers-2.6.18-4-686 ein (2.6.18.dfsg.1-12) ...
Richte unixodbc-dev ein (2.2.11-13) ...
Richte libstdc++6-4.1-dev ein (4.1.1-21) ...
Richte g++-4.1 ein (4.1.1-21) ...
Richte g++ ein (4.1.1-15) ...

Richte build-essential ein (11.3) ...
debian:~#</screen>

  <para>Als nächstes wechseln wir mit <command>cd /usr/src</command> in das
  Verzeichnis <filename>/usr/src</filename><screen>debian:~# cd /usr/src
debian:/usr/src#</screen></para>

  <para>Auf der Asterisk-Homepage <ulink
  url="http://www.asterisk.org/"><citetitle>http://www.asterisk.org/</citetitle></ulink>
  finden Sie die notwendigen Quellen, um Asterisk zu mit allen sinnvollen
  Extras zu installieren. Nehmen Sie bitte eine <emphasis
  role="bold">stabile</emphasis> und keine Entwickler-Version und laden Sie
  diese mit <command>wget
  http://ftp.digium.com/pub/asterisk/asterisk-1.4-current.tar.gz</command> in
  das Verzeichnis <filename>/usr/src/</filename> herunter:</para>

  <screen>debian:/usr/src# wget http://ftp.digium.com/pub/asterisk/asterisk-1.4-current.tar.gz
--18:53:00--  http://ftp.digium.com/pub/asterisk/asterisk-1.4-current.tar.gz
           =&gt; `asterisk-1.4-current.tar.gz'
Auflösen des Hostnamen »ftp.digium.com«.... 69.16.138.164
Verbindungsaufbau zu ftp.digium.com[69.16.138.164]:80... verbunden.
HTTP Anforderung gesendet, warte auf Antwort... 200 OK
Länge: 10,928,902 [application/x-gzip]

100%[====================================&gt;] 10,928,902   230.71K/s    ETA 00:00

18:53:47 (227.00 KB/s) - »asterisk-1.4-current.tar.gz« gespeichert [10928902/10928902]
debian:/usr/src#</screen>

  <para>Weiterhin benötigen wir noch die aktuelle Zaptel-Version, die wir mit
  <command>wget
  http://ftp.digium.com/pub/zaptel/zaptel-1.4-current.tar.gz</command>
  downloaden:<screen>debian:/usr/src# wget http://ftp.digium.com/pub/zaptel/zaptel-1.4-current.tar.gz
--19:13:47--  http://ftp.digium.com/pub/zaptel/zaptel-1.4-current.tar.gz
           =&gt; `zaptel-1.4-current.tar.gz'
Auflösen des Hostnamen »ftp.digium.com«.... 216.27.40.102
Verbindungsaufbau zu ftp.digium.com|216.27.40.102|:80... verbunden.
HTTP Anforderung gesendet, warte auf Antwort... 200 OK
Länge: 2.835.893 (2.7M) [application/x-gzip]

100%[====================================&gt;] 2.835.893    119.68K/s    ETA 00:00

19:14:12 (115.45 KB/s) - »zaptel-1.4-current.tar.gz« gespeichert [2835893/2835893]

debian:/usr/src#</screen></para>

  <para>Die komprimierten Datein werden jetzt mit <command>tar xvzf
  asterisk-1.4-current.tar.gz &amp;&amp; tar xvzf
  zaptel-1.4-current.tar.gz</command> entpackt:<screen>debian:/usr/src# tar xvzf asterisk-1.4-current.tar.gz &amp;&amp; tar xvzf zaptel-1.4-current.tar.gz
asterisk-1.4.2/
asterisk-1.4.2/build_tools/
asterisk-1.4.2/build_tools/menuselect-deps.in
asterisk-1.4.2/build_tools/get_moduleinfo
asterisk-1.4.2/build_tools/mkpkgconfig
asterisk-1.4.2/build_tools/embed_modules.xml
asterisk-1.4.2/build_tools/get_makeopts
asterisk-1.4.2/build_tools/make_version

[...]

zaptel-1.4.1/timertest.c
zaptel-1.4.1/mec3-float.h
zaptel-1.4.1/zaptel.init
zaptel-1.4.1/hdlcverify.c
zaptel-1.4.1/fxstest.c
zaptel-1.4.1/zaptel-base.c
debian:/usr/src#  </screen></para>

  <remark>1.4 ist die erste Asterisk-Version, die den Unix/Linux üblichen
  autoconf-Mechanismus benutzt.</remark>

  <para>Als erstes wechseln wir mit <command>cd zaptel-1.4.1</command> in das
  Zaptel Verzeichnis und rufen ein <command>./configure &amp;&amp; make
  &amp;&amp; make install</command> auf:<screen>debian:/usr/src# cd zaptel-1.4.1
debian:/usr/src/zaptel-1.4.1# ./configure &amp;&amp; make &amp;&amp; make install
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o

[...]

/usr/bin/install -c -m 644 doc/zttool.8 /usr/share/man/man8
[ `id -u` = 0 ] &amp;&amp; /sbin/depmod -a 2.6.18-4-686 || :
[ -f /etc/zaptel.conf ] || /usr/bin/install -c -D -m 644 zaptel.conf.sample /etc/zaptel.conf
build_tools/genmodconf linux26 "" "pciradio tor2 torisa wcfxo wct1xxp wctdm wctdm24xxp wcte11xp wcusb ztd-eth ztd-loc wcte12xp wct4xxp wctc4xxp wcfxs wctdm8xxp wct2xxp"
Building /etc/modprobe.d/zaptel...
***
*** WARNING:
*** If you had custom settings in /etc/modprobe.d/zaptel,
*** they have been moved to /etc/modprobe.d/zaptel.bak.
***
*** In the future, do not edit /etc/modprobe.d/zaptel, but
*** instead put your changes in another file
*** in the same directory so that they will not
*** be overwritten by future Zaptel updates.
***
debian:/usr/src/zaptel-1.4.1#</screen></para>

  <para>Zum Arbeiten mit Konferenzräumen benötigen wir das Kernelmodul
  <code>ztdummy</code>. Dies laden wir jetzt mit dem Kommando
  <command>modprobe ztdummy</command><screen>debian:/usr/src/zaptel-1.4.1# modprobe ztdummy
debian:/usr/src/zaptel-1.4.1#</screen>Danach gehen wir mit <command>cd
  /usr/src/asterisk-1.4.2</command> in das Asterisk Verzeichnis und führen
  auch dort ein <command>./configure &amp;&amp; make &amp;&amp; make
  install</command> aus:<screen>debian:/usr/src/zaptel-1.4.1# cd /usr/src/asterisk-1.4.2
debian:/usr/src/asterisk-1.4.2# ./configure &amp;&amp; make &amp;&amp; make install
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes

[...]

for x in ; do /usr/bin/install -c -m 755 $x /usr/lib/asterisk/modules ; done
make[1]: Leaving directory `/usr/src/asterisk-1.4.2/main'
 +---- Asterisk Installation Complete -------+
 +                                           +
 +    YOU MUST READ THE SECURITY DOCUMENT    +
 +                                           +
 + Asterisk has successfully been installed. +
 + If you would like to install the sample   +
 + configuration files (overwriting any      +
 + existing config files), run:              +
 +                                           +
 +               make samples                +
 +                                           +
 +-----------------  or ---------------------+
 +                                           +
 + You can go ahead and install the asterisk +
 + program documentation now or later run:   +
 +                                           +
 +              make progdocs                +
 +                                           +
 + **Note** This requires that you have      +
 + doxygen installed on your local system    +
 +-------------------------------------------+
debian:/usr/src/asterisk-1.4.2#</screen></para>

  <para>Die eben kompilierten Programmdateien sind jetzt auf dem System
  installiert. Allerdings finden wir im Asterisk-Konfigurationsverzeichnis
  <filename>/etc/asterisk/</filename> noch gähnende Leere vor. In diesem
  Verzeichnis liegen die Konfigurationsdateien von Asterisk und da wir nicht
  von Null beginnen möchten, lassen wir uns die Standarddateien erstellen.
  Dies erreichen wir mit einem <command>make samples</command>:</para>

  <screen>debian:/usr/src/asterisk-1.4.2# make samples
mkdir -p /etc/asterisk
for x in configs/*.adsi; do \
        if [ ! -f /etc/asterisk/$x ]; then \
                /usr/bin/install -c -m 644 $x /etc/asterisk/`/usr/bin/basename $x` ; \
        fi ; \

[...]

for x in vm-theperson digits/1 digits/2 digits/3 digits/4 vm-isonphone; do \
        cat /var/lib/asterisk/sounds/$x.gsm &gt;&gt; /var/spool/asterisk/voicemail/default/1234/busy.gsm ; \
done
debian:/usr/src/asterisk-1.4.2# </screen>

  <para>Fertig! Asterisk ist auf Ihrem System installiert. Mit dem Befehl
  <command>asterisk -V</command> können Sie die installierte Version
  rausfinden (bitte achten Sie auf das großgeschriebene V):<screen>debian:/usr/src/asterisk-1.4.2# asterisk -V
Asterisk 1.4.2
debian:/usr/src/asterisk-1.4.2# </screen></para>

  <section>
    <title>Start- und Stopskripte</title>

    <para>Damit Asterisk beim Booten des Rechners auch automatisch gestartet
    und bei einem Shutdown auch ordentlich runtergefahren wird, benötigen wir
    noch entsprechende Init-Skripte. Diese können im Verzeichnise
    <filename>/usr/src/asterisk-1.4.2</filename> mit dem von den Entwicklern
    etwas unglücklich gewählten Befehl <command>make config</command> erstellt
    werden:<screen>debian:/usr/src/asterisk-1.4.2# make config
 Adding system startup for /etc/init.d/asterisk ...
   /etc/rc2.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc3.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc4.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc5.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc2.d/S10asterisk -&gt; ../init.d/asterisk
   /etc/rc3.d/S10asterisk -&gt; ../init.d/asterisk
   /etc/rc4.d/S10asterisk -&gt; ../init.d/asterisk
   /etc/rc5.d/S10asterisk -&gt; ../init.d/asterisk
debian:/usr/src/asterisk-1.4.2#</screen></para>

    <para>Damit das Kernelmodul ztdummy beim Booten automatisch geladen wird,
    muss es mit dem Kommando <command>echo "ztdummy" &gt;&gt;
    /etc/modules</command> in die entsprechende Datei eingetragen
    werden:<screen>debian:/usr/src/asterisk-1.4.2# echo "ztdummy" &gt;&gt; /etc/modules
debian:/usr/src/asterisk-1.4.2# </screen></para>
  </section>
</section>