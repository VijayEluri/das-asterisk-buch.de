<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section id="applications-macroexclusive" revision="$Revision$">

    <title><code>MacroExclusive()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MacroExclusive()</code></secondary>
    </indexterm>

    <simpara>Ruft ein zuvor definiertes Makro auf. Aber nur eins zu einem
    gegebenen Zeitpunkt.</simpara>

    <synopsis>MacroExclusive(<replaceable>macroname</replaceable>[,<replaceable>Arg1</replaceable>[,<replaceable>Arg2</replaceable>[,<replaceable>...</replaceable>]]])</synopsis>

    <simpara>Führt - wie <code>Macro()</code> - ein im Context
    <code>macro-<replaceable>macroname</replaceable></code> definiertes Makro
    aus (und nur das eine!), indem es zur <code>s</code>-Extension dieses
    Contextes springt und nach der Ausführung des Makros zurückkehrt. Wird das
    Macro während es bereits läuft an einer anderen Stelle des Dialplanes noch
    einmal aufgerufen, so muss diese Instanz warten, bis das erste Macro
    fertig abgearbeitet ist.</simpara>

    <simpara>Die angerufene Extension, Context und Priorität sind innerhalb
    des Makros in <code>${MACRO_EXTEN}</code>, <code>${MACRO_CONTEXT}</code>
    und <code>${MACRO_PRIORITY}</code> verfügbar. Die Parameter
    <code>Arg1</code>, <code>Arg2</code> ... werden im MakroContext zu
    <code>${ARG1}</code>, <code>${ARG2}</code> usw.</simpara>

    <simpara><code>Macro()</code> liefert -1 zurück, falls irgendein Schritt
    des Makros -1 zurückliefert, sonst 0. Falls bei Beendigung des Ablaufs
    <code>${MACRO_OFFSET}</code> gesetzt ist, versucht die Anwendung bei
    Priorität n+1+<code>MACRO_OFFSET</code> fortzufahren, falls ein solcher
    Schritt existiert, sonst bei n+1.</simpara>

    <simpara>Falls die <code>Goto()</code>-Anwendung aus dem Makro heraus
    aufgerufen wird, wird das Makro enden und die Kontrolle an das Ziel von
    <code>Goto()</code> gehen.</simpara>

    <programlisting>; ein Makro definieren, das vom übergebenen Wert runterzählt:
[macro-countdown]
exten =&gt; s,1,Set(COUNT=${ARG1})
exten =&gt; s,n,While($[ ${COUNT} &gt; 0])
exten =&gt; s,n,SayNumber(${COUNT})
exten =&gt; s,n,Set(COUNT=$[ ${COUNT} - 1 ])
exten =&gt; s,n,EndWhile()

[default]
exten =&gt; 123,1,MacroExclusive(countdown,3)   ; das Makro "countdown" mit ARG1=3 aufrufen
exten =&gt; 124,1,MacroExclusive(countdown,5)   ; das Makro "countdown" mit ARG1=5 aufrufen</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'MacroExclusive' =- 

[Synopsis]
Exclusive Macro Implementation

[Description]
  MacroExclusive(macroname|arg1|arg2...):
Executes macro defined in the context 'macro-macroname'
Only one call at a time may run the macro.
(we'll wait if another call is busy executing in the Macro)
Arguments and return values as in application Macro()</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>-- in Version 1.2 nicht vorhanden --</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applications-macro" />, <xref
      linkend="applications-goto" />, <xref linkend="applications-gosub" />,
      <filename>doc/macroexclusive.txt</filename></para>
    </formalpara>
  
</section>
