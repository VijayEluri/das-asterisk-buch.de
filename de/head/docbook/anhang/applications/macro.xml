<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section id="applications-macro" revision="$Revision$">
    <title><literal>Macro()</literal></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Macro()</code></secondary>
    </indexterm>

    <simpara>Ruft ein zuvor definiertes Makro auf.</simpara>

    <synopsis>Macro(<replaceable>macroname</replaceable>[,<replaceable>Arg1</replaceable>[,<replaceable>Arg2</replaceable>[,<replaceable>...</replaceable>]]])</synopsis>

    <simpara>Führt ein im Context
    <code>macro-<replaceable>macroname</replaceable></code> definiertes Makro
    aus, indem es zur <code>s</code>-Extension dieses Contextes springt und
    nach der Ausführung des Makros zurückkehrt.</simpara>

    <simpara>Die angerufene Extension, Context und Priorität sind innerhalb
    des Makros in<code> ${MACRO_EXTEN}</code>, <code>${MACRO_CONTEXT}</code>
    und <code>${MACRO_PRIORITY}</code> verfügbar. Die Parameter
    <code>Arg1</code>, <code>Arg2</code> ... werden im MakroContext zu
    <code>${ARG1}</code>, <code>${ARG2}</code> usw.</simpara>

    <simpara><code>Macro()</code> liefert -1 zurück, falls irgendein Schritt
    des Makros -1 zurückliefert, sonst 0. Falls bei Beendigung des Ablaufs
    <code>${MACRO_OFFSET}</code> gesetzt ist, versucht die Anwendung bei
    Priorität n+1+<code>MACRO_OFFSET</code> fortzufahren, falls ein solcher
    Schritt existiert, sonst bei n+1.</simpara>

    <simpara>Falls die <code>Goto()</code>-Anwendung aus dem Makro heraus
    aufgerufen wird, wird das Makro enden und die Kontrolle an das Ziel von
    <code>Goto()</code> gehen.</simpara>

    <programlisting>; ein Makro definieren, das vom übergebenen Wert runterzählt:
[macro-countdown]
exten =&gt; s,1,Set(COUNT=${ARG1})
exten =&gt; s,n,While($[ ${COUNT} &gt; 0])
exten =&gt; s,n,SayNumber(${COUNT})
exten =&gt; s,n,Set(COUNT=$[ ${COUNT} - 1 ])
exten =&gt; s,n,EndWhile()

[default]
exten =&gt; 123,1,Macro(countdown,3)   ; das Makro "countdown" mit ARG1=3 aufrufen
exten =&gt; 124,1,Macro(countdown,5)   ; das Makro "countdown" mit ARG1=5 aufrufen</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Macro' =- 

[Synopsis]
Macro Implementation

[Description]
  Macro(macroname|arg1|arg2...): Executes a macro using the context
'macro-&lt;macroname&gt;', jumping to the 's' extension of that context and
executing each step, then returning when the steps end. 
The calling extension, context, and priority are stored in ${MACRO_EXTEN}, 
${MACRO_CONTEXT} and ${MACRO_PRIORITY} respectively.  Arguments become
${ARG1}, ${ARG2}, etc in the macro context.
If you Goto out of the Macro context, the Macro will terminate and control
will be returned at the location of the Goto.
If ${MACRO_OFFSET} is set at termination, Macro will attempt to continue
at priority MACRO_OFFSET + N + 1 if such a step exists, and N + 1 otherwise.
WARNING: Because of the way Macro is implemented (it executes the priorities
         contained within it via sub-engine), and a fixed per-thread
         memory stack allowance, macros are limited to 7 levels
         of nesting (macro calling macro calling macro, etc.); It
         may be possible that stack-intensive applications in deeply nested macros
         could cause asterisk to crash earlier than this limit.</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>22,23c22,23
&lt;          may be possible that stack-intensive applications in deeply nested macros
&lt;          could cause asterisk to crash earlier than this limit.
---
&gt;          may be possible that stack-intensive applications in deeply nested
&gt;          macros could cause asterisk to crash earlier than this limit.</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applications-goto" />, <xref
      linkend="applications-gosub" /></para>
    </formalpara>
</section>
