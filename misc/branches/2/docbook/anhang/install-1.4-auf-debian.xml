<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section id="installation-1.4-debian" lang="de" revision="$Revision:473 $">
  <!--
% Copyright (c) 2006 - 2007 by 
% Stefan Wintermeyer <sw@amooma.de>
% 2009 Philipp Kempgen <philipp.kempgen@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation;
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de
-->

  <title>Installation von Asterisk 1.4.x auf Debian Linux</title>

  <indexterm>
    <primary>Installation</primary>

    <secondary>Asterisk 1.4</secondary>

    <tertiary>Debian</tertiary>
  </indexterm>

  <para>Die hier aufgeführte Installationsanleitung gilt für ein
  Asterisk-System mit allen in diesem Buch beschriebenen Features (bei
  Ausnahmen wird dies gesondert besprochen). Deshalb ist die Installation
  etwas umfangreicher. Das hat aber auch den Vorteil, dass Sie in Zukunft
  nicht noch einmal etwas nachinstallieren müssen.<tip>
      <para>Falls Sie zum ersten Experimentieren mit Asterisk nicht direkt
      einen Rechner neu installieren wollen, empfehlen wir Ihnen eine <link
      linkend="installation-1.4-knoppix-5.1">Installation in einem
      Knoppix-Live-System</link>.</para>
    </tip></para>

  <para>Es wird ein frisch installiertes Debian GNU/Linux 5.0
  (<quote>Lenny</quote>) vorausgesetzt. Ein ISO-Image für die Installation
  finden Sie auf <ulink
  url="http://www.debian.org/releases/lenny/debian-installer/">http://www.debian.org/releases/lenny/debian-installer/</ulink>.
  Wir empfehlen das etwa 150 MByte große Netzinstallations-CD-Image<footnote>
      <para>In der Regel werden Sie das für die Architektur
      <literal>i386</literal> benötigen.</para>
    </footnote>. Eine Debian GNU/Linux-Installationsanleitung findet sich
  unter <ulink
  url="http://www.debian.org/releases/lenny/i386/">http://www.debian.org/releases/lenny/i386/</ulink>.
  Ein allgemeines Anwenderhandbuch steht unter <ulink
  url="http://debiananwenderhandbuch.de">http://debiananwenderhandbuch.de</ulink>.</para>

  <note>
    <para>Bitte loggen Sie sich nach der Installation als Benutzer
    <literal>root</literal> am System ein, und führen Sie alle hier
    angegebenen Befehle mit diesem Benutzer aus.</para>
  </note>

  <note>
    <para>Einige Anwender werden wohl direkt einen SSH-Server installieren
    wollen, um von ihrem normalen Arbeitsplatz aus im Terminal auf dem Server
    arbeiten zu können. Der Befehl dazu lautet: <literal><command>aptitude
    install ssh</command></literal>. Dann kann man hier im Folgenden auch
    wunderbar mit Kopieren und Einsetzen der meisten Befehle arbeiten. Wir
    setzen voraus, dass Sie entweder mit der grundsätzlichen Verwendung von
    <command>ssh</command> vertraut sind oder direkt am System selbst
    arbeiten.</para>
  </note>

  <para>Es versteht sich eigentlich von selbst, dass man auf einem frisch
  installierten System erst einmal sicherstellt, dass die Paketverwaltung
  (APT<footnote>
      <para><ulink
      url="http://de.wikipedia.org/wiki/Advanced_Packaging_Tool">http://de.wikipedia.org/wiki/Advanced_Packaging_Tool</ulink></para>
    </footnote> bzw. <literal>aptitude</literal>) die aktuellen Paketlisten
  zur Verfügung hat ...<screen>debian:~# <emphasis role="bold"><command>aptitude update</command></emphasis>
Treffer http://ftp.de.debian.org lenny Release.gpg
<replaceable>[...]</replaceable>
1820kB wurden in 13s heruntergeladen (138kB/s)
Paketlisten werden gelesen... Fertig

debian:~# </screen></para>

  <para>... und dass alle Pakete auf dem neusten Stand sind:<screen>debian:~# <emphasis
        role="bold"><command>aptitude -y upgrade</command></emphasis>
Paketlisten werden gelesen... Fertig
Abhängigkeitsbaum wird aufgebaut
<replaceable>[...]</replaceable>
Es werden keine Pakete installiert, aktualisiert oder entfernt.
0 Pakete aktualisiert, 0 zusätzlich installiert, 0 werden entfernt und 0 nicht aktualisiert.
Muss 0B an Archiven herunterladen. Nach dem Entpacken werden 0B zusätzlich belegt sein.
debian:~# </screen></para>

  <para>Für den Fall, dass beim Upgrade der Pakete auch ein neuer Kernel
  installiert wurde, müssen wir jetzt das System mit
  <literal><command>shutdown -r now</command></literal> (oder mit
  <literal><command>reboot</command></literal>) neu starten:<screen>debian:~# <emphasis
        role="bold"><command>shutdown -r now</command></emphasis>

Broadcast message from root@debian (pts/0) (Mon Mar 23 17:42:04 2009):

The system is going down for reboot NOW!</screen></para>

  <para>Nach dem Booten loggen Sie sich bitte wieder als
  <literal>root</literal> ein.</para>

  <note>
    <para>Das hat zwar nichts mit Asterisk zu tun, aber typischerweise
    installiert man auch NTP, um immer die aktuelle Zeit zu haben:<screen>debian:~# <emphasis
          role="bold"><command>aptitude -y install ntp ntpdate</command></emphasis></screen>Ein
    Muss ist das natürlich nicht.</para>
  </note>

  <para>Zuerst installieren wir eine Build-Umgebung &#8211; d.h. Compiler usw.
  &#8211; und diverse Abhängigkeiten, damit das Kompilieren von Asterisk
  erfolgreich durchgeführt werden kann.<screen>debian:~# <emphasis role="bold"><command>aptitude -y install build-essential</command></emphasis>
<replaceable>[...]</replaceable>
Die folgenden NEUEN Pakete werden zusätzlich installiert:
  binutils{a} build-essential bzip2{a} cpp{a} cpp-4.3{a} 
  dpkg-dev{a} g++{a} g++-4.3{a} gcc{a} gcc-4.3{a} 
  libc6-dev{a} libgmp3c2{a} libgomp1{a} libmpfr1ldbl{a} 
  libstdc++6-4.3-dev{a} libtimedate-perl{a} 
  linux-libc-dev{a} make{a} patch{a} 
0 Pakete aktualisiert, 19 zusätzlich installiert, 0 werden entfernt und 0 nicht aktualisiert.
Muss 19,4MB an Archiven herunterladen. Nach dem Entpacken werden 60,4MB zusätzlich belegt sein.
<replaceable>[...]</replaceable>
Richte libstdc++6-4.3-dev ein (4.3.2-1.1) ...
Richte g++-4.3 ein (4.3.2-1.1) ...
Richte g++ ein (4:4.3.2-2) ...
Richte build-essential ein (11.4) ...
<replaceable>[...]</replaceable></screen></para>

  <para>Linux-Kernel-Header:<screen>debian:~# <emphasis role="bold"><command>aptitude -y install linux-headers-`uname -r`</command></emphasis>
Die folgenden NEUEN Pakete werden zusätzlich installiert:
  cpp-4.1{a} gcc-4.1{a} gcc-4.1-base{a} 
  linux-headers-2.6.26-1-686 
  linux-headers-2.6.26-1-common{a} 
  linux-kbuild-2.6.26{a} 
0 Pakete aktualisiert, 6 zusätzlich installiert, 0 werden entfernt und 0 nicht aktualisiert.
Muss 7326kB an Archiven herunterladen. Nach dem Entpacken werden 41,3MB zusätzlich belegt sein.
<replaceable>[...]</replaceable></screen></para>

  <bridgehead id="installation-1.4-debian-libpri">LibPRI</bridgehead>

  <para>Die LibPRI-Bibliothek enthält den PRI<footnote>
      <para>siehe <xref linkend="glossar-pri" /></para>
    </footnote>-Stack, allerdings auch Funktionen für BRI<footnote>
      <para>siehe <xref linkend="glossar-bri" /></para>
    </footnote>-ISDN-Anschlüsse. Sie ist nicht für alle Einsatzzwecke
  notwendig, schadet dann aber auch nicht.<screen>debian:~# <emphasis
        role="bold"><command>cd /usr/src/</command></emphasis>
debian:/usr/src# <emphasis role="bold"><command>wget http://downloads.digium.com/pub/libpri/libpri-1.4-current.tar.gz</command></emphasis>
<replaceable>[...]</replaceable>
2009-03-23 10:24:55 (108 KB/s) - »libpri-1.4-current.tar.gz« gespeichert [94075/94075]</screen></para>

  <para>Entpacken Sie sie wie folgt:<screen>debian:/usr/src# <emphasis
        role="bold"><command>tar xvzf libpri-1.4-current.tar.gz</command></emphasis>
libpri-1.4.9/
libpri-1.4.9/build_tools/
<replaceable>[...]</replaceable>
debian:/usr/src# <emphasis role="bold"><command>rm libpri-1.4-current.tar.gz</command></emphasis> </screen></para>

  <para>Kompilieren und installieren:<screen>debian:/usr/src# <emphasis
        role="bold"><command>cd libpri-1.4.9/</command></emphasis>
debian:/usr/src/libpri-1.4.9# <emphasis role="bold"><command>make</command></emphasis>
<replaceable>[...]</replaceable>
debian:/usr/src/libpri-1.4.9# <emphasis role="bold"><command>make install</command></emphasis>
<replaceable>[...]</replaceable></screen></para>

  <bridgehead id="installation-1.4-debian-dahdi">Dahdi</bridgehead>

  <para>Dahdi<footnote>
      <para>Bis Asterisk 1.4.21 hieß Dahdi noch Zaptel. Für weitere
      Informationen siehe <xref linkend="zaptel-to-dahdi" />.</para>
    </footnote> ist für die Kommunikation zwischen Asterisk und
  ISDN/Analog-Karten zuständig. Aber auch ohne solche Karten lohnt sich die
  Installation, denn Dahdi erfüllt z. B. auch die Aufgabe, einen Zeittakt für
  Konferenzräume bereitzustellen.</para>

  <para>Laden Sie Dahdi wie folgt herunter:<screen>debian:~# <emphasis
        role="bold"><command>cd /usr/src/</command></emphasis>
debian:/usr/src# <emphasis role="bold"><command>wget http://downloads.digium.com/pub/telephony/dahdi-linux/dahdi-linux-current.tar.gz</command></emphasis>
<replaceable>[...]</replaceable>
2009-03-23 10:33:37 (165 KB/s) - »dahdi-linux-current.tar.gz« gespeichert [1251822/1251822]

debian:/usr/src# <emphasis role="bold"><command>wget http://downloads.digium.com/pub/telephony/dahdi-tools/dahdi-tools-current.tar.gz</command></emphasis>
<replaceable>[...]</replaceable>
2009-03-23 10:37:49 (147 KB/s) - »dahdi-tools-current.tar.gz« gespeichert [413598/413598]

debian:/usr/src# </screen></para>

  <para>Entpacken:<screen>debian:/usr/src# <emphasis role="bold"><command>tar xvzf dahdi-linux-current.tar.gz</command></emphasis> 
dahdi-linux-2.1.0.4/
dahdi-linux-2.1.0.4/include/
<replaceable>[...]</replaceable>
debian:/usr/src# <emphasis role="bold"><command>tar xvzf dahdi-tools-current.tar.gz</command></emphasis> 
dahdi-tools-2.1.0.2/
dahdi-tools-2.1.0.2/hdlctest.c
<replaceable>[...]</replaceable>
debian:/usr/src# <emphasis role="bold"><command>rm dahdi-linux-current.tar.gz</command></emphasis> 
debian:/usr/src# <emphasis role="bold"><command>rm dahdi-tools-current.tar.gz</command></emphasis> </screen></para>

  <para>Abhängigkeiten installieren:<screen>debian:/usr/src# <emphasis
        role="bold"><command>aptitude -y install libusb-dev libnewt-dev</command></emphasis>
<replaceable>[...]</replaceable>
Die folgenden NEUEN Pakete werden zusätzlich installiert:
  libnewt-dev libpng12-0{a} libpng12-dev{a} 
  libslang2-dev{a} libusb-dev zlib1g-dev{a} 
0 Pakete aktualisiert, 6 zusätzlich installiert, 0 werden entfernt und 0 nicht aktualisiert.
Muss 1176kB an Archiven herunterladen. Nach dem Entpacken werden 3113kB zusätzlich belegt sein.
<replaceable>[...]</replaceable>
Richte libnewt-dev ein (0.52.2-11.3) ...
Richte libusb-dev ein (2:0.1.12-13) ...
<replaceable>[...]</replaceable></screen></para>

  <para>Kompilieren und installieren:<screen>debian:/usr/src# <emphasis
        role="bold"><command>cd dahdi-linux-2.1.0.4/</command></emphasis>
debian:/usr/src/dahdi-linux-2.1.0.4# <emphasis role="bold"><command>make</command></emphasis>
<replaceable>[...]</replaceable>
make[1]: Leaving directory `/usr/src/linux-headers-2.6.26-1-686'
debian:/usr/src/dahdi-linux-2.1.0.4# <emphasis role="bold"><command>make install</command></emphasis>
<replaceable>[...]</replaceable>
  DEPMOD  2.6.26-1-686
make[1]: Leaving directory `/usr/src/linux-headers-2.6.26-1-686'
<replaceable>[...]</replaceable>
###################################################
###
### DAHDI installed successfully.
### If you have not done so before, install the package
### dahdi-tools.
###
###################################################</screen></para>

  <para><screen>debian:/usr/src/dahdi-linux-2.1.0.4# <emphasis role="bold"><command>cd ..</command></emphasis>
debian:/usr/src# <emphasis role="bold"><command>cd dahdi-tools-2.1.0.2/</command></emphasis>
debian:/usr/src/dahdi-tools-2.1.0.2# <emphasis role="bold"><command>./configure</command></emphasis> 
<replaceable>[...]</replaceable>
checking for newtBell in -lnewt... yes
checking newt.h usability... yes
checking newt.h presence... yes
checking for newt.h... yes
checking for usb_init in -lusb... yes
checking usb.h usability... yes
checking usb.h presence... yes
checking for usb.h... yes
<replaceable>[...]</replaceable>
debian:/usr/src/dahdi-tools-2.1.0.2# <emphasis role="bold"><command>make</command></emphasis>
<replaceable>[...]</replaceable>
make[1]: Leaving directory `/usr/src/dahdi-tools-2.1.0.2'
debian:/usr/src/dahdi-tools-2.1.0.2# <emphasis role="bold"><command>make install</command></emphasis>
<replaceable>[...]</replaceable>
###################################################
###
### DAHDI tools installed successfully.
### If you have not done so before, install init scripts with:
###
###   make config
###
###################################################
debian:/usr/src/dahdi-tools-2.1.0.2# </screen></para>

  <para>Init-Skripte und Konfigurationsdateien installieren:<screen>debian:/usr/src/dahdi-tools-2.1.0.2# <emphasis
        role="bold"><command>make config</command></emphasis>
install -D dahdi.init /etc/init.d/dahdi
/usr/bin/install -c -D -m 644 init.conf.sample /etc/dahdi/init.conf
/usr/bin/install -c -D -m 644 modules.sample /etc/dahdi/modules
/usr/bin/install -c -D -m 644 modprobe.conf.sample /etc/modprobe.d/dahdi
/usr/bin/install -c -D -m 644 blacklist.sample /etc/modprobe.d/dahdi.blacklist
/usr/sbin/update-rc.d dahdi defaults 15 30
 Adding system startup for /etc/init.d/dahdi ...
   /etc/rc0.d/K30dahdi -&gt; ../init.d/dahdi
   /etc/rc1.d/K30dahdi -&gt; ../init.d/dahdi
   /etc/rc6.d/K30dahdi -&gt; ../init.d/dahdi
   /etc/rc2.d/S15dahdi -&gt; ../init.d/dahdi
   /etc/rc3.d/S15dahdi -&gt; ../init.d/dahdi
   /etc/rc4.d/S15dahdi -&gt; ../init.d/dahdi
   /etc/rc5.d/S15dahdi -&gt; ../init.d/dahdi
DAHDI has been configured.

If you have any DAHDI hardware it is now recommended you 
edit /etc/dahdi/modules in order to load support for only
the DAHDI hardware installed in this system.  By default 
support for all DAHDI hardware is loaded at DAHDI start. 

I think that the DAHDI hardware you have on your system is:
debian:/usr/src/dahdi-tools-2.1.0.2# </screen></para>

  <para>Der Hinweis sagt uns, dass wir für einen schnelleren Systemstart und
  für ein schlankeres System in der Datei
  <filename>/etc/dahdi/modules</filename> alle Module auskommentieren sollten,
  die wir nicht für gegebenenfalls eingebaute Karten benötigen. Das ist aber
  kein Muss. Wer keine Karten installiert hat, kann alle Module
  auskommentieren.</para>

  <para>Um jetzt nicht das System rebooten zu müssen, starten wir einfach
  Dahdi neu, damit die Module geladen werden:<screen>debian:~# <emphasis
        role="bold"><command>/etc/init.d/dahdi restart</command></emphasis>
Unloading DAHDI hardware modules: done
Loading DAHDI hardware modules:

No hardware timing source found in /proc/dahdi, loading dahdi_dummy
Running dahdi_cfg: done.
debian:~# </screen>Hier im Beispiel wurde ohne eingebaute Karten automatisch
  <literal>dahdi_dummy</literal><footnote>
      <para>früher <literal>ztdummy</literal></para>
    </footnote> geladen, das auch ohne ISDN-Karten einen Zeittakt
  bereitstellt.</para>

  <bridgehead id="installation-1.4-debian-asterisk">Asterisk</bridgehead>

  <para>Auf der Asterisk-Homepage <ulink
  url="http://www.asterisk.org/">http://www.asterisk.org</ulink> finden Sie
  die notwendigen Quellen, um Asterisk zu installieren. Nehmen Sie bitte eine
  <emphasis>stabile</emphasis> und keine Entwickler-Version, und laden Sie
  diese herunter:<screen>debian:~# <emphasis role="bold"><command>cd /usr/src/</command></emphasis>
debian:/usr/src# <emphasis role="bold"><command>wget http://downloads.digium.com/pub/asterisk/asterisk-1.4-current.tar.gz</command></emphasis>
<replaceable>[...]</replaceable>
2009-03-23 10:45:32 (172 KB/s) - »asterisk-1.4-current.tar.gz« gespeichert [11858197/11858197]</screen></para>

  <para>Entpacken:<screen>debian:/usr/src# <emphasis role="bold"><command>tar xvzf asterisk-1.4-current.tar.gz</command></emphasis> 
asterisk-1.4.24/
<replaceable>[...]</replaceable>
debian:/usr/src# <emphasis role="bold"><command>rm asterisk-1.4-current.tar.gz</command></emphasis> </screen></para>

  <para>Abhängigkeiten und zusätzliche Pakete installieren:<screen>debian:/usr/src# <emphasis
        role="bold"><command>aptitude -y install libncurses5-dev libnewt-dev</command></emphasis>
<replaceable>[...]</replaceable>
Die folgenden NEUEN Pakete werden zusätzlich installiert:
  libncurses5-dev 
0 Pakete aktualisiert, 1 zusätzlich installiert, 0 werden entfernt und 0 nicht aktualisiert.
Muss 1546kB an Archiven herunterladen. Nach dem Entpacken werden 6599kB zusätzlich belegt sein.
<replaceable>[...]</replaceable></screen></para>

  <para><screen>debian:/usr/src# <emphasis role="bold"><command>aptitude -y install libcurl4-openssl-dev</command></emphasis>
<replaceable>[...]</replaceable>
Die folgenden NEUEN Pakete werden zusätzlich installiert:
  ca-certificates{a} comerr-dev{a} libcurl3{a} 
  libcurl4-openssl-dev libglib2.0-0{a} 
  libglib2.0-data{a} libidn11{a} libidn11-dev{a} 
  libkadm55{a} libkrb5-dev{a} libldap2-dev{a} 
  libpcre3{a} libssh2-1{a} libssh2-1-dev{a} 
  libssl-dev{a} openssl{a} pkg-config{a} 
0 Pakete aktualisiert, 17 zusätzlich installiert, 0 werden entfernt und 0 nicht aktualisiert.
Muss 8171kB an Archiven herunterladen. Nach dem Entpacken werden 23,2MB zusätzlich belegt sein.
<replaceable>[...</replaceable><replaceable>]</replaceable></screen></para>

  <para><screen>debian:/usr/src# <emphasis role="bold"><command>aptitude -y install libspeex-dev libspeexdsp-dev</command></emphasis>
<replaceable>[...]</replaceable>
Die folgenden NEUEN Pakete werden zusätzlich installiert:
  libspeex-dev libspeex1{a} 
  libspeexdsp-dev libspeexdsp1{a} 
0 Pakete aktualisiert, 2 zusätzlich installiert, 0 werden entfernt und 0 nicht aktualisiert.
Muss 320kB an Archiven herunterladen. Nach dem Entpacken werden 717kB zusätzlich belegt sein.
<replaceable>[...]</replaceable></screen></para>

  <para><screen>debian:/usr/src# <emphasis role="bold"><command>aptitude -y install libiksemel-dev</command></emphasis>
<replaceable>[...]</replaceable>
Die folgenden NEUEN Pakete werden zusätzlich installiert:
  libiksemel-dev libiksemel3{a} 
0 Pakete aktualisiert, 2 zusätzlich installiert, 0 werden entfernt und 0 nicht aktualisiert.
Muss 91,9kB an Archiven herunterladen. Nach dem Entpacken werden 299kB zusätzlich belegt sein.
<replaceable>[...]</replaceable></screen></para>

  <para><screen>debian:/usr/src# <emphasis role="bold"><command>aptitude -y install unixodbc-dev</command></emphasis>
<replaceable>[...]</replaceable>
Die folgenden NEUEN Pakete werden zusätzlich installiert:
  autotools-dev{a} defoma{a} file{a} fontconfig{a} 
  fontconfig-config{a} libaudio2{a} libdrm2{a} 
  libexpat1{a} libfontconfig1{a} libfreetype6{a} 
  libgl1-mesa-glx{a} libglu1-mesa{a} libice6{a} 
  libjpeg62{a} liblcms1{a} libltdl3{a} libltdl3-dev{a} 
  libmagic1{a} libmng1{a} libodbcinstq1c2{a} 
  libqt3-mt{a} libsm6{a} libtool{a} libxcursor1{a} 
  libxdamage1{a} libxfixes3{a} libxft2{a} libxi6{a} 
  libxinerama1{a} libxmu6{a} libxrandr2{a} 
  libxrender1{a} libxt6{a} libxxf86vm1{a} 
  odbcinst1debian1{a} ttf-dejavu{a} ttf-dejavu-core{a} 
  ttf-dejavu-extra{a} ucf{a}unixodbc{a} unixodbc-dev 
0 Pakete aktualisiert, 41 zusätzlich installiert, 0 werden entfernt und 0 nicht aktualisiert.
Muss 12,8MB an Archiven herunterladen. Nach dem Entpacken werden 32,2MB zusätzlich belegt sein.
<replaceable>[...]</replaceable></screen></para>

  <para>Kompilierung vorbereiten:<screen>debian:/usr/src# <emphasis
        role="bold"><command>cd asterisk-1.4.24/</command></emphasis>
debian:/usr/src/asterisk-1.4.24# <emphasis role="bold"><command>./configure</command></emphasis> 
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking for gcc... gcc
<replaceable>[...]</replaceable>
configure: Package configured for: 
configure: OS type  : linux-gnu
configure: Host CPU : i686
debian:/usr/src/asterisk-1.4.24# </screen></para>

  <para>Kompilieren<footnote>
      <para>An dieser Stelle vor dem Kompilieren könnte man als erfahrenerer
      Asterisk-Benutzer mit <literal><command>make
      menuselect</command></literal> in einem interaktiven Dialog bestimmte
      Module deaktivieren.</para>
    </footnote>:<screen>debian:/usr/src/asterisk-1.4.24# <emphasis role="bold"><command>make</command></emphasis>
<replaceable>[...]</replaceable>
   [CC] astman.c -&gt; astman.o
   [CC] md5.c -&gt; md5.o
   [LD] astman.o md5.o -&gt; astman
   [CC] stereorize.c -&gt; stereorize.o
<replaceable>[...]</replaceable>
make[1]: Leaving directory `/usr/src/asterisk-1.4.24/main'
 +--------- Asterisk Build Complete ---------+
 + Asterisk has successfully been built, and +
 + can be installed by running:              +
 +                                           +
 +               make install                +
 +-------------------------------------------+
debian:/usr/src/asterisk-1.4.24# </screen></para>

  <para>Installieren:<screen>debian:/usr/src/asterisk-1.4.24# <emphasis
        role="bold"><command>make install</command></emphasis>
<replaceable>[...]</replaceable>
 +---- Asterisk Installation Complete -------+
 +                                           +
 +    YOU MUST READ THE SECURITY DOCUMENT    +
 +                                           +
 + Asterisk has successfully been installed. +
 + If you would like to install the sample   +
 + configuration files (overwriting any      +
 + existing config files), run:              +
 +                                           +
 +               make samples                +
 +                                           +
 +-----------------  or ---------------------+
 +                                           +
 + You can go ahead and install the asterisk +
 + program documentation now or later run:   +
 +                                           +
 +              make progdocs                +
 +                                           +
 + **Note** This requires that you have      +
 + doxygen installed on your local system    +
 +-------------------------------------------+
debian:/usr/src/asterisk-1.4.24# </screen></para>

  <para>Die eben kompilierten Programmdateien sind jetzt auf dem System
  installiert. Allerdings finden wir im Asterisk-Konfigurationsverzeichnis
  <filename>/etc/asterisk/</filename> noch gähnende Leere vor. Da wir nicht
  von Grund auf beginnen möchten, lassen wir uns die Standard-Beispieldateien
  erstellen:<screen>debian:/usr/src/asterisk-1.4.24# <emphasis role="bold"><command>make samples</command></emphasis>
<replaceable>[...]</replaceable>
debian:/usr/src/asterisk-1.4.24# </screen></para>

  <para>Damit Asterisk beim Booten des Rechners auch automatisch gestartet und
  bei einem Shutdown ordentlich gestoppt wird, benötigen wir noch
  entsprechende Init-Skripte:<screen>debian:/usr/src/asterisk-1.4.24# <emphasis
        role="bold"><command>make config</command></emphasis>
update-rc.d: warning: /etc/init.d/asterisk missing LSB information
update-rc.d: see &lt;http://wiki.debian.org/LSBInitScripts&gt;
 Adding system startup for /etc/init.d/asterisk ...
   /etc/rc2.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc3.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc4.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc5.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc2.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc3.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc4.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc5.d/S50asterisk -&gt; ../init.d/asterisk
debian:/usr/src/asterisk-1.4.24# </screen></para>

  <para>Wir sind jetzt fast fertig. Leider setzt die Asterisk-Installation die
  Runlevels auf Debian bisher noch nicht ganz korrekt, was wir folgendermaßen
  beheben:<screen>debian:/usr/src/asterisk-1.4.24# <emphasis role="bold"><command>cd</command></emphasis>
debian:~# <emphasis role="bold"><command>update-rc.d -f asterisk remove</command></emphasis>
 Removing any system startup links for /etc/init.d/asterisk ...
   /etc/rc2.d/S50asterisk
   /etc/rc2.d/K91asterisk
   /etc/rc3.d/S50asterisk
   /etc/rc3.d/K91asterisk
   /etc/rc4.d/S50asterisk
   /etc/rc4.d/K91asterisk
   /etc/rc5.d/S50asterisk
   /etc/rc5.d/K91asterisk
debian:~# <emphasis role="bold"><command>update-rc.d asterisk defaults 50 15</command></emphasis>
update-rc.d: warning: /etc/init.d/asterisk missing LSB information
update-rc.d: see &lt;http://wiki.debian.org/LSBInitScripts&gt;
 Adding system startup for /etc/init.d/asterisk ...
   /etc/rc0.d/K15asterisk -&gt; ../init.d/asterisk
   /etc/rc1.d/K15asterisk -&gt; ../init.d/asterisk
   /etc/rc6.d/K15asterisk -&gt; ../init.d/asterisk
   /etc/rc2.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc3.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc4.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc5.d/S50asterisk -&gt; ../init.d/asterisk
debian:~# </screen></para>

  <para>Fertig! Asterisk ist auf Ihrem System installiert. Mit dem Befehl
  <literal><command>asterisk -V</command></literal> können Sie die
  installierte Version herausfinden (bitte achten Sie auf das großgeschriebene
  V):<screen>debian:~# <emphasis role="bold"><command>asterisk -V</command></emphasis>
Asterisk 1.4.24
debian:~# </screen></para>
</section>
