<?xml version="1.0" encoding="ISO-8859-1"?>
<section id="applikationen" lang="de" revision="$Revision: 1.54 $">
  <!--% Copyright (c) 2006 - Stefan Wintermeyer <sw@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title>Applikationen im Dialplan</title>

  <simpara>Im Folgenden werden die Applikationen beschrieben, die im Dialplan
  (also in der <filename>/etc/asterisk/extensions.conf</filename>) verwendet
  werden können. Beachten Sie bitte, dass nur solche Applikationen in Ihrer
  Installation verfügbar sind, die in der
  <filename>/etc/asterisk/modules.conf</filename> im Abschnitt
  <code>[modules]</code> durch <code>autoload=yes</code> oder explizites
  <code>load =&gt; app_<replaceable>applikationsname</replaceable>.so</code>
  geladen wurden. Welche Applikationen in Ihrer Asterisk-Version vorhanden
  sind, erfahren Sie, indem Sie im Asterisk-CLI <userinput>show
  applications</userinput> oder <userinput>show application
  <replaceable>Applikationsname</replaceable></userinput> eingeben.</simpara>

  <simpara>Der Begriff <quote>Applikationen</quote> (oder
  <quote>Befehle</quote>) darf nicht mit <quote>Funktionen</quote> verwechselt
  werden, die ggf. innerhalb eines Befehlsaufrufs stehen.
  <quote>Applikationen</quote> (applications) ist vielleicht irreführend, aber
  der gängige Ausdruck. Einige Applikationen älterer Asterisk-Versionen wurden
  mittlerweile durch Funktionen ersetzt und werden hier nicht mehr erwähnt, da
  sie nicht mehr verwendet werden sollen.</simpara>

  <sidebar>
    <simpara>Ein Hinweis am Rande: Die Konfigurationsdateien von Asterisk
    verwenden leider ein recht schwammiges Format (als INI bekannt), für das
    nie eine offizielle <emphasis>Grammatik</emphasis> veröffentlicht wurde.
    Der Parser geht auch nicht den üblichen Weg von lexikalischer Analyse,
    Tokenizing und syntaktischer Analyse. Aus diesem Grund steigt übrigens der
    Asterisk-Ableger <ulink
    url="http://www.openpbx.org/"><citetitle>OpenPBX</citetitle></ulink> auf
    die von Mac OS X bekannten, aber auch auf anderen Plattformen verfügbaren
    <quote>Property Lists</quote> (<filename>.plist</filename>) als Format für
    Konfigurationsdateien um.</simpara>

    <simpara>Hier sei nur gesagt, dass es aufgrund mangelnder Spezifikation
    nicht immer klar ist, an welcher Stelle z.B. Leerzeichen erlaubt sind oder
    wo Anführungszeichen erwartet werden. Meist werden mehrere Schreibweisen
    erkannt. Im Zweifelsfall hilft nur Ausprobieren, wenn eine Schreibweise in
    Ihrer Asterisk-Version nicht funktioniert. Sollten Sie Fehler entdecken,
    wird um Rückmeldung gebeten.</simpara>
  </sidebar>

  <para>Es ist oft möglich, Parameter auszulassen. Wenn ausgelassene Parameter
  nicht am Ende stehen, müssen Sie trotzdem ein Komma angeben, um anzuzeigen,
  dass der Parameter leer ist (also der Default-Wert verwendet wird), z.B.
  so:<programlisting>exten =&gt; s,1,Dial(IAX2/User:Passwort@beispiel.de/123,,tT)yyy123yyysw</programlisting></para>

  <para>Im Allgemeinen kann gesagt werden, dass Fehler beim Ausführen einer
  Applikation durch den Rückgabewert -1 ausgedrückt werden, Erfolg durch 0.
  Ein Rückgabewert von -1 bedeutet, dass Asterisk den Kanal auflegt und nicht
  weiter den Dialplan abarbeitet.</para>

  <important>
    <para>Bitte beachten Sie, dass, abhängig von der eingesetzten
    Asterisk-Version die Parameter durch <code>,</code> (Komma) oder
    <code>|</code> (Pipe) getrennt werden. In diesem Buch wird hauptsächlich
    das <code>,</code> (Komma) benutzt.</para>
  </important>

  <simpara>Wer Asterisk schon länger kennt, wird sich vielleicht wundern,
  warum hier die eine oder andere Applikation nicht aufgeführt ist. Das hat
  den einfachen Grund, dass bereits in Asterisk 1.2 etliche Applikationen als
  <quote>deprecated</quote> (= veraltet, soll nicht mehr verwendet werden)
  gekennzeichnet sind und in 1.4 nicht mehr existieren. Solche Befehle werden
  hier nicht mehr beschrieben, Sie finden die entsprechenden Funktionen in
  <xref linkend="funktionen" />.</simpara>

  <simpara>In den Beispielen wird oft die willkürlich gewählte Extension
  <code>123</code> und die Priorität <code>1</code> verwendet, was in der
  Praxis natürlich nicht immer sinnvoll ist.</simpara>

  <simpara><indexterm>
      <primary>priority jumping</primary>
    </indexterm>Viele Applikationen vor Asterisk 1.2 sprangen bei einem Fehler
  zur Priorität n+101, wenn vorhanden (wobei n die aktuelle Priorität
  bezeichnet). Dieses alte Verhalten (<quote>priority jumping</quote>) lässt
  sich bei einigen Befehlen durch die Option <code>j</code> (jump) erreichen
  oder indem man in der <filename>extensions.conf</filename> im Abschnitt
  <code>[general]</code> den Parameter <code>priorityjumping=yes</code> setzt.
  Dieses Verhalten ist aber <quote>depreceted</quote>. Die neuere Methode ist
  das Abfragen der gesetzten Channelvariablen.</simpara>

  <simpara>Um leichtere Verwendung als Nachschlagewerk zu ermöglichen, sind
  die Applikationen in alphabetischer Reihenfolge aufgeführt. Da sie sich aber
  auch sinnvoll gruppieren lassen, finden Sie hier einen entsprechenden
  Index:</simpara>

  <para><emphasis role="bold">Anruf-Verwaltung</emphasis> (abheben,
  durchstellen, auflegen, ...)<simplelist type="vert">
      <member><xref linkend="applikationen-answer" /> - Abheben</member>

      <member><xref linkend="applikationen-busy" /> - Besetztzeichen
      signalisieren</member>

      <member><xref linkend="applikationen-chanisavail" /> - Prüfen, ob ein
      Channel verfügbar ist</member>

      <member><xref linkend="applikationen-congestion" /> - Stau
      signalisieren</member>

      <member><xref linkend="applikationen-dial" /> - Einen Anruf durchstellen
      / mit einem Channel verbinden</member>

      <member><xref linkend="applikationen-disa" /> - DISA (Direct Inward
      System Access)</member>

      <member><xref linkend="applikationen-hangup" /> - Auflegen</member>

      <member><xref linkend="applikationen-retrydial" /> - <code>Dial()</code>
      mit <quote>Wahlwiederholung</quote></member>

      <member><xref linkend="applikationen-ringing" /> - Klingeln
      signalisieren</member>
    </simplelist></para>

  <para><emphasis role="bold">Flusskontrolle und
  Timeouts</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-endwhile" /> - Ende einer
      While-Schleife</member>

      <member><xref linkend="applikationen-execif" /> - Bedingtes
      Ausführen</member>

      <member><xref linkend="applikationen-gosub" /> - Zu einer Unterroutine
      springen</member>

      <member><xref linkend="applikationen-gosubif" /> - Bedingtes
      <code>Gosub()</code></member>

      <member><xref linkend="applikationen-goto" /> - Zu einer Priorität,
      Extension oder anderem Kontext springen</member>

      <member><xref linkend="applikationen-gotoif" /> - Bedingtes
      <code>Goto()</code></member>

      <member><xref linkend="applikationen-gotoiftime" /> - Bedingtes
      <code>Gosub()</code> je nach Datum/Uhrzeit</member>

      <member><xref linkend="applikationen-macro" /> - Macro aufrufen</member>

      <member><xref linkend="applikationen-random" /> - Zufällig im Dial-Plan
      springen</member>

      <member><xref linkend="applikationen-return" /> - Aus einem
      <code>Gosub()</code> oder <code>GosubIf()</code> zurückkehren</member>

      <member><xref linkend="applikationen-while" /> - Anfang einer
      While-Schleife</member>
    </simplelist></para>

  <para><emphasis role="bold">Anrufer-Kennung (Caller-ID, Name,
  ...)</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-callingpres" /> - Anzeige der
      Caller-ID verändern</member>

      <member><xref linkend="applikationen-lookupblacklist" /> - Caller-ID in
      Blacklist nachschlagen</member>

      <member><xref linkend="applikationen-lookupcidname" /> - Caller-ID-Name
      in Datenbank nachschlagen</member>

      <member><xref linkend="applikationen-privacymanager" /> - Eingabe einer
      Telefonnummer verlangen (falls ohne Caller-ID)</member>

      <member><xref linkend="applikationen-setcallerpres" /> - Caller-ID
      setzen, unanhängig vom Channel</member>

      <member><xref linkend="applikationen-softhangup" /> - Auflegen
      verlangen</member>

      <member><xref linkend="applikationen-zapateller" /> - Werbeanrufe
      blockieren</member>
    </simplelist></para>

  <para><emphasis role="bold">Gesprächsprotokolle (CDRs)</emphasis><simplelist
      type="vert">
      <member><xref linkend="applikationen-forkcdr" /> - Den CDR in zwei
      getrennte Einträge aufspalten</member>

      <member><xref linkend="applikationen-nocdr" /> - CDR für diesen Anruf
      deaktivieren</member>

      <member><xref linkend="applikationen-resetcdr" /> - CDR-Eintrag
      zurücksetzen</member>

      <member><xref linkend="applikationen-setamaflags" /> - AMA-Flags
      setzen</member>
    </simplelist></para>

  <para><emphasis role="bold">Voicemail</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-directory" /> -
      Dial-by-Name-Telefonbuch anbieten</member>

      <member><xref linkend="applikationen-mailboxexists" /> - Prüft, ob
      Mailbox existiert</member>

      <member><xref linkend="applikationen-voicemail" /> -
      Anrufbeantworter</member>

      <member><xref linkend="applikationen-voicemailmain" /> -
      Anrufbeantworter abhören</member>

      <member><xref linkend="applikationen-vmauthenticate" /> - User anhand
      der <filename>voicemail.conf</filename> authentifizieren</member>
    </simplelist></para>

  <para><emphasis role="bold">Konferenzen</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-meetme" /> -
      MeetMe-Konferenz</member>

      <member><xref linkend="applikationen-meetmeadmin" /> - MeetMe-Konferenz
      verwalten</member>

      <member><xref linkend="applikationen-meetmecount" /> - Anzahl der
      Teilnehmer einer MeetMe-Konferenz</member>
    </simplelist></para>

  <para><emphasis role="bold">Variablen verändern</emphasis><simplelist
      type="vert">
      <member><xref linkend="applikationen-importvar" /> - Variable von einem
      Channel importieren</member>

      <member><xref linkend="applikationen-read" /> - Eine Variable (Ziffern)
      vom User einlesen</member>

      <member><xref linkend="applikationen-set" /> - Eine Channel-Variable
      setzen</member>
    </simplelist></para>

  <para><emphasis role="bold">Musik-/Sprachausgabe</emphasis><simplelist
      type="vert">
      <member><xref linkend="applikationen-background" /> - Im Hintergrund
      eine Sound-Datei spielen</member>

      <member><xref linkend="applikationen-backgrounddetect" /> -
      <code>Background()</code> mit Spracherkennung</member>

      <member><xref linkend="applikationen-controlplayback" /> -
      <code>Playback()</code> mit Vor-/Zurückspulen und Abbrechen</member>

      <member><xref linkend="applikationen-echo" /> - Audio-Eingabe
      wiedergeben</member>

      <member><xref linkend="applikationen-festival" /> - Text mit dem
      Festival-Synthesizer sprechen</member>

      <member><xref linkend="applikationen-milliwatt" /> - Einen konstanten
      1000-Hz-Ton mit 0 dbm erzeugen</member>

      <member><xref linkend="applikationen-mp3player" /> - MP3-Datei oder
      -Stream spielen</member>

      <member><xref linkend="applikationen-musiconhold" /> - Wartemusik
      spielen</member>

      <member><xref linkend="applikationen-playback" /> - Eine Sound-Datei
      spielen</member>

      <member><xref linkend="applikationen-playtones" /> - Töne
      spielen</member>

      <member><xref linkend="applikationen-progress" /> - Audio vor dem
      Abheben spielen</member>

      <member><xref linkend="applikationen-sayalpha" /> - Buchstabieren
      (alphanumerisch)</member>

      <member><xref linkend="applikationen-saydigits" /> - Ziffern
      ansagen</member>

      <member><xref linkend="applikationen-saynumber" /> - Nummer
      ansagen</member>

      <member><xref linkend="applikationen-sayphonetic" /> - Buchstabieren
      (mit
      <filename>sounds/phonetic/<replaceable>Zeichen</replaceable>_p.gsm</filename>)</member>

      <member><xref linkend="applikationen-sayunixtime" /> - Datum/Uhrzeit
      ansagen</member>

      <member><xref linkend="applikationen-stopplaytones" /> -
      <code>Playtones()</code> beenden</member>
    </simplelist></para>

  <para><emphasis role="bold">Aufzeichnen</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-agentmonitoroutgoing" /> -
      Ausgehende Anrufe eines Agenten aufzeichnen</member>

      <member><xref linkend="applikationen-changemonitor" /> - Die Datei für
      <code>Monitor()</code> verändern</member>

      <member><xref linkend="applikationen-chanspy" /> - Ein Gespräch
      mithören</member>

      <member><xref linkend="applikationen-dial" /> - Mit der Option
      <code>w</code> oder <code>W</code> im Gespräch aufzeichnen</member>

      <member><xref linkend="applikationen-dictate" /> - Diktat aufnehmen und
      wiedergeben</member>

      <member><xref linkend="applikationen-mixmonitor" /> - Ähnlich
      <code>Monitor()</code>, aber nur eine Datei</member>

      <member><xref linkend="applikationen-monitor" /> - Ein Gespräch
      mitschneiden</member>

      <member><xref linkend="applikationen-record" /> - Eingehendes Audio
      mitschneiden</member>

      <member><xref linkend="applikationen-stopmonitor" /> -
      <code>Monitor()</code> beenden</member>

      <member><xref linkend="applikationen-zapbarge" /> - Einen ZAP-Channel
      belauschen</member>

      <member><xref linkend="applikationen-zapscan" /> - Zwecks Mithören durch
      ZAP-Kanäle schalten</member>
    </simplelist></para>

  <para><emphasis role="bold">Datenbank-Zugriffe</emphasis><simplelist
      type="vert">
      <member><xref linkend="applikationen-dbdel" /> - Einen Datenbankeintrag
      löschen</member>

      <member><xref linkend="applikationen-dbdeltree" /> - Einen
      Datenbank-Zweig löschen</member>
    </simplelist></para>

  <para><emphasis role="bold">Allgemeines</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-authenticate" /> - Einen User
      authentifizieren</member>

      <member><xref linkend="applikationen-senddtmf" /> - DTMF-Töne
      senden</member>

      <member><xref linkend="applikationen-sendimage" /> - Ein Bild
      senden</member>

      <member><xref linkend="applikationen-sendtext" /> - Einen Text
      senden</member>

      <member><xref linkend="applikationen-sendurl" /> - Eine URL
      senden</member>

      <member><xref linkend="applikationen-transfer" /> - Anruf
      weiterleiten</member>

      <member><xref linkend="applikationen-vmauthenticate" /> - User anhand
      der <filename>voicemail.conf</filename> authentifizieren</member>

      <member><xref linkend="applikationen-wait" /> - Eine bestimmte Zeit
      warten</member>

      <member><xref linkend="applikationen-waitexten" /> - Auf Eingabe einer
      Extension warten</member>

      <member><xref linkend="applikationen-waitforring" /> - Auf Klingeln
      warten</member>

      <member><xref linkend="applikationen-waitmusiconhold" /> - Warten mit
      Musik</member>
    </simplelist></para>

  <para><emphasis role="bold">Externe Skripte</emphasis><simplelist
      type="vert">
      <member><xref linkend="applikationen-agi" /> - Eine AGI-Anwendung
      ausführen</member>

      <member><xref linkend="applikationen-deadagi" /> - <code>AGI()</code>
      auf einem aufgelegten Channel</member>

      <member><xref linkend="applikationen-eagi" /> - Siehe
      <code>AGI()</code></member>

      <member><xref linkend="applikationen-fastagi" /> - <code>AGI()</code>
      auf einem entfernten Rechner</member>

      <member><xref linkend="applikationen-macro" /> - Ein Makro
      ausführen</member>

      <member><xref linkend="applikationen-noop" /> - Nichts tun. Schreibt
      Debugging-Informationen</member>

      <member><xref linkend="applikationen-perl" /> - <code>res_perl</code>
      ist wie <code>mod_perl</code> für Apache, aber für Asterisk</member>

      <member><xref linkend="applikationen-php" /> - <code>res_php</code> ist
      wie <code>mod_php</code> für Apache, aber für Asterisk</member>

      <member><xref linkend="applikationen-read" /> - Eine Variable (Ziffern)
      vom User einlesen</member>

      <member><xref linkend="applikationen-system" /> - Einen Shell-Befehl
      ausführen</member>

      <member><xref linkend="applikationen-trysystem" /> - Wie
      <code>System()</code>, gibt aber immer 0 zurück</member>

      <member><xref linkend="applikationen-userevent" /> - Dem
      Manager-Interface ein Event schicken</member>
    </simplelist></para>

  <para><emphasis role="bold">SIP</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-sipdtmfmode" /> - DTMF-Modus
      während SIP-Verbindung ändern</member>

      <member><xref linkend="applikationen-sipaddheader" /> - Einem
      ausgehenden Anruf einen SIP-Header hinzufügen</member>
    </simplelist></para>

  <para><emphasis role="bold">ZAP</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-flash" /> - Einen Switchhook-Flash
      (auch <quote>Link</quote>) auf einem ZAP-Trunk senden</member>

      <member><xref linkend="applikationen-zapbarge" /> - Einen ZAP-Channel
      belauschen</member>

      <member><xref linkend="applikationen-zapras" /> - RAS (Remote Access
      Server) auf einem ZAP-ISDN-Channel bereitstellen</member>

      <member><xref linkend="applikationen-zapscan" /> - Zwecks Mithören durch
      ZAP-Kanäle schalten</member>
    </simplelist></para>

  <para><emphasis role="bold">Warteschlangen,
  Call-Center</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-addqueuemember" /> - Interface
      dynamisch in Warteschleife einreihen</member>

      <member><xref linkend="applikationen-agentcallbacklogin" /> -
      Call-Center-Agenten einloggen (mit Rückruf)</member>

      <member><xref linkend="applikationen-agentlogin" /> -
      Call-Center-Agenten einloggen</member>

      <member><xref linkend="applikationen-agentmonitoroutgoing" /> -
      Ausgehende Anrufe eines Agenten aufzeichen (nur mit
      <code>AgentCallbackLogin()</code>)</member>

      <member><xref linkend="applikationen-parkandannounce" /> - Anruf parken
      und ankündigen</member>

      <member><xref linkend="applikationen-parkedcall" /> - Einen geparkten
      Anruf annehmen</member>

      <member><xref linkend="applikationen-pausequeuemember" /> - Einen
      Agenten pausieren</member>

      <member><xref linkend="applikationen-queue" /> - Eingehenden Anruf in
      Warteschleife einreihen</member>

      <member><xref linkend="applikationen-removequeuemember" /> - Interface
      aus Warteschleife entfernen</member>

      <member><xref linkend="applikationen-unpausequeuemember" /> - Einen
      pausierenden Agenten wieder aktivieren</member>
    </simplelist></para>

  <para><emphasis role="bold">ADSI</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-adsiprog" /> - Ein ADSI-Skript in
      ein Telefon laden</member>

      <member><xref linkend="applikationen-getcpeid" /> - ADSI-CPE-ID
      abfragen</member>
    </simplelist></para>

  <para><emphasis role="bold">Verschiedenes</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-alarmreceiver" /> - Einen
      Contact-ID-Alarm-Empfänger von Ademco emulieren</member>

      <member><xref linkend="applikationen-sms" /> - Sendet oder empfängt
      SMS-Nachrichten</member>
    </simplelist></para>

  <beginpage />

  <section id="applikationen-addqueuemember">
    <title><code>AddQueueMember()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AddQueueMember()</code></secondary>
    </indexterm>

    <simpara>Reiht Interfaces dynamisch in eine Anruf-Warteschleife
    ein.</simpara>

    <synopsis>AddQueueMember(<replaceable>Warteschleife</replaceable>[,<replaceable>Interface</replaceable>[,<replaceable>Malus</replaceable>[|,<replaceable>Optionen</replaceable>]]])</synopsis>

    <simpara>Reiht das angegebene Interface dynamisch als Agent in eine
    vorhandene Warteschleife (Queue) ein, die in
    <filename>queues.conf</filename> definiert wurde. Die Malus-Punkte
    beeinflussen ggf. die Position bei der Abarbeitung. Agenten mit
    niedrigerem Malus werden vor Einträgen mit höherem Malus
    aufgerufen.</simpara>

    <simpara>Falls das angegebene Interface bereits in die Warteschlange
    eingereiht ist und eine n+101 Priorität existiert (n ist die aktuelle
    Priorität), wird die Abarbeitung bei dieser Priorität fortgesetzt,
    andernfalls wird ein Fehler (d.h. -1) zurückgeliefert. (Je nach
    Asterisk-Version muss für das Springen zu n+101 die Option <code>j</code>
    (jump) angegeben werden.)</simpara>

    <simpara>Wird <code>AddQueueMember()</code> ohne den Interface-Parameter
    aufgerufen, findet das vom Teilnehmer zu diesem Zeitpunkt benutzte
    Interface Verwendung.</simpara>

    <simpara>In manchen Asterisk-Versionen kann man statt der Pipe-Zeichen
    (<code>|</code>) auch Kommas verwenden.</simpara>

    <simpara>Die Applikation setzt auch die Channelvariable
    <code>${AQMSTATUS}</code> auf <code>ADDED</code> (hinzugefügt),
    <code>MEMBERALREADY</code> (ist bereits Mitglied) oder
    <code>NOSUCHQUEUE</code> (Warteschlange nicht vorhanden).</simpara>

    <programlisting>; SIP/3000 zur "supportschlange" hinzufügen:yyy123yyysw
exten =&gt; 123,1,AddQueueMember(supportschlange,SIP/3000)yyy123yyysw
yyy123yyysw
; das aktuelle Interface mit Malus 2 hinzufügen:yyy123yyysw
exten =&gt; 123,1,AddQueueMember(supportschlange,,2)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'AddQueueMember' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Dynamically adds queue membersyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
   AddQueueMember(queuename[|interface[|penalty[|options]]]):yyy123yyysw
Dynamically adds interface to an existing queue.yyy123yyysw
If the interface is already in the queue and there exists an n+101 priorityyyy123yyysw
then it will then jump to this priority.  Otherwise it will return an erroryyy123yyysw
The option string may contain zero or more of the following characters:yyy123yyysw
       'j' -- jump to +101 priority when appropriate.yyy123yyysw
  This application sets the following channel variable upon completion:yyy123yyysw
     AQMSTATUS    The status of the attempt to add a queue member as a yyy123yyysw
                     text string, one ofyyy123yyysw
           ADDED | MEMBERALREADY | NOSUCHQUEUE yyy123yyysw
Example: AddQueueMember(techsupport|SIP/3000)yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine -yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-queue" />, <xref
      linkend="applikationen-removequeuemember" />,
      <filename>queues.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-adsiprog">
    <title><code>ADSIProg()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ADSIProg()</code></secondary>
    </indexterm>

    <simpara>Lädt ein ADSI-Skript in ein ADSI-fähiges Telefon.</simpara>

    <synopsis>ADSIProg([<replaceable>Script</replaceable>])</synopsis>

    <simpara>Programmiert ein ADSI<footnote>
        <simpara>Analog Display Services Interface</simpara>
      </footnote>-Telefon mit einem vorhandenen Skript. Wird kein Skript
    angegeben, wird das Default-Skript <filename>asterisk.adsi</filename>
    verwendet. Die Pfadangabe zum <code>Script</code> versteht sich relativ
    zum Asterisk-Konfigurationsverzeichnis, i.d.R.
    <filename>/etc/asterisk/</filename>, es kann aber ebenso ein vollständiger
    (absoluter) Pfad zu der Skript-Datei angegeben werden.</simpara>

    <simpara>Benutzen Sie die <code>GetCPEID()</code>-Anwendung, um die CPE-ID
    und weitere Informationen über das ADSI-fähige Telefon zu
    erfahren.</simpara>

    <programlisting>; das ADSI-Telefon mit dem Skript telcordia-1.adsi programmieren:yyy123yyysw
exten =&gt; 123,1,ADSIProg(telcordia-1.adsi)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ADSIProg' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Load Asterisk ADSI Scripts into phoneyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  ADSIProg(script): This application programs an ADSI Phone with the givenyyy123yyysw
script. If nothing is specified, the default script (asterisk.adsi) is used.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-getcpeid" />,
      <filename>adsi.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-agentcallbacklogin">
    <title><code>AgentCallbackLogin()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AgentCallbackLogin()</code></secondary>
    </indexterm>

    <simpara>Ermöglicht Login eines Call-Center-Agenten mit Rückruf.</simpara>

    <synopsis>AgentCallbackLogin([<replaceable>Agenten-Nr</replaceable>][,<replaceable>Optionen</replaceable>[,<replaceable>Extension</replaceable>@<replaceable>Context</replaceable>]])</synopsis>

    <simpara>Ermöglicht einem Anruf-Agenten, identifiziert durch die
    <code>Agenten-Nummer</code>, sich in das Anruf-Warteschlangen-System
    einzuloggen, um bei einem eingehenden Anruf für ihn zurückgerufen zu
    werden.</simpara>

    <simpara>Bei einem eingehenden Anruf für diesen Agenten wird Asterisk die
    spezifizierte zugehörige <code>Extension</code> (gegebenenfalls mit dem
    optional angegebenem Kontext <code>Context</code>) aufrufen.</simpara>

    <simpara>Der <code>Optionen</code>-Parameter kann den Wert <code>s</code>
    enthalten, der ein Silent Login (stille Anmeldung) bewirkt.</simpara>

    <programlisting>; still als Agent 33 (wie in agents.conf definiert) einloggen. Asteriskyyy123yyysw
; wird SIP/300 anrufen, sobald für diesen Agenten ein Anruf eingeht:yyy123yyysw
exten =&gt; 123,1,AgentCallbackLogin(33,s,${CALLERID(num)})yyy123yyysw
yyy123yyysw
; wenn wir davon ausgehen, dass die Agentennummer mit der Anrufer-yyy123yyysw
; Extension übereinstimmt:yyy123yyysw
exten =&gt; 123,1,AgentCallbackLogin(${CALLERID(num)},s,${CALLERID(num)})yyy123yyysw</programlisting>

    <simpara>Auf <ulink
    url="http://www.voip-info.org/wiki/index.php?page=Asterisk+cmd+AgentCallbackLogin">http://www.voip-info.org/wiki/index.php?page=Asterisk+cmd+AgentCallbackLogin</ulink>
    sind viele Beispiele zu finden.</simpara>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'AgentCallbackLogin' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Call agent callback loginyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  AgentCallbackLogin([AgentNo][|[options][|[exten]@context]]):yyy123yyysw
Asks the agent to login to the system with callback.yyy123yyysw
The agent's callback extension is called (optionally with the specifiedyyy123yyysw
context).yyy123yyysw
The option string may contain zero or more of the following characters:yyy123yyysw
      's' -- silent login - do not announce the login ok segment agent logged in/offyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-agentlogin" /></para>
    </formalpara>
  </section>

  <section id="applikationen-agentlogin">
    <title><code>AgentLogin()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AgentLogin()</code></secondary>
    </indexterm>

    <simpara>Erlaubt es einem Anruf-Agenten, sich in das System
    einzuloggen/sich am System anzumelden.</simpara>

    <synopsis>AgentLogin([<replaceable>Agenten-Nr</replaceable>][,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Meldet den gegenwärtigen Anrufer als Call Agent (optional durch
    <code>Agenten-Nr</code> zu identifizieren) im Anruf-Warteschlangen-System
    an. Solange er als Agent angemeldet ist, kann er Anrufe entgegennehmen und
    hört bei neuen eingehenden Anrufen einen Piepton auf der Leitung. Der
    Agent kann den Anruf durch Betätigen der Stern-Taste (<code>*</code>)
    beenden.</simpara>

    <simpara>Der <code>Optionen</code>-Parameter kann den Wert <code>s</code>
    enthalten, der ein Silent Login (stille Anmeldung) bewirkt.</simpara>

    <programlisting>; still als Agent 33 (wie in agents.conf definiert) einloggenyyy123yyysw
exten =&gt; 123,1,AgentLogin(33,s)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'AgentLogin' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Call agent loginyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  AgentLogin([AgentNo][|options]):yyy123yyysw
Asks the agent to login to the system.  Always returns -1.  Whileyyy123yyysw
logged in, the agent can receive calls and will hear a 'beep'yyy123yyysw
when a new call comes in. The agent can dump the call by pressingyyy123yyysw
the star key.yyy123yyysw
The option string may contain zero or more of the following characters:yyy123yyysw
      's' -- silent login - do not announce the login ok segment after agent logged in/offyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-agentcallbacklogin" /></para>
    </formalpara>
  </section>

  <section id="applikationen-agentmonitoroutgoing">
    <title><code>AgentMonitorOutgoing()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AgentMonitorOutgoing()</code></secondary>
    </indexterm>

    <simpara>Speichert die ausgehenden Anrufe eines Agenten.</simpara>

    <synopsis>AgentMonitorOutgoing([<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Zeichnet alle ausgehenden Anrufe eines Agenten auf.</simpara>

    <simpara>Diese Anwendung versucht, die ID eines Agenten, der einen
    ausgehenden Anruf tätigt, herauszufinden, indem er die ID des Anrufers
    (Caller ID) des gegenwärtigen Interfaces mit einer von der
    <code>AgentCallbackLogin()</code>-Anwendung gesetzten globalen Variablen
    vergleicht. Daher wird dringend empfohlen, diese Anwendung nur in
    Verbindung mit der <code>AgentCallbackLogin()</code>-Anwendung (und zwar
    nach dieser!) zu verwenden. Um die Anrufe aufzuzeichnen, werden anstelle
    der Anwendung Monitor() die Überwachungsfunktionen des
    <code>chan_agent</code>-Moduls benutzt. Deshalb muss das Aufzeichnen der
    Anrufe in der <filename>agents.conf</filename>-Datei korrekt konfiguriert
    sein.</simpara>

    <simpara>Standardmäßig werden aufgezeichnete Anrufe im Verzeichnis
    <filename>/var/spool/asterisk/monitor/</filename> abgelegt. Diese
    Einstellung kann durch Anpassung des Parameters <code>savecallsin</code>
    in der Datei <filename>agents.conf</filename> überschrieben
    werden.</simpara>

    <simpara>Können die ID des Anrufers (caller id) und/oder die ID des
    Agenten (agent id) nicht ermittelt werden, wird diese Anwendung zur
    Priorität n+101 springen, falls diese existiert.</simpara>

    <simpara>Falls keine der folgenden Optionen anderes bewirkt, liefert die
    Anwendung 0 zurück.</simpara>

    <simpara>Der <code>Optionen</code>-Parameter kann aus einem oder mehreren
    der folgenden Optionen zusammengesetzt sein.</simpara>

    <variablelist termlength="2">
      <varlistentry>
        <term><code>d</code></term>

        <listitem>
          <simpara>Zwingt die Anwendung zur Rückgabe von -1, falls ein Fehler
          vorliegt und keine Priorität n+101 existiert.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>c</code></term>

        <listitem>
          <simpara>Ändert den Call Detail Record dahingehend, dass
          <code><replaceable>Agent</replaceable>/<replaceable>AgentenNr</replaceable></code>
          als Channel, von dem der Anruf ausgeht, gespeichert wird, damit
          festgestellt werden kann, von welchem Agenten der Anruf
          ausging.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>n</code></term>

        <listitem>
          <simpara>Unterdrückt Warnmeldungen im Falle, dass Caller-ID bzw.
          Agent-ID unbekannt sind. Diese Option ist hilfreich, wenn ein
          gemeinsamer Kontext für Agenten- und Nicht-Agenten-Anrufe erwünscht
          ist.</simpara>
        </listitem>
      </varlistentry>
    </variablelist>

    <programlisting>; ausgehende Anrufe dieses Agenten aufzeichnen, und den CDRyyy123yyysw
; entsprechend anpassen:yyy123yyysw
exten =&gt; 123,1,AgentMonitorOutgoing(c)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'AgentMonitorOutgoing' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Record agent's outgoing callyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  AgentMonitorOutgoing([options]):yyy123yyysw
Tries to figure out the id of the agent who is placing outgoing call based onyyy123yyysw
comparison of the callerid of the current interface and the global variable yyy123yyysw
placed by the AgentCallbackLogin application. That's why it should be used onlyyyy123yyysw
with the AgentCallbackLogin app. Uses the monitoring functions in chan_agent yyy123yyysw
instead of Monitor application. That have to be configured in the agents.conf file.yyy123yyysw
yyy123yyysw
Return value:yyy123yyysw
Normally the app returns 0 unless the options are passed. Also if the callerid oryyy123yyysw
the agentid are not specified it'll look for n+101 priority.yyy123yyysw
yyy123yyysw
Options:yyy123yyysw
 'd' - make the app return -1 if there is an error condition and there isyyy123yyysw
       no extension n+101yyy123yyysw
 'c' - change the CDR so that the source of the call is 'Agent/agent_id'yyy123yyysw
 'n' - don't generate the warnings when there is no callerid or theyyy123yyysw
       agentid is not known.yyy123yyysw
             It's handy if you want to have one context for agent and non-agent calls.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-agentcallbacklogin" />,
      <filename>agents.conf</filename>, <xref
      linkend="applikationen-monitor" />, <xref
      linkend="applikationen-chanspy" /></para>
    </formalpara>
  </section>

  <section id="applikationen-agi">
    <title><code>AGI()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AGI()</code></secondary>
    </indexterm>

    <simpara>Ruft eine AGI-konforme Anwendung auf</simpara>

    <synopsis>AGI(<replaceable>Programm</replaceable>[,<replaceable>Argumente</replaceable>])</synopsis>

    <simpara>(Analog auch <code>EAGI()</code>, <code>FastAGI()</code>,
    <code>DeadAGI()</code>)</simpara>

    <simpara>Führt ein Asterisk-Gateway-Interface-kompatibles Programm
    <code>Programm</code> auf dem aktuellen Channel aus. Solche externen
    Programme (die in fast jeder beliebigen Sprache vorliegen können - z.B.
    Perl, PHP, ...), können den Telefonkanal steuern, Audiodateien abspielen,
    DTMF-Ziffern auslesen und so weiter. Asterisk kommuniziert dabei mit dem
    AGI-Program über <code>STDIN</code> und <code>STDOUT</code>. Die
    spezifizierten <code>Argumente</code> werden an das AGI-Programm
    durchgereicht.</simpara>

    <simpara>Das <code>Programm</code> muss im zugrundeliegenden Dateisystem
    als executable (ausführbar) gekennzeichnet sein. Der Pfad zum Programm ist
    relativ zum Asterisk-AGI-Verzeichnis, standardmäßig
    <filename>/var/lib/asterisk/agi-bin/</filename>.</simpara>

    <simpara>Soll ein AGI-Programm laufen, ohne dass ein Channel offen ist
    (wie in einer <code>h</code>-Extension, aufgelegt), muss statt dieser die
    <code>DeadAGI()</code>-Anwendung verwendet werden. Falls AGI über ein
    Netzwerk laufen soll, benutzen Sie <code>FastAGI()</code>.</simpara>

    <simpara>Benötigen Sie aus Ihrem AGI-Programm heraus Zugriff auf den
    eingehenden Audiostream, benutzen Sie <code>EAGI()</code> (Extended AGI)
    an Stelle von <code>AGI()</code>. Das eingehende Audio-Signal kann dann
    unter File Descriptor 3<footnote>
        <para>zu Erinnerung: 0: stdin, 1: stdout, 2:stderr. 3 ist ein frei
        definierter File descriptor</para>
      </footnote> eingelesen werden.</simpara>

    <simpara>Liefert -1 mit dem Auflegen oder falls ein Auflegen durch das
    Programm verlangt wurde oder 0, falls nicht aufgelegt werden
    soll.</simpara>

    <programlisting>; mein AGI-Skript aufrufen:yyy123yyysw
exten =&gt; 123,1,AGI(agi-skript)yyy123yyysw
exten =&gt; 123,n,EAGI(eagi-skript)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'AGI' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Executes an AGI compliant applicationyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  [E|Dead]AGI(command|args): Executes an Asterisk Gateway Interface compliantyyy123yyysw
program on a channel. AGI allows Asterisk to launch external programsyyy123yyysw
written in any language to control a telephony channel, play audio,yyy123yyysw
read DTMF digits, etc. by communicating with the AGI protocol on stdinyyy123yyysw
and stdout.yyy123yyysw
  This channel will stop dialplan execution on hangup inside of thisyyy123yyysw
application, except when using DeadAGI.  Otherwise, dialplan executionyyy123yyysw
will continue normally.yyy123yyysw
  A locally executed AGI script will receive SIGHUP on hangup from the channelyyy123yyysw
except when using DeadAGI. This can be disabled by setting the AGISIGHUP channelyyy123yyysw
variable to "no" before executing the AGI application.yyy123yyysw
  Using 'EAGI' provides enhanced AGI, with incoming audio available out of bandyyy123yyysw
on file descriptor 3yyy123yyysw
yyy123yyysw
  Use the CLI command 'agi show' to list available agi commandsyyy123yyysw
  This application sets the following channel variable upon completion:yyy123yyysw
     AGISTATUS      The status of the attempt to the run the AGI scriptyyy123yyysw
                    text string, one of SUCCESS | FAILED | HANGUPyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>13,19c13,15yyy123yyysw
&lt;   This channel will stop dialplan execution on hangup inside of thisyyy123yyysw
&lt; application, except when using DeadAGI.  Otherwise, dialplan executionyyy123yyysw
&lt; will continue normally.yyy123yyysw
&lt;   A locally executed AGI script will receive SIGHUP on hangup from the channelyyy123yyysw
&lt; except when using DeadAGI. This can be disabled by setting the AGISIGHUP channelyyy123yyysw
&lt; variable to "no" before executing the AGI application.yyy123yyysw
&lt;   Using 'EAGI' provides enhanced AGI, with incoming audio available out of bandyyy123yyysw
---yyy123yyysw
&gt; Returns -1 on hangup (except for DeadAGI) or if application requestedyyy123yyysw
&gt;  hangup, or 0 on non-hangup exit. yyy123yyysw
&gt; Using 'EAGI' provides enhanced AGI, with incoming audio available out of bandyyy123yyysw
22,25c18yyy123yyysw
&lt;   Use the CLI command 'agi show' to list available agi commandsyyy123yyysw
&lt;   This application sets the following channel variable upon completion:yyy123yyysw
&lt;      AGISTATUS      The status of the attempt to the run the AGI scriptyyy123yyysw
&lt;                     text string, one of SUCCESS | FAILED | HANGUPyyy123yyysw
---yyy123yyysw
&gt; Use the CLI command 'show agi' to list available agi commandsyyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-deadagi" />, <xref
      linkend="applikationen-fastagi" /></para>
    </formalpara>
  </section>

  <section id="applikationen-alarmreceiver">
    <title><code>AlarmReceiver()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AlarmReceiver()</code></secondary>
    </indexterm>

    <simpara>Bietet Unterstützung für den Empfang von Alarm-Reporten von einem
    Einbrecher- oder Feueralarm-Bedienfeld.</simpara>

    <synopsis>AlarmReceiver()</synopsis>

    <simpara>Emuliert einen Alarm-Empfänger und ermöglicht Asterisk, spezielle
    Daten von Einbrecher- und/oder Feueralarm-Bedienfeldern zu empfangen und
    zu dekodieren. Zum jetzigen Zeitpunkt wird ausschließlich das Ademco
    Contact ID Format unterstützt.</simpara>

    <simpara>Nachdem <code>AlarmReceiver()</code> aufgerufen worden ist, wird
    ein Handshake mit dem Alarm-Bedienfeld durchgeführt, Events empfangen und
    validiert und anschließend gespeichert, bis das Bedienfeld die Verbindung
    beendet. Nachdem das Bedienfeld die Verbindung beendet hat, wird die in
    der <code>eventsmd</code>-Einstellung der Datei
    <filename>alarmreceiver.conf</filename> spezifizierte Befehlskette von der
    Anwendung ausgeführt, und die Events auf die Standardeingabe der Anwendung
    umgeleitet. Die Datei <filename>alarmreceiver.conf</filename> enthält
    ebenfalls Einstellungen zum DTMF-Timing und für die Lautstärke der
    Meldetöne.</simpara>

    <simpara>Für die zuverlässige Funktion dieser Anwendung kann keine
    Garantie übernommen werden. Verlassen Sie sich also nicht ausschließlich
    auf diese Anwendung, wenn Sie sie nicht bereits ausgiebig getestet
    haben!</simpara>

    <simpara>Diese Applikation gibt immer 0 zurück.</simpara>

    <programlisting>; Asterisk soll Meldungen eines Feueralarm-Knopfes empfangen:yyy123yyysw
exten =&gt; s,1,AlarmReceiver()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'AlarmReceiver' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Provide support for receiving alarm reports from a burglar or fire alarm panelyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  AlarmReceiver(): Only 1 signalling format is supported at this time: Ademcoyyy123yyysw
Contact ID. This application should be called whenever there is an alarmyyy123yyysw
panel calling in to dump its events. The application will handshake with theyyy123yyysw
alarm panel, and receive events, validate them, handshake them, and store themyyy123yyysw
until the panel hangs up. Once the panel hangs up, the application will run theyyy123yyysw
system command specified by the eventcmd setting in alarmreceiver.conf and pipeyyy123yyysw
the events to the standard input of the application. The configuration file alsoyyy123yyysw
contains settings for DTMF timing, and for the loudness of the acknowledgementyyy123yyysw
tones.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>5c5yyy123yyysw
&lt; Provide support for receiving alarm reports from a burglar or fire alarm panelyyy123yyysw
---yyy123yyysw
&gt; Provide support for receving alarm reports from a burglar or fire alarm panelyyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><filename>alarmreceiver.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-answer">
    <title><code>Answer()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Answer()</code></secondary>
    </indexterm>

    <simpara>Antwortet auf einen klingelnden Channel.</simpara>

    <synopsis>Answer([<replaceable>Verzögerung</replaceable>])</synopsis>

    <simpara>Veranlasst Asterisk zum Beantworten eines Channels, wenn er
    gerade klingelt. Falls der aktuelle Channel nicht klingelt, tut diese
    Anwendung nichts.</simpara>

    <simpara>Es ist generell empfehlenswert, <code>Answer()</code> vor dem
    Aufrufen irgendwelcher anderen Anwendungen auf dem Channel aufzurufen,
    außer es besteht ein guter Grund, das nicht zu tun. Die meisten
    Anwendungen verlangen, dass der Channel beantwortet wird, bevor sie
    aufgerufen werden, und werden andernfalls eventuell nicht in der Lage
    sein, ihre Arbeit korrekt zu verrichten.</simpara>

    <simpara>Die optionale <code>Verzögerung</code> weist Asterisk an, soviele
    Millisekunden vor dem Antworten zu warten.</simpara>

    <simpara>Gibt bei Erfolg 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Wait(1)yyy123yyysw
exten =&gt; 123,n,Playback(hallo)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Answer' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Answer a channel if ringingyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Answer([delay]): If the call has not been answered, this application willyyy123yyysw
answer it. Otherwise, it has no effect on the call. If a delay is specified,yyy123yyysw
Asterisk will wait this number of milliseconds before answering the call.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-hangup" /></para>
    </formalpara>
  </section>

  <section id="applikationen-authenticate">
    <title><code>Authenticate()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Authenticate()</code></secondary>
    </indexterm>

    <simpara>Verlangt zur Fortsetzung eines Vorgangs die Eingabe eines
    Passworts vom Anrufer.</simpara>

    <synopsis>Authenticate(<replaceable>Passwort</replaceable>[,<replaceable>Optionen</replaceable>[,maxZiffern]])</synopsis>

    <simpara>Verlangt, dass der Anrufer ein gegebenes Passwort korrekt
    eingibt, um dann mit der Ausführung der nächsten Priorität im Dialplan
    fortzufahren. <code>Authenticate()</code> gibt dem Anrufer drei Versuche,
    das Passwort korrekt einzugeben. Andernfalls wird die Verbindung
    beendet.</simpara>

    <simpara>Falls <code>Passwort</code> mit dem <code>/</code>-Zeichen
    beginnt, wird es als Datei interpretiert, die eine Liste gültiger
    Passwörter (genau eins pro Zeile) enthält. Passwörter können auch in der
    Asterisk-Datenbank (AstDB) gespeichert sein, siehe dazu die Option
    <code>d</code> weiter unten.</simpara>

    <simpara>Folgende Optionen sind möglich (auch in Kombination):</simpara>

    <variablelist termlength="2">
      <varlistentry>
        <term><code>a</code></term>

        <listitem>
          <simpara>(accountcode) Setzt den Namen des CDR-Felds
          <code>accountcode</code> und die Variable für den Channel,
          <code>ACCOUNTCODE</code>, auf das eingegebene Passwort.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>d</code></term>

        <listitem>
          <simpara>(database) Interpretiert <code>Passwort</code> als
          Schlüssel der Asterisk-Datenbank. Wenn ein Datenbankschlüssel
          benutzt wird, kann der mit dem Schlüssel assoziierte Wert beliebig
          sein.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>r</code></term>

        <listitem>
          <simpara>(remove) Entfernt den Datenbankschlüssel nach erfolgreicher
          Verbindung und Eintreten in die Datenbank (nur möglich mit Option
          <code>d</code>).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>j</code></term>

        <listitem>
          <simpara>(jump) Bei falschem Passwort statt aufzulegen zur Priorität
          n+101 springen, falls diese existiert.</simpara>
        </listitem>
      </varlistentry>
    </variablelist>

    <important>
      <para>Beachten Sie bei der Option <code>d</code>, dass - völlig
      unverständlicherweise! - als Parameter
      <code>/<replaceable>passwoerter</replaceable>/<replaceable>1234</replaceable></code>
      verlangt wird, wobei <code>passwoerter</code> die Familie ist und
      <code>1234</code> das Passwort; der unter diesem Schlüssel gespeicherte
      Wert ist irrelevant. Der gesunde Menschenverstand würde einen
      Datenbank-Eintrag wie /passwoerter/art =&gt; 1234 erwarten.</para>
    </important>

    <simpara>Mit Angabe von <code>maxZiffern</code> wird die Eingabe
    automatisch nach sovielen Ziffern beendet, ohne dass der User
    <code>#</code> drücken muss (Default: 0 für keine Begrenzung).</simpara>

    <simpara>Liefert 0 zurück, falls der Benutzer nach maximal drei Versuchen
    ein gültiges Passwort eingegeben hat, sonst -1 (auch nach
    Auflegen).</simpara>

    <programlisting>; Passwort 1234 verlangen:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,2,Authenticate(1234,j,4)           ; hier ausnahmsweise mit Priority-Jumpingyyy123yyysw
                                                ; weil wir dem Anrufer noch sagen wollenyyy123yyysw
                                                ; dass sein Passwort falsch istyyy123yyysw
exten =&gt; 123,3,Playback(pin-nummer-akzeptiert)yyy123yyysw
exten =&gt; 123,103,Playback(pin-nummer-falsch)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Authenticate' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Authenticate a useryyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Authenticate(password[|options[|maxdigits]]): This application asks the calleryyy123yyysw
to enter a given password in order to continue dialplan execution. If the passwordyyy123yyysw
begins with the '/' character, it is interpreted as a file which contains a list ofyyy123yyysw
valid passwords, listed 1 password per line in the file.yyy123yyysw
  When using a database key, the value associated with the key can be anything.yyy123yyysw
Users have three attempts to authenticate before the channel is hung up. If theyyy123yyysw
passsword is invalid, the 'j' option is specified, and priority n+101 exists,yyy123yyysw
dialplan execution will continnue at this location.yyy123yyysw
  Options:yyy123yyysw
     a - Set the channels' account code to the password that is enteredyyy123yyysw
     d - Interpret the given path as database key, not a literal fileyyy123yyysw
     j - Support jumping to n+101 if authentication failsyyy123yyysw
     m - Interpret the given path as a file which contains a list of accountyyy123yyysw
         codes and password hashes delimited with ':', listed one per line inyyy123yyysw
         the file. When one of the passwords is matched, the channel will haveyyy123yyysw
         its account code set to the corresponding account code in the file.yyy123yyysw
     r - Remove the database key upon successful entry (valid with 'd' only)yyy123yyysw
     maxdigits  - maximum acceptable number of digits. Stops reading afteryyy123yyysw
         maxdigits have been entered (without requiring the user toyyy123yyysw
         press the '#' key).yyy123yyysw
         Defaults to 0 - no limit - wait for the user press the '#' key.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>8,10c8,10yyy123yyysw
&lt;   Authenticate(password[|options[|maxdigits]]): This application asks the calleryyy123yyysw
&lt; to enter a given password in order to continue dialplan execution. If the passwordyyy123yyysw
&lt; begins with the '/' character, it is interpreted as a file which contains a list ofyyy123yyysw
---yyy123yyysw
&gt;   Authenticate(password[|options]): This application asks the caller to enter ayyy123yyysw
&gt; given password in order to continue dialplan execution. If the password beginsyyy123yyysw
&gt; with the '/' character, it is interpreted as a file which contains a list ofyyy123yyysw
25,28d24yyy123yyysw
&lt;      maxdigits  - maximum acceptable number of digits. Stops reading afteryyy123yyysw
&lt;          maxdigits have been entered (without requiring the user toyyy123yyysw
&lt;          press the '#' key).yyy123yyysw
&lt;          Defaults to 0 - no limit - wait for the user press the '#' key.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-vmauthenticate" /></para>
    </formalpara>
  </section>

  <section id="applikationen-background">
    <title><code>Background()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Background()</code></secondary>
    </indexterm>

    <simpara>Spielt eine Audiodatei, während Touch-Tone-Ziffern (DTMF-Töne)
    akzeptiert werden.</simpara>

    <synopsis>Background(<replaceable>Datei1</replaceable>[&amp;<replaceable>Datei2</replaceable>...][,<replaceable>Optionen</replaceable>[,<replaceable>Sprache</replaceable>]])</synopsis>

    <simpara>Spielt die angegebene(n) Audiodatei(en), während auf den Start
    der Eingabe einer Extension durch den Benutzer gewartet wird. Sobald der
    Benutzer mit der Eingabe einer Extension begonnen hat, wird die Wiedergabe
    beendet. Der Dateiname sollte ohne Dateiendung angegeben werden, da
    Asterisk dann automatisch das Dateiformat mit den geringsten
    Übersetzungskosten auswählt.</simpara>

    <simpara><code>Optionen</code> ist einer der folgenden Werte (nicht
    kombinierbar):</simpara>

    <variablelist termlength="2">
      <varlistentry>
        <term><code>skip</code></term>

        <listitem>
          <simpara>Die Wiedergabe der Nachricht wird übersprungen, falls sich
          der Channel gegenwärtig nicht im <code>up</code>-Status befindet
          (z.B., weil er bisher nicht beantwortet wurde). Ist
          <code>skip</code> angegeben, wird die Anwendung unverzüglich
          beendet, falls der Channel aufgelegt ist.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>noanswer</code></term>

        <listitem>
          <simpara>Der Channel kann erst beantwortet werden, nachdem die
          angegebene Audiodatei abgespielt wurde. Ist diese Option nicht
          angegeben, wird der Channel automatisch beantwortet, bevor die
          Audiodatei abgespielt wird. Es gilt zu beachten, dass nicht alle
          Kanäle erlauben, vor ihrer Beantwortung eine Nachricht
          abzuspielen.</simpara>
        </listitem>
      </varlistentry>
    </variablelist>

    <simpara>Der Parameter <code>Sprache</code> kann verwendet werden, um eine
    bestimmte Sprache zu definieren, in der Nachrichten abgespielt werden
    sollen, falls diese nicht der für diesen Channel aktuell eingestellten
    Sprache entspricht.</simpara>

    <simpara>Liefert -1 zurück, wenn aufgelegt wurde oder falls der angegebene
    Dateiname nicht existiert, sonst 0.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Background(bitte-extension-eingeben)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'BackGround' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Play an audio file while waiting for digits of an extension to go to.yyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Background(filename1[&amp;filename2...][|options[|langoverride][|context]]):yyy123yyysw
This application will play the given list of files while waiting for anyyy123yyysw
extension to be dialed by the calling channel. To continue waiting for digitsyyy123yyysw
after this application has finished playing files, the WaitExten applicationyyy123yyysw
should be used. The 'langoverride' option explicitly specifies which languageyyy123yyysw
to attempt to use for the requested sound files. If a 'context' is specified,yyy123yyysw
this is the dialplan context that this application will use when exiting to ayyy123yyysw
dialed extension.  If one of the requested sound files does not exist, call processing will beyyy123yyysw
terminated.yyy123yyysw
  Options:yyy123yyysw
    s - Causes the playback of the message to be skippedyyy123yyysw
          if the channel is not in the 'up' state (i.e. ityyy123yyysw
          hasn't been answered yet). If this happens, theyyy123yyysw
          application will return immediately.yyy123yyysw
    n - Don't answer the channel before playing the files.yyy123yyysw
    m - Only break if a digit hit matches a one digityyy123yyysw
          extension in the destination context.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>5c5yyy123yyysw
&lt; Play an audio file while waiting for digits of an extension to go to.yyy123yyysw
---yyy123yyysw
&gt; Play a file while awaiting extensionyyy123yyysw
12c12yyy123yyysw
&lt; should be used. The 'langoverride' option explicitly specifies which languageyyy123yyysw
---yyy123yyysw
&gt; should be used. The 'langoverride' option explicity specifies which languageyyy123yyysw
18c18yyy123yyysw
&lt;     s - Causes the playback of the message to be skippedyyy123yyysw
---yyy123yyysw
&gt;     s - causes the playback of the message to be skippedyyy123yyysw
20c20yyy123yyysw
&lt;           hasn't been answered yet). If this happens, theyyy123yyysw
---yyy123yyysw
&gt;           hasn't been answered yet.) If this happens, theyyy123yyysw
22,24c22,24yyy123yyysw
&lt;     n - Don't answer the channel before playing the files.yyy123yyysw
&lt;     m - Only break if a digit hit matches a one digityyy123yyysw
&lt;           extension in the destination context.yyy123yyysw
---yyy123yyysw
&gt;     n - don't answer the channel before playing the filesyyy123yyysw
&gt;     m - only break if a digit hit matches a one digityyy123yyysw
&gt;           extension in the destination contextyyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-playback" />, <xref
      linkend="applikationen-backgrounddetect" />, CLI-Befehl <code>show
      translation</code></para>
    </formalpara>
  </section>

  <section id="applikationen-backgrounddetect">
    <title><code>BackgroundDetect()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>BackgroundDetect()</code></secondary>
    </indexterm>

    <simpara>Spielt eine Audiodatei im Hintergrund und erkennt
    Sprechen.</simpara>

    <synopsis>BackgroundDetect(<replaceable>SoundDatei</replaceable>[,<replaceable>Stille</replaceable>[,<replaceable>Min</replaceable>[,<replaceable>Max</replaceable>]]])</synopsis>

    <simpara>Ähnlich <code>Background()</code>, versucht jedoch Sprechen zu
    erkennen.</simpara>

    <simpara>Während der Wiedergabe der Datei wird Eingang von Audio in
    Empfangsrichtung überwacht. Wird eine Geräuschphase von mehr als
    <code>Min</code> Millisekunden Dauer und weniger als <code>Max</code>
    Millisekunden registriert, und darauf folgend eine geräuschlose Phase von
    wenigstens <code>Stille</code> Millisekunden, wird die Audiowiedergabe
    abgebrochen und die Ausführung an die Extension <code>talk</code>
    delegiert, falls diese existiert.</simpara>

    <simpara>Sind <code>Stille</code>, <code>Min</code> und <code>Max</code>
    nicht spezifiziert, werden jeweils die Standardwerte 1000 ms, 100 ms und
    unendlich angenommen.</simpara>

    <simpara>Wenn aufgelegt wird, liefert die Anwendung -1 zurück, nach
    abgeschossener Wiedergabe ohne vorhandene Ausstiegsbedingungen
    0.</simpara>

    <programlisting>exten =&gt; 123,1,BackgroundDetect(sinfonie)yyy123yyysw
exten =&gt; 123,n,Playback(vm-sorry)yyy123yyysw
exten =&gt; talk,1,Playback(ja-bitte)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'BackgroundDetect' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Background a file with talk detectyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  BackgroundDetect(filename[|sil[|min|[max]]]):  Plays  back  a  givenyyy123yyysw
filename, waiting for interruption from a given digit (the digit mustyyy123yyysw
start the beginning of a valid extension, or it will be ignored).yyy123yyysw
During the playback of the file, audio is monitored in the receiveyyy123yyysw
direction, and if a period of non-silence which is greater than 'min' msyyy123yyysw
yet less than 'max' ms is followed by silence for at least 'sil' ms thenyyy123yyysw
the audio playback is aborted and processing jumps to the 'talk' extensionyyy123yyysw
if available.  If unspecified, sil, min, and max default to 1000, 100, andyyy123yyysw
infinity respectively.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-playback" />, <xref
      linkend="applikationen-background" /></para>
    </formalpara>
  </section>

  <section id="applikationen-busy">
    <title><code>Busy()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Busy()</code></secondary>
    </indexterm>

    <simpara>Zeigt dem Channel besetzt an.</simpara>

    <synopsis>Busy([<replaceable>Timeout</replaceable>])</synopsis>

    <simpara>Fordert den Channel auf, ein Besetzt-Zeichen zu signalisieren und
    wartet dann, bis der Benutzer auflegt oder auf den Ablauf der optional
    anzugebenden zeitlichen Frist (<code>Timeout</code>, in
    Sekunden).</simpara>

    <simpara>Diese Anwendung signalisiert einen Besetzt-Zustand nur dem
    überbrückten Channel (bridged channel). Jeder spezielle Channeltyp hat
    seine eigene Art, dem Anrufer besetzt mitzuteilen. Sie können
    <code>Playtones(busy)</code> verwenden, um dem Anrufer ein Besetztzeichen
    vorzuspielen.</simpara>

    <simpara>Gibt immer -1 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Playback(vm-sorry)yyy123yyysw
exten =&gt; 123,n,Playtones(busy)yyy123yyysw
exten =&gt; 123,n,Busy()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Busy' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Indicate the Busy conditionyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Busy([timeout]): This application will indicate the busy condition toyyy123yyysw
the calling channel. If the optional timeout is specified, the calling channelyyy123yyysw
will be hung up after the specified number of seconds. Otherwise, thisyyy123yyysw
application will wait until the calling channel hangs up.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-congestion" />, <xref
      linkend="applikationen-progress" />, <xref
      linkend="applikationen-playtones" /></para>
    </formalpara>
  </section>

  <section id="applikationen-callingpres">
    <title><code>CallingPres()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>CallingPres()</code></secondary>
    </indexterm>

    <simpara>Ändert die Präsentation der Anrufer-ID (Caller-ID).</simpara>

    <synopsis>CallingPres(<replaceable>presentation</replaceable>)</synopsis>

    <simpara>Ändert die Präsentations-Parameter für die Anrufer ID auf einer
    Q.931 PRI-Verbindung. Diese Parameter sollten gesetzt sein, bevor ein
    ausgehender Anruf getätigt wird. Der Präsentations-Parameter
    <code>presentation</code> bestimmt zum ersten, ob der angerufene
    Teilnehmer die Caller-ID-Information angezeigt bekommt oder nicht, und zum
    zweiten, ob die Caller-ID-Information von verlässlicher Quelle auf
    verifiziert geprüft wurde oder nicht (engl.: screening).</simpara>

    <simpara>Diese Anwendung wurde durch <code>SetCallerPres()</code> ersetzt,
    welche einfacher handzuhaben und weniger abhängig von Zaptel
    ist.</simpara>

    <simpara>Diese Anwendung generiert aus der Kombination von
    Anrufpräsentations-Einstellungen und Screening-Einstellungen eine Zahl.
    Die Werte selbst sind im ITU Q.931-Standard wie in den folgenden Tabellen
    definiert.</simpara>

    <para>Screening wird durch die Bits 1 und 2 gesteuert: <informaltable
        colsep="0" frame="none" rowsep="0">
        <tgroup cols="3">
          <colspec colnum="1" colwidth="30pt" />

          <colspec colnum="2" colwidth="30pt" />

          <thead>
            <row>
              <entry>Bit1</entry>

              <entry>Bit2</entry>

              <entry>Erläuterung</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>0</entry>

              <entry>0</entry>

              <entry>Die Caller-ID-Information liefert der Teilnehmer, sie ist
              nicht verifiziert.</entry>
            </row>

            <row>
              <entry>0</entry>

              <entry>1</entry>

              <entry>Die Caller-ID-Information liefert der Teilnehmer, sie ist
              erfolgreich verifiziert.</entry>
            </row>

            <row>
              <entry>1</entry>

              <entry>0</entry>

              <entry>Die Caller-ID-Information liefert der Teilnehmer, die
              Verifizierung war nicht erfolgreich.</entry>
            </row>

            <row>
              <entry>1</entry>

              <entry>1</entry>

              <entry>Die Caller-ID-Information liefert das Netzwerk.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></para>

    <para>Präsentation wird durch die Bits 6 und 7 gesteuert: <informaltable
        colsep="0" frame="none" rowsep="0">
        <tgroup cols="3">
          <colspec colnum="1" colwidth="30pt" />

          <colspec colnum="2" colwidth="30pt" />

          <thead>
            <row>
              <entry>Bit6</entry>

              <entry>Bit7</entry>

              <entry>Erläuterung</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>0</entry>

              <entry>0</entry>

              <entry>Anzeige der Caller-ID-Information ist erlaubt.</entry>
            </row>

            <row>
              <entry>0</entry>

              <entry>1</entry>

              <entry>Anzeige der Caller-ID-Information ist nicht
              erlaubt.</entry>
            </row>

            <row>
              <entry>1</entry>

              <entry>0</entry>

              <entry>Die Nummer ist aufgrund von Zwischenstationen nicht
              verfügbar.</entry>
            </row>

            <row>
              <entry>1</entry>

              <entry>1</entry>

              <entry>Reserviert</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></para>

    <simpara>Die Bits 3, 4, 5 und 8 sollten alle auf Null (0) gesetzt werden.
    Beachten Sie, dass die Bits in der Folge vom höchstwertigsten zum
    niederwertigsten nummeriert sind in der Form 87654321.</simpara>

    <programlisting>; presentation setzen auf:yyy123yyysw
; presentation erlaubt                (00000000)yyy123yyysw
; Netzwerk angegeben                  (00000011)yyy123yyysw
; ------------------                  ----------yyy123yyysw
; Ergebnis: 3 (bitweises UND)         (00000011)yyy123yyysw
exten =&gt; 123,1,CallingPres(3)yyy123yyysw
exten =&gt; 123,2,Dial(Zap/g1/1234567)yyy123yyysw
; presentation setzen auf:yyy123yyysw
; presentation nicht erlaubt          (00100000)yyy123yyysw
; vom User, verifiziert               (00000001)yyy123yyysw
; ------------------                  ----------yyy123yyysw
; Ergebnis: 33 (bitweises UND)        (00100001)yyy123yyysw
exten =&gt; 124,1,CallingPres(33)yyy123yyysw
exten =&gt; 124,2,Dial(Zap/g1/1234568)yyy123yyysw</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-setcallerpres" /></para>
    </formalpara>
  </section>

  <section id="applikationen-changemonitor">
    <title><code>ChangeMonitor()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ChangeMonitor()</code></secondary>
    </indexterm>

    <simpara>Ändert den Dateinamen der Protokolldatei für einen
    Channel.</simpara>

    <synopsis>ChangeMonitor(<replaceable>Basis-Dateiname</replaceable>)</synopsis>

    <simpara>Ändert den Namen der bei der Überwachung eines Channels mit
    <code>Monitor()</code> aufgezeichneten Datei. Diese Anwendungen hat
    keinerlei Auswirkungen, wenn der fragliche Channel nicht überwacht
    wird.</simpara>

    <programlisting>; Channel mitschneiden mit Datei-Basisname 'mitschnitt'yyy123yyysw
exten =&gt; 123,1,Monitor(mitschnitt)yyy123yyysw
; Datei-Basisnamen auf 'mitschnitt2' ändernyyy123yyysw
exten =&gt; 123,n,ChangeMonitor(mitschnitt2)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ChangeMonitor' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Change monitoring filename of a channelyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
ChangeMonitor(filename_base)yyy123yyysw
Changes monitoring filename of a channel. Has no effect if the channel is not monitoredyyy123yyysw
The argument is the new filename base to use for monitoring this channel.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-monitor" />, <xref
      linkend="applikationen-stopmonitor" /></para>
    </formalpara>
  </section>

  <section id="applikationen-chanisavail">
    <title><code>ChanIsAvail()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ChanIsAvail()</code></secondary>
    </indexterm>

    <simpara>Ermittelt, ob ein bestimmter Channel momentan verfügbar
    ist.</simpara>

    <synopsis>ChanIsAvail(<replaceable>Technology1</replaceable>/<replaceable>Resource1</replaceable>[&amp;<replaceable>Technology2</replaceable>/<replaceable>Resource2</replaceable>...][,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Prüft, ob irgendeiner der angeforderten Kanäle verfügbar ist (in
    der angegebenen Reihenfolge). Liefert 0 zurück bei Erfolg oder -1, falls
    kein Kanal verfügbar ist.</simpara>

    <simpara>Ist die Option <code>s</code> (für state) angegeben, wird
    Asterisk den Channel als nicht verfügbar betrachten, wenn er in Gebrauch
    ist, sogar falls er einen weiteren anderen Anruf aufnehmen kann. Mit der
    Option <code>j</code> wird, falls der Channel nicht verfügbar ist, zur
    Priorität n+101 gesprungen.</simpara>

    <note>
      <simpara>Dass ein Kanal verfügbar ist, bedeutet aber nicht automatisch,
      dass er auch frei ist oder dass das Endgerät einen Anruf akzeptieren
      würde. Das erfährt man durch ein <code>Dial()</code> zum
      Kanal.</simpara>
    </note>

    <para><code>ChanIsAvail()</code> setzt die folgenden Channelvariablen:
    <variablelist termlength="18">
        <varlistentry>
          <term><code>${AVAILCHAN}</code></term>

          <listitem>
            <simpara>Der Name des verfügbaren Channels, inklusive der
            Session-Nummer des Anrufs.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>${AVAILORIGCHAN}</code></term>

          <listitem>
            <simpara>Der kanonische Channelname, der benutzt wurde um den
            Channel zu erstellen, d.h. der Channelname ohne eine
            Session-Nummer.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>${AVAILSTATUS}</code></term>

          <listitem>
            <para>Der Status-Code des Channels:<variablelist
                termlength="24">
                <varlistentry>
                  <term><code>AST_DEVICE_UNKNOWN</code> (0)</term>

                  <listitem>
                    <simpara>Unbekannt. Der Channel ist gültig, aber in
                    unbekanntem Zustand.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_NOT_INUSE</code> (1)</term>

                  <listitem>
                    <simpara>Channel wird nicht verwendet.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_IN_USE</code> (2)</term>

                  <listitem>
                    <simpara>Der Channel ist in Gebrauch.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_BUSY</code> (3)</term>

                  <listitem>
                    <simpara>Besetzt.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_INVALID</code> (4)</term>

                  <listitem>
                    <simpara>Ungültig. Unbekannter Channel.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_UNAVAILABLE</code> (5)</term>

                  <listitem>
                    <simpara>Nicht verfügbar. Channel ist nicht
                    registriert.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_RINGING</code> (6)</term>

                  <listitem>
                    <simpara>Channel klingelt.</simpara>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <note>
      <simpara>Diese Anwendung arbeitet auf MGCP-Kanälen nicht
      ordnungsgemäß.</simpara>
    </note>

    <programlisting>; Zap/1 und Zap/2 auf Verfügbarkeit prüfen:yyy123yyysw
exten =&gt; 123,1,ChanIsAvail(Zap/1&amp;Zap/2,j)yyy123yyysw
; hier ausnahmsweise mit Priority jumping, da wir, falls kein Kanalyyy123yyysw
; frei ist, noch eine Ansage machen wollenyyy123yyysw
yyy123yyysw
; mindestens einer der Kanäle verfügbar, auf diesem wählen:yyy123yyysw
exten =&gt; 123,2,NoOp(${AVAILORIGCHAN} ist verfuegbar)yyy123yyysw
exten =&gt; 123,3,Dial(${AVAILORIGCHAN}/123456)yyy123yyysw
yyy123yyysw
; wenn wir bei Prio. 102 landen, ist weder Zap/1 noch Zap/2 verfügbaryyy123yyysw
exten =&gt; 123,102,Playback(alle-kanaele-belegt)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ChanIsAvail' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Check channel availabilityyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  ChanIsAvail(Technology/resource[&amp;Technology2/resource2...][|options]): yyy123yyysw
This application will check to see if any of the specified channels areyyy123yyysw
available. The following variables will be set by this application:yyy123yyysw
  ${AVAILCHAN}     - the name of the available channel, if one existsyyy123yyysw
  ${AVAILORIGCHAN} - the canonical channel name that was used to create the channelyyy123yyysw
  ${AVAILSTATUS}   - the status code for the available channelyyy123yyysw
  Options:yyy123yyysw
    s - Consider the channel unavailable if the channel is in use at allyyy123yyysw
    j - Support jumping to priority n+101 if no channel is availableyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-chanspy">
    <title><code>ChanSpy()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ChanSpy()</code></secondary>
    </indexterm>

    <simpara>Einen Channel belauschen</simpara>

    <synopsis>ChanSpy([<replaceable>Channelpräfix</replaceable>[,<replaceable>Optionen</replaceable>]])</synopsis>

    <simpara>Erlaubt es, das Gespräch auf beliebigen Kanälen mitzuhören. (Ist
    also nicht wie <code>ZapBarge()</code>/<code>ZapScan()</code> an
    Zap-Kanäle gebunden.) Für das Verständnis einiger Optionen ist zu
    beachten, dass diese Applikation einzelne Kanäle abhört, aber nicht
    Gespräche im eigentlichen Sinn (min. 2 Teilnehmer), obwohl Sie natürlich
    das ein- und ausgehende Audio auf dem abgehörten Channel hören
    können.</simpara>

    <simpara>Wenn <code>Channelpräfix</code> angegeben ist, stehen nur Kanäle,
    die mit diesem String beginnen, zur Auswahl.</simpara>

    <para><code>Optionen</code> (auch in Kombination):<variablelist
        termlength="11">
        <varlistentry>
          <term><code>b</code></term>

          <listitem>
            <simpara>(bridged) Auswahl nur auf verbundene Kanäle
            beschränken.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>g(<replaceable>grp</replaceable>)</code></term>

          <listitem>
            <simpara>(group) Auswahl auf Kanäle beschränken, auf denen
            <code>grp</code> in der durch Doppelpunkt (<code>:</code>)
            getrennten Liste <code>${SPYGROUP}</code> (Channelvariable)
            enthalten ist.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>q</term>

          <listitem>
            <simpara>(quiet) Keine Piep-Töne beim Umschalten von Kanälen
            spielen und Channelname nicht ankündigen.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>r[(<replaceable>Name</replaceable>)]</code></term>

          <listitem>
            <para>(record) Die Sitzung in einer Datei im Verzeichnis
            <filename>/var/spool/asterisk/monitor/</filename> aufzeichnen.
            Default-Basis-Dateiname (also ohne Endung) ist
            <filename>chanspy</filename>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>v[(<replaceable>Wert</replaceable>)]</code></term>

          <listitem>
            <para>(volume) Die anfängliche Lautstärkeeinstellung von
            <code>-4</code> (leise) bis <code>4</code> (laut)
            verändern.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>w</code></term>

          <listitem>
            <simpara>(whisper) Flüster-Modus aktivieren. Damit kann der
            lauschende Channel mit dem belauschten sprechen, wobei dies nur
            der belauschte Channel hört, nicht dessen Gesprächspartner. (Diese
            Option ist seit Asterisk 1.4 verfügbar.)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>W</code></term>

          <listitem>
            <simpara>(private whisper) Privater Flüster-Modus. Wie
            <code>w</code>, aber der lauschende Channel kann den belauschten
            nicht hören. (sinnvoll?)</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <para>Während des Abhörens können folgende Tastenbefehle gegeben
    werden:<variablelist termlength="6">
        <varlistentry>
          <term><code>#</code></term>

          <listitem>
            <simpara>Schaltet durch die Lautstärkeeinstellung (-4 bis
            4)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>*</code></term>

          <listitem>
            <simpara>Schaltet zu einem anderen Channel</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code><replaceable>...</replaceable>#</code></term>

          <listitem>
            <simpara>Eine Reihe von Ziffern, abgeschlossen durch
            <code>#</code>, wird an <code>Channelpräfix</code> angehängt. Wenn
            Sie z.B. <code>ChanSpy(Agent)</code> ausführen und
            <code>1234#</code> eingeben, werden Sie auf dem Channel
            <code>Agent/1234</code> lauschen.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>; Agenten belauschen:yyy123yyysw
exten =&gt; 123,1,ChanSpy(Agent)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw
yyy123yyysw
; Beispiel für die Option g:yyy123yyysw
; auf Anrufen auf 0... SPYGROUP 10005 setzen:yyy123yyysw
exten =&gt; _0.,1,Set(SPYGROUP=10005)yyy123yyysw
;...yyy123yyysw
; Kanäle der SPYGROUP 10005 belauschen:yyy123yyysw
exten =&gt; 123,1,ChanSpy(,g(10005))yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ChanSpy' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Listen to a channel, and optionally whisper into ityyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  ChanSpy([chanprefix][|options]): This application is used to listen to theyyy123yyysw
audio from an Asterisk channel. This includes the audio coming in andyyy123yyysw
out of the channel being spied on. If the 'chanprefix' parameter is specified,yyy123yyysw
only channels beginning with this string will be spied upon.yyy123yyysw
  While spying, the following actions may be performed:yyy123yyysw
    - Dialing # cycles the volume level.yyy123yyysw
    - Dialing * will stop spying and look for another channel to spy on.yyy123yyysw
    - Dialing a series of digits followed by # builds a channel name to appendyyy123yyysw
      to 'chanprefix'. For example, executing ChanSpy(Agent) and then dialingyyy123yyysw
      the digits '1234#' while spying will begin spying on the channelyyy123yyysw
      'Agent/1234'.yyy123yyysw
  Options:yyy123yyysw
    b             - Only spy on channels involved in a bridged call.yyy123yyysw
    g(grp)        - Match only channels where their ${SPYGROUP} variable is set toyyy123yyysw
                    contain 'grp' in an optional : delimited list.yyy123yyysw
    q             - Don't play a beep when beginning to spy on a channel, or speak theyyy123yyysw
                    selected channel name.yyy123yyysw
    r[(basename)] - Record the session to the monitor spool directory. Anyyy123yyysw
                    optional base for the filename may be specified. Theyyy123yyysw
                    default is 'chanspy'.yyy123yyysw
    v([value])    - Adjust the initial volume in the range from -4 to 4. Ayyy123yyysw
                    negative value refers to a quieter setting.yyy123yyysw
    w             - Enable 'whisper' mode, so the spying channel can talk toyyy123yyysw
                    the spied-on channel.yyy123yyysw
    W             - Enable 'private whisper' mode, so the spying channel canyyy123yyysw
                    talk to the spied-on channel but cannot listen to thatyyy123yyysw
                    channel.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>5c5,6yyy123yyysw
&lt; Listen to a channel, and optionally whisper into ityyy123yyysw
---yyy123yyysw
&gt; Listen to the audio of an active channelyyy123yyysw
&gt; yyy123yyysw
9c10yyy123yyysw
&lt; audio from an Asterisk channel. This includes the audio coming in andyyy123yyysw
---yyy123yyysw
&gt; audio from an active Asterisk channel. This includes the audio coming in andyyy123yyysw
12c13yyy123yyysw
&lt;   While spying, the following actions may be performed:yyy123yyysw
---yyy123yyysw
&gt;   While Spying, the following actions may be performed:yyy123yyysw
17c18yyy123yyysw
&lt;       the digits '1234#' while spying will begin spying on the channelyyy123yyysw
---yyy123yyysw
&gt;       the digits '1234#' while spying will begin spying on the channel,yyy123yyysw
20,24c21,24yyy123yyysw
&lt;     b             - Only spy on channels involved in a bridged call.yyy123yyysw
&lt;     g(grp)        - Match only channels where their ${SPYGROUP} variable is set toyyy123yyysw
&lt;                     contain 'grp' in an optional : delimited list.yyy123yyysw
&lt;     q             - Don't play a beep when beginning to spy on a channel, or speak theyyy123yyysw
&lt;                     selected channel name.yyy123yyysw
---yyy123yyysw
&gt;     b - Only spy on channels involved in a bridged call.yyy123yyysw
&gt;     g(grp) - Match only channels where their ${SPYGROUP} variable is set toyyy123yyysw
&gt;              'grp'.yyy123yyysw
&gt;     q - Don't play a beep when beginning to spy on a channel.yyy123yyysw
28,34c28,29yyy123yyysw
&lt;     v([value])    - Adjust the initial volume in the range from -4 to 4. Ayyy123yyysw
&lt;                     negative value refers to a quieter setting.yyy123yyysw
&lt;     w             - Enable 'whisper' mode, so the spying channel can talk toyyy123yyysw
&lt;                     the spied-on channel.yyy123yyysw
&lt;     W             - Enable 'private whisper' mode, so the spying channel canyyy123yyysw
&lt;                     talk to the spied-on channel but cannot listen to thatyyy123yyysw
&lt;                     channel.yyy123yyysw
---yyy123yyysw
&gt;     v([value]) - Adjust the initial volume in the range from -4 to 4. Ayyy123yyysw
&gt;                  negative value refers to a quieter setting.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-zapbarge" />, <xref
      linkend="applikationen-zapscan" />, <xref
      linkend="applikationen-monitor" /></para>
    </formalpara>
  </section>

  <section id="applikationen-congestion">
    <title><code>Congestion()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Congestion()</code></secondary>
    </indexterm>

    <simpara>Zeigt Stau (Überlastung) auf dem Channel an.</simpara>

    <synopsis>Congestion([<replaceable>Timeout</replaceable>])</synopsis>

    <simpara>Zeigt auf dem Channel Stau an und wartet dann, bis der Teilnehmer
    auflegt, oder bis die optional spezifizierbare Frist
    (<code>Timeout</code>, in Sekunden) abgelaufen ist.</simpara>

    <simpara>Diese Anwendung signalisiert Stau lediglich, sie spielt aber dem
    Teilnehmer keinen Stau-Ton vor. Um einem Anrufer einen Stau-Ton
    vorzuspielen, kann <code>Playtones(congestion)</code> verwendet
    werden.</simpara>

    <simpara>Liefert stets -1 zurück.</simpara>

    <programlisting>; bei Caller ID is 0123-123456 immer Stau-Signal spielen:yyy123yyysw
exten =&gt; 123,1,GotoIf($[${CALLERID(num)} = 0123123456]?10)yyy123yyysw
exten =&gt; 123,n,Playtones(congestion)yyy123yyysw
exten =&gt; 123,n,Congestion(5)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw
exten =&gt; 123,10,Dial(Zap/1)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Congestion' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Indicate the Congestion conditionyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Congestion([timeout]): This application will indicate the congestionyyy123yyysw
condition to the calling channel. If the optional timeout is specified, theyyy123yyysw
calling channel will be hung up after the specified number of seconds.yyy123yyysw
Otherwise, this application will wait until the calling channel hangs up.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>8c8yyy123yyysw
&lt;   Congestion([timeout]): This application will indicate the congestionyyy123yyysw
---yyy123yyysw
&gt;   Congestion([timeout]): This application will indicate the congenstionyyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-busy" />, <xref
      linkend="applikationen-progress" />, <xref
      linkend="applikationen-playtones" /></para>
    </formalpara>
  </section>

  <section id="applikationen-controlplayback">
    <title><code>ControlPlayback()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ControlPlayback()</code></secondary>
    </indexterm>

    <simpara>Spielt eine Datei ab und kann diese auch schnell vor- und
    zurückspulen.</simpara>

    <synopsis>ControlPlayback(<replaceable>Datei</replaceable>[,<replaceable>skipms</replaceable>[,<replaceable>ffchar</replaceable>[,<replaceable>rewchar</replaceable>[,<replaceable>stopchar</replaceable>[,<replaceable>pausechar</replaceable>]]]]])</synopsis>

    <simpara>Spielt die angegebene Datei ab und ermöglicht es dem Anrufer,
    sich durch Betätigen der Tasten <code>ffchar</code> und
    <code>rewchar</code> in dieser Datei vorwärts und rückwärts zu bewegen.
    Als Standardeinstellung können die Tasten <code>#</code> und * zum Vor-
    und Zurückspulen der Datei verwendet werden. Ist <code>stopchar</code>
    spezifiziert, hält die Anwendung die Wiedergabe an, wenn die
    stopchar-Taste gedrückt wird. Existiert die Datei nicht, geht die
    Anwendung zu Priorität n+101 über, falls vorhanden.</simpara>

    <simpara>Die <code>skipms</code>-Option gibt an, wie weit mit jedem
    Drücken von <code>ffchar</code> oder <code>rewchar</code> in der Datei
    vor- bzw. zurückgesprungen wird.</simpara>

    <simpara>Die <code>pausechar-Option</code> kann ebenfalls spezifiziert
    werden, sie erlaubt es, die Wiedergabe der Datei vorübergehend anzuhalten
    (Pause). Erneutes Drücken von <code>pausechar</code> setzt die Wiedergabe
    der Datei dann fort.</simpara>

    <simpara>Gibt -1 zurück, falls der Channel während der Wiedergabe
    aufgelegt wurde.</simpara>

    <programlisting>; dem Anrufer "sinfonie" vorspielen mit Steuerungsmöglichkeit:yyy123yyysw
exten =&gt; 123,1,ControlPlayback(sinfonie,5000,#,*,5,0)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ControlPlayback' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Play a file with fast forward and rewindyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  ControlPlayback(file[|skipms[|ff[|rew[|stop[|pause[|restart|options]]]]]]]):yyy123yyysw
This application will play back the given filename. By default, the '*' keyyyy123yyysw
can be used to rewind, and the '#' key can be used to fast-forward.yyy123yyysw
Parameters:yyy123yyysw
  skipms  - This is number of milliseconds to skip when rewinding oryyy123yyysw
            fast-forwarding.yyy123yyysw
  ff      - Fast-forward when this DTMF digit is received.yyy123yyysw
  rew     - Rewind when this DTMF digit is received.yyy123yyysw
  stop    - Stop playback when this DTMF digit is received.yyy123yyysw
  pause   - Pause playback when this DTMF digit is received.yyy123yyysw
  restart - Restart playback when this DTMF digit is received.yyy123yyysw
Options:yyy123yyysw
  j - Jump to priority n+101 if the requested file is not found.yyy123yyysw
This application sets the following channel variable upon completion:yyy123yyysw
  CPLAYBACKSTATUS -  This variable contains the status of the attempt as a textyyy123yyysw
                     string, one of: SUCCESS | USERSTOPPED | ERRORyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-playback" />, <xref
      linkend="applikationen-background" /></para>
    </formalpara>
  </section>

  <section id="applikationen-dbdel">
    <title><code>DBdel()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>DBdel()</code></secondary>
    </indexterm>

    <simpara>Löscht einen Schlüssel aus der AstDB.</simpara>

    <synopsis>DBdel(<replaceable>Familie/Schlüssel</replaceable>)</synopsis>

    <simpara>Löscht den durch <code>key</code> spezifizierten Schlüssel aus
    der Schlüsselfamilie <code>Familie</code> aus der AstDB.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Set(DB(test/name)=Peter)    ; in AstDB speichernyyy123yyysw
exten =&gt; 123,n,Set(name=${DB(test/name)})  ; abfragenyyy123yyysw
exten =&gt; 123,n,DBdel(test/name)            ; löschenyyy123yyysw</programlisting>

    <important>
      <simpara>Die Applikation <code>DBdel()</code> ist seit 1.4
      <quote>deprecated</quote> und wird durch die Funktion
      <code>DB_DELETE()</code> ersetzt.</simpara>
    </important>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'DBdel' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Delete a key from the databaseyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  DBdel(family/key): This application will delete a key from the Asteriskyyy123yyysw
database.yyy123yyysw
  This application has been DEPRECATED in favor of the DB_DELETE function.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>10d9yyy123yyysw
&lt;   This application has been DEPRECATED in favor of the DB_DELETE function.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-dbdeltree" />, <xref
      linkend="funktionen-db" />, <xref
      linkend="funktionen-db_delete" /></para>
    </formalpara>
  </section>

  <section id="applikationen-dbdeltree">
    <title><code>DBdeltree()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>DBdeltree()</code></secondary>
    </indexterm>

    <simpara>Löscht eine Familie oder einen Schlüsselbaum aus der
    AstDB.</simpara>

    <synopsis>DBdeltree(<replaceable>Familie</replaceable>[/<replaceable>Schlüsselzweig</replaceable>])</synopsis>

    <simpara>Löscht den angegebenen Schlüsselzweig aus der AstDB.</simpara>

    <simpara>Liefert immer 0 zurück.</simpara>

    <programlisting>; Einträge in der AstDB anlegen:yyy123yyysw
exten =&gt; 123,1,Set(DB(farben/eins)=rot)yyy123yyysw
exten =&gt; 123,n,Set(DB(farben/zwei)=blau)yyy123yyysw
; now delete the key family named testyyy123yyysw
exten =&gt; 123,n,DBdeltree(farben)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'DBdeltree' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Delete a family or keytree from the databaseyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  DBdeltree(family[/keytree]): This application will delete a family or keytreeyyy123yyysw
from the Asterisk databaseyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-dbdel" />, <xref
      linkend="funktionen-db" /></para>
    </formalpara>
  </section>

  <section id="applikationen-deadagi">
    <title><code>DeadAGI()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>DeadAGI()</code></secondary>
    </indexterm>

    <simpara>Führt ein AGI-konformes Skript auf einem toten (aufgelegten)
    Channel aus.</simpara>

    <synopsis>DeadAGI(<replaceable>Programm</replaceable>,<replaceable>Argumente</replaceable>)</synopsis>

    <simpara>Führt ein AGI-konformes Skript auf einem toten (aufgelegten)
    Channel aus. Mit Hilfe von AGI kann Asterisk externe Programme in nahezu
    jeder beliebigen Sprache ausführen (starten), um einen Telefonkanal zu
    steuern, Audio abzuspielen, DTMF-Ziffern auszulesen usw., indem es nach
    dem AGI-Protokoll auf <code>STDIN</code> und <code>STDOUT</code> mit
    diesen kommuniziert. Die übergebenen <code>Argumente</code> werden an das
    AGI-Programm durchgereicht.</simpara>

    <simpara>Diese Anwendung wurde speziell für tote Kanäle entwickelt, weil
    das Standard AGI-Interface nicht funktioniert, nachdem der Channel
    aufgelegt wurde. Dass der Channel <quote>tot</quote> ist, ist allerdings
    keine Voraussetzung für den Start eines DeadAGI-Skripts!</simpara>

    <simpara>Benutzen Sie den Befehl <code>show agi</code> auf der
    Kommandozeilen-Schnittstelle, um eine Liste aller verfügbaren AGI-Befehle
    zu erhalten.</simpara>

    <simpara>Liefert -1 zurück, falls die Anwendung ein Auflegen angefordert
    hat, oder 0 beim Austritt ohne Auflegen.</simpara>

    <programlisting>; mit einem bereits aufgelegten (h) Kanal noch ein AGI-Skript ausführen:yyy123yyysw
exten =&gt; h,1,DeadAGI(agi-test)yyy123yyysw</programlisting>

    <important>
      <simpara>Der Channel wird solange als aktiv angesehen wird, bis das
      Skript beendet wird, was z.B. für CDRs von Bedeutung sein
      kann.</simpara>

      <para>Beachten Sie, dass auch DeadAGI-Skripte beim Auflegen des Channels
      ein <code>SIGHUP</code>-Signal erhalten, was ggf. ignoriert werden
      muss:<informaltable colsep="none" rowsep="none">
          <tgroup cols="2">
            <colspec colnum="1" colwidth="50pt" />

            <tbody>
              <row>
                <entry>Perl</entry>

                <entry><programlisting>$SIG{HUP} = "IGNORE";yyy123yyysw</programlisting></entry>
              </row>

              <row>
                <entry>PHP</entry>

                <entry><programlisting>pcntl_signal(SIGHUP, SIG_IGN);yyy123yyysw</programlisting>(PHP
                muss mit <code>--enable-pcntl</code> kompiliert worden sein,
                was per Default nicht der Fall ist!)</entry>
              </row>

              <row>
                <entry>Ruby</entry>

                <entry><programlisting>trap('SIGHUP','IGNORE')yyy123yyysw</programlisting></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable></para>

      <simpara>Es ist auch wichtig, dass Sie nach dem Auflegen nicht mehr mit
      Asterisk kommunizieren, sonst erhält das Skript ein
      <code>SIGPIPE</code>, was das Skript beendet, sofern Sie es nicht
      ignorieren.</simpara>
    </important>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'DeadAGI' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Executes AGI on a hungup channelyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  [E|Dead]AGI(command|args): Executes an Asterisk Gateway Interface compliantyyy123yyysw
program on a channel. AGI allows Asterisk to launch external programsyyy123yyysw
written in any language to control a telephony channel, play audio,yyy123yyysw
read DTMF digits, etc. by communicating with the AGI protocol on stdinyyy123yyysw
and stdout.yyy123yyysw
  This channel will stop dialplan execution on hangup inside of thisyyy123yyysw
application, except when using DeadAGI.  Otherwise, dialplan executionyyy123yyysw
will continue normally.yyy123yyysw
  A locally executed AGI script will receive SIGHUP on hangup from the channelyyy123yyysw
except when using DeadAGI. This can be disabled by setting the AGISIGHUP channelyyy123yyysw
variable to "no" before executing the AGI application.yyy123yyysw
  Using 'EAGI' provides enhanced AGI, with incoming audio available out of bandyyy123yyysw
on file descriptor 3yyy123yyysw
yyy123yyysw
  Use the CLI command 'agi show' to list available agi commandsyyy123yyysw
  This application sets the following channel variable upon completion:yyy123yyysw
     AGISTATUS      The status of the attempt to the run the AGI scriptyyy123yyysw
                    text string, one of SUCCESS | FAILED | HANGUPyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>13,19c13,15yyy123yyysw
&lt;   This channel will stop dialplan execution on hangup inside of thisyyy123yyysw
&lt; application, except when using DeadAGI.  Otherwise, dialplan executionyyy123yyysw
&lt; will continue normally.yyy123yyysw
&lt;   A locally executed AGI script will receive SIGHUP on hangup from the channelyyy123yyysw
&lt; except when using DeadAGI. This can be disabled by setting the AGISIGHUP channelyyy123yyysw
&lt; variable to "no" before executing the AGI application.yyy123yyysw
&lt;   Using 'EAGI' provides enhanced AGI, with incoming audio available out of bandyyy123yyysw
---yyy123yyysw
&gt; Returns -1 on hangup (except for DeadAGI) or if application requestedyyy123yyysw
&gt;  hangup, or 0 on non-hangup exit. yyy123yyysw
&gt; Using 'EAGI' provides enhanced AGI, with incoming audio available out of bandyyy123yyysw
22,25c18yyy123yyysw
&lt;   Use the CLI command 'agi show' to list available agi commandsyyy123yyysw
&lt;   This application sets the following channel variable upon completion:yyy123yyysw
&lt;      AGISTATUS      The status of the attempt to the run the AGI scriptyyy123yyysw
&lt;                     text string, one of SUCCESS | FAILED | HANGUPyyy123yyysw
---yyy123yyysw
&gt; Use the CLI command 'show agi' to list available agi commandsyyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-agi" />, <xref
      linkend="applikationen-fastagi" /></para>
    </formalpara>
  </section>

  <section id="applikationen-dial">
    <title><code>Dial()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Dial()</code></secondary>
    </indexterm>

    <simpara>Verbindet Kanäle.</simpara>

    <synopsis>Dial(<replaceable>Tech</replaceable>/<replaceable>Resource</replaceable>,<replaceable>Timeout</replaceable>,<replaceable>Optionen</replaceable>,<replaceable>URL</replaceable>)</synopsis>

    <synopsis>Dial(<replaceable>Tech1</replaceable>/<replaceable>Resource1</replaceable>[&amp;<replaceable>Tech2</replaceable>/<replaceable>Resource2</replaceable>[&amp;<replaceable>...</replaceable>]],<replaceable>Timeout</replaceable>,<replaceable>Optionen</replaceable>,<replaceable>URL</replaceable>)</synopsis>

    <synopsis>Dial(<replaceable>Tech</replaceable>/<replaceable>User</replaceable>:<replaceable>Passwort</replaceable>@<replaceable>Host</replaceable>/<replaceable>Extension</replaceable>,<replaceable>Timeout</replaceable>,<replaceable>Optionen</replaceable>)</synopsis>

    <simpara>Ermöglicht es, zwei Kanäle miteinander zu verbinden.<footnote>
        <simpara>Zum Beispiel IAX, SIP, H.323, Skinny, PRI, FXO, FXS, Local
        ...</simpara>
      </footnote> <code>Dial()</code> ist eine der wichtigsten Anwendungen in
    Asterisk, lesen Sie diesen Ausschnitt deshalb bitte aufmerksam und
    eventuell mehrmals durch.</simpara>

    <simpara>Jeder gültige Channeltyp (wie z.B. SIP, IAX2, H.323, MGCP, Local
    oder Zap) wird von <code>Dial()</code> akzeptiert, aber die Parameter, die
    jedem Channel übergeben werden müssen, hängen von denjenigen Informationen
    ab, die der entsprechende Channeltyp benötigt, um seine Arbeit zu
    verrichten. So wird zum Beispiel ein SIP-Channel eine Netzwerkadresse und
    einen Benutzer benötigen, zu dem die Verbindung hergestellt werden soll,
    während ein ZAP-Channel irgendeine Art von Telefonnummer
    verlangt.</simpara>

    <simpara>Wenn ein Netzwerk-basierter Channeltyp spezifiziert wird, können
    Zielhost (Name oder IP-Adresse), Benutzername, Passwort und
    Fernsteuerungs-Extension als Teil der Optionen an <code>Dial()</code>
    übergeben werden, oder man kann auf den Namen eines Channeleintrags in der
    entsprechenden Konfigurationsdatei (<filename>.conf</filename>-Datei)
    verweisen - alle notwendigen Informationen müssen dann in dieser Datei
    vorhanden sein. Benutzername und Passwort können durch den Namen der
    Channelkonfigurationsdatei, umgeben von eckigen Klammern (<code>[]</code>)
    ersetzt werden. Die Angabe des Hostnamens ist optional.</simpara>

    <para>Ein Beispiel für einen gültigen Aufruf: <programlisting>exten =&gt; s,1,Dial(SIP/peter:geheim@meier.tld)yyy123yyysw</programlisting>
    Das Gleiche würde auch der folgende Aufruf bewirken: <programlisting>exten =&gt; s,1,Dial(SIP/ein_SIP_friend)yyy123yyysw</programlisting>wenn
    in <filename>sip.conf</filename> ein entsprechender Channel definiert ist:
    <programlisting>[ein_SIP_friend]yyy123yyysw
fromuser=peteryyy123yyysw
password=geheimyyy123yyysw
host=meier.tldyyy123yyysw</programlisting></para>

    <para>Oft ist eine Extension wie folgt an die Adressinformation angehängt:
    <programlisting>exten =&gt; s,1,Dial(IAX2/benutzer:passwort@beispiel.de/500)yyy123yyysw</programlisting>
    Dadurch wird das entfernte Ende aufgefordert, den Anruf mit Extension 500
    zu verbinden, und zwar in dem Kontext, in der der Channel eingegangen ist.
    Diese Extension wird von <code>Dial()</code> nicht benötigt, weil die in
    der Channelkonfiguration des entfernten Endes vorliegenden Daten verwendet
    werden oder der Remoteserver den Anruf zur <code>s</code>-Extension in dem
    Kontext, in dem der Anruf eingegangen ist, weiterleitet.</para>

    <simpara>Schlussendlich kontrolliert das entfernte Ende, was mit dem Anruf
    geschehen soll - Sie können lediglich eine spezielle Behandlung
    anfragen.</simpara>

    <para>Wenn kein <code>Timeout</code> spezifiziert ist, wird der Channel
    unendlich klingeln. Dieses Verhalten muss nicht immer schlecht sein, es
    besteht keine Veranlassung, ihn immer zu setzen - man muss sich nur
    vergegenwärtigen, dass unendlich evtl. eine sehr lange Zeit bedeuten
    kann.<footnote>
        <simpara>:-)</simpara>
      </footnote> <code>Timeout</code> wird in Sekunden angegeben. Der
    Klingel-Timeout folgt immer der Adressinformation, wie folgt:
    <programlisting>exten =&gt; s,1,Dial(IAX2/user:pass@beispiel.de/500,20)yyy123yyysw</programlisting></para>

    <para>Mit <code>Dial()</code> können auch mehrere Channels parallel
    angerufen werden. Dabei gilt das Prinzip <quote>Wer zuerst kommt, mahlt
    zuerst</quote>. Welcher Angerufene als erstes abhebt, bekommt das
    Gespräch:<programlisting>exten =&gt; s,1,Dial(SIP/2000&amp;SIP/2001&amp;SIP/2303)yyy123yyysw</programlisting></para>

    <para>Ein großer Teil der Mächtigkeit der <code>Dial()</code>-Anwendung
    liegt in den Optionen oder Flags. Diese werden nach der Adress- und
    Timeout-Information angegeben, und zwar so: <programlisting>exten =&gt; s,1,Dial(IAX2/user:pass@beispiel.de/500,60,<replaceable>Flags</replaceable>)yyy123yyysw</programlisting></para>

    <para>Wichtig! Es gilt zu beachten, dass, wenn Sie flags hinzufügen
    möchten, aber kein Timeout spezifiert ist, dennoch der Ort für den Timeout
    nicht fehlen darf. D. h., ein zusätzliches Komma muss an der Stelle
    eingefügt werden, an der normalerweise der Wert für den Timeout stehen
    würde, also so: <programlisting>exten =&gt; s,1,Dial(IAX2/user:pass@beispiel.de/500,,<replaceable>Flags</replaceable>)yyy123yyysw</programlisting></para>

    <para>Die gültigen Flags, die mit der <code>Dial()</code>-Anwendung
    benutzt werden können, sind: <variablelist>
        <?dbfo list-presentation="blocks"?>

        <?dbhtml list-presentation="list"?>

        <varlistentry>
          <term><code>d</code></term>

          <listitem>
            <simpara>Erlaubt es dem Teilnehmer, während des Wartens auf die
            Beantwortung eines Anrufs eine einziffrige Extension zu wählen.
            Der Anruf wird dann zu dieser Extension umgeleitet (d.h. der Anruf
            wird zugunsten dieser Extension beendet) (entweder im aktuellen
            Kontext oder, falls er spezifiziert wurde, im Kontext
            <code>${EXITCONTEXT}</code>).</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>t</code></term>

          <listitem>
            <simpara>Erlaubt es dem angerufenen Teilnehmer, einen verbundenen
            Anruf durch Drücken der <code>#</code>-Taste zu übertragen. Es
            gilt zu beachten, dass Neueinladungen nicht möglich sind, wenn
            diese Option benutzt wird, weil Asterisk den Anruf überwachen
            muss, um zu erkennen, wenn die angerufene Seite die
            <code>#</code>-Taste drückt.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>T</code></term>

          <listitem>
            <simpara>Erlaubt es dem Anrufer, einen verbundenen Anruf durch
            Drücken der <code>#</code>-Taste zu übertragen. Auch hier beachten
            Sie bitte, dass Neueinladungen bei Benutzung dieser Option nicht
            möglich sind, weil Asterisk den Anruf überwachen muss, um zu
            erkennen, wenn die angerufene Seite die <code>#</code>-Taste
            drückt.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>w</code></term>

          <listitem>
            <simpara>Ermöglicht es dem angerufenen Teilnehmer den Anruf durch
            Eintippen der <code>automon</code>-Sequenz (wie in
            <filename>features.conf</filename> konfiguriert) aufzunehmen
            (Audio to disk). Falls die Variable <code>TOUCH_MONITOR</code>
            gesetzt ist, wird ihr Wert als Parameter der
            <code>Monitor()</code>-Anwendung weitergeleitet, wenn die Aufnahme
            startet. Ist sie nicht gesetzt, wird <code>Monitor()</code> die
            Vorgabe <code>WAV,,m</code> übergeben.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>W</code></term>

          <listitem>
            <simpara>Ermöglicht es dem Anrufer den Anruf durch Eintippen der
            <code>automon</code>-Sequenz (wie in
            <filename>features.conf</filename> konfiguriert) aufzunehmen
            (Audio to disk).</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>f</code></term>

          <listitem>
            <simpara>Durch dieses Flag muss die Caller-ID als die Extension
            der Leitung gesetzt werden, die den ausgehenden Anruf erstellt
            oder umleitet. Das wird so gemacht, weil einige
            PSTN-Diensteanbieter es nicht erlauben, die Caller-ID auf
            irgendeinen anderen als den Ihnen zugewiesenen Wert zu setzen. Zum
            Beispiel würden Sie, wenn Sie einen PRI hatten, das Flag
            <code>f</code> verwenden, um irgendeine lokal im SIP-Telefon
            gespeicherte Caller-ID zu überscheiben.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>o</code></term>

          <listitem>
            <simpara>Benutzt die auf der eingehenden Strecke des Anrufs
            empfangene Caller ID als die Caller ID auf der ausgehenden
            Richtung des Anrufs. Das ist nützlich, falls ein Anruf akzeptiert
            und dann zu einem anderen Ziel weitergeleitet wird, wobei die
            Caller ID der eingehenden Richtung des Anrufs weitergeben wird,
            statt diese zunächst mit den lokalen Caller ID-Einstellungen zu
            überschreiben.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>r</code></term>

          <listitem>
            <simpara>Signalisiert dem Anrufer Klingeln, ohne dass Audio
            weitergeleitet wird, bevor der Anruf beantwortet wird. Dieses Flag
            wird für gewöhnlich nicht benötigt, um Klingeln zu signalisiern,
            da Asterisk Klingeln signalisiert, wenn ein Channel angerufen
            wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>m[<replaceable>Klasse</replaceable>]</code></term>

          <listitem>
            <simpara>Beliefert den Anruf mit Musik, bis der Anruf beantwortet
            wird. Optional können Sie auch die Music-on-Hold-Klasse (z.B.
            Musikrichtung) angeben.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>M(<replaceable>x</replaceable>[^<replaceable>arg</replaceable>])</code></term>

          <listitem>
            <para>Führt auf die Verbindung eines Anrufs hin das Makro
            <code>x</code> aus, und leitet dabei optional Parameter, getrennt
            durch <code>^</code>, weiter. Das Makro kann auch die
            <code>MACRO_RESULT</code>-Channelvariable auf einen der folgenden
            Werte setzen:<variablelist termlength="12">
                <varlistentry>
                  <term><code>ABORT</code></term>

                  <listitem>
                    <simpara>Legt bei beiden Enden des Anrufs auf.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>CONGESTION</code></term>

                  <listitem>
                    <simpara>Wirkt, als wäre Stau auf der Leitung.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>BUSY</code></term>

                  <listitem>
                    <simpara>Wirkt, als wäre die Leitung besetzt (geht zur
                    Priorität n+101).</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>CONTINUE</code></term>

                  <listitem>
                    <simpara>Legt die Seite des Angerufenen auf und fährt im
                    Wählplan fort.</simpara>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>GOTO:&lt;<replaceable>Context</replaceable>&gt;^&lt;<replaceable>Extension</replaceable>&gt;^&lt;<replaceable>Priorität</replaceable>&gt;</code></term>

          <listitem>
            <simpara>Springt zu der angegebenen Position im
            Wählplan.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>h</code></term>

          <listitem>
            <simpara>Erlaubt es dem angerufenen Teilnehmer, die Leitung durch
            Drücken von <code>*</code> aufzulegen.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>H</code></term>

          <listitem>
            <simpara>Erlaubt es dem anrufenden Teilnehmer, die Leitung durch
            Drücken von <code>*</code> aufzulegen.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>C</code></term>

          <listitem>
            <simpara>Setzt das Call Detail Record (Anrufprotokoll) zurück. Da
            die CDR-Zeit zum Zeitpunkt der Beantwortung des Anrufs gesetzt
            wird, ist es sinnvoll, CDR ebenfalls zurückzusetzen, damit dem
            Teilnehmer nicht die Zeit vor dem Aufruf der Call()-Anwendung in
            Rechnung gestellt wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>P[(<replaceable>x</replaceable>)]</code></term>

          <listitem>
            <simpara>Aktiviert den Geheimhaltungs-Modus, wobei optional
            <code>x</code> als Familie/Schlüssel-Wert in der AstDB
            spezifiziert werden kann. Dieser Modus ist beispielsweise
            nützlich, wenn Anrufe aus einer Blacklist (Anrufe von Nummern aus
            der Blacklist werden explizit abgelehnt) oder Whitelist (Anrufe
            von den gelisteten Nummern werden explizit akzeptiert) angenommen
            werden. Siehe auch <code>LookupBlacklist()</code>.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>g</code></term>

          <listitem>
            <simpara>Geht weiter im Kontext, wenn der Zielkanal aufgelegt
            wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>G(<replaceable>context</replaceable>^<replaceable>extension</replaceable>^<replaceable>priority</replaceable>)</code></term>

          <listitem>
            <simpara>Übermittelt beide Seiten zum spezifizierten Ziel, wenn
            der Anruf beantwortet wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>A(<replaceable>x</replaceable>)</code></term>

          <listitem>
            <simpara>Spielt dem angerufenen Teilnehmer eine Ankündigung vor.
            <code>x</code> ist der Dateiname der Audiodatei, die als
            Ankündigung abzuspielen ist.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>D([<replaceable>called</replaceable>][:<replaceable>calling</replaceable>])</code></term>

          <listitem>
            <simpara>Sendet DTMF-Ziffern, nachdem der Anruf beantwortet wurde,
            aber bevor der Anruf überbrückt wird. Der Parameter
            <code>called</code> wird an die angerufene Seite weitergegeben,
            und der Parameter <code>calling</code> an die anrufende Seite.
            Beide Parameter können individuell eingesetzt werden.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>L(<replaceable>x</replaceable>[:<replaceable>y</replaceable>][:<replaceable>z</replaceable>])</code></term>

          <listitem>
            <para>Begrenzt die Dauer des Anrufs auf <code>x</code>
            Millisekunden, wobei <code>y</code> Millisekunden vor Ablauf der
            festgesetzten Dauer und danach wiederholt alle <code>z</code>
            Millisekunden bis zum Anlauf der Frist eine Warnung signalisiert
            wird. Der <code>x</code>-Parameter muss angegeben werden,
            <code>y</code> und <code>z</code> sind optional. Die folgenden
            speziellen Variablen können ebenfalls gesetzt werden und stellen
            zusätzliche Kontrollmöglichkeiten zur Verfügung:<variablelist
                termlength="31">
                <?dbfo list-presentation="blocks"?>

                <?dbhtml list-presentation="list"?>

                <varlistentry>
                  <term><code>LIMIT_PLAYAUDIO_CALLER=<replaceable>yes|no</replaceable></code></term>

                  <listitem>
                    <simpara>Gibt an, ob dem Anrufer Audiodateien vorgespielt
                    werden sollen.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>LIMIT_PLAYAUDIO_CALLEE=<replaceable>yes|no</replaceable></code></term>

                  <listitem>
                    <simpara>Gibt an, ob dem Angerufenen Audiodateien
                    vorgespielt werden sollen.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>LIMIT_TIMEOUT_FILE=<replaceable>filename</replaceable></code></term>

                  <listitem>
                    <simpara>Gibt an, welche Datei abgespielt werden soll,
                    nachdem die Zeit abgelaufen ist.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>LIMIT_CONNECT_FILE=<replaceable>filename</replaceable></code></term>

                  <listitem>
                    <simpara>Gibt an, welche Datei zu Beginn des Anrufs
                    abgespielt werden soll.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>LIMIT_WARNING_FILE=<replaceable>filename</replaceable></code></term>

                  <listitem>
                    <simpara>Gibt an, welche Datei gespielt werden soll, wenn
                    der Parameter <code>y</code> angegeben ist.</simpara>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>n</code></term>

          <listitem>
            <simpara>Verhindert, dass zu Priorität n+101 übergegangen wird
            (<code>n</code>: aktuelle Priorität), falls alle Kanäle als
            besetzt erachtet werden.</simpara>

            <simpara>Ein Anruf kann auch geparkt werden, statt übermittelt zu
            werden (was mit <code>t</code> oder <code>T</code>-Flag der Fall
            ist). Anrufe werden gewöhnlich geparkt, indem man sie der
            Extension 700 übermittelt, aber dieses Verhalten ist in
            <filename>features.conf</filename> konfigurierbar.</simpara>

            <para>Mit dem Enden der <code>Dial()</code>-Anwendung werden die
            folgenden Variablen gesetzt:<variablelist termlength="13">
                <varlistentry>
                  <term><code>DIALEDTIME</code></term>

                  <listitem>
                    <simpara>Die gesamte Zeit, die von der Ausführung der
                    <code>Dial()</code>-Anwendung an bis zu ihrer Beendigung
                    verstrichen ist.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>ANSWEREDTIME</code></term>

                  <listitem>
                    <simpara>Die gesamte Zeit, die während des Anrufs
                    vergangen ist.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>DIALSTATUS</code></term>

                  <listitem>
                    <para>Der Status des Anrufs, ausgedrückt durch einen der
                    folgenden Werte:<variablelist termlength="13">
                        <varlistentry>
                          <term><code>CHANUNAVAIL</code></term>

                          <listitem>
                            <simpara>Der Channel ist nicht verfügbar.</simpara>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term><code>CONGESTION</code></term>

                          <listitem>
                            <simpara>Der Channel hat ein Stau-Signal
                            zurückgeliefert, was gewöhnlich die Unfähigkeit der
                            Fertigstellung der Verbindung
                            kennzeichnet.</simpara>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term><code>NOANSWER</code></term>

                          <listitem>
                            <simpara>Der Channel hat in der durch die
                            Klingel-Timeout-Option gesetzten Frist nicht
                            geantwortet.</simpara>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term><code>BUSY</code></term>

                          <listitem>
                            <simpara>Der angerufene Channel ist momentan
                            belegt.</simpara>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term><code>ANSWER</code></term>

                          <listitem>
                            <simpara>Der Channel hat den Anruf
                            beantwortet.</simpara>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term><code>CANCEL</code></term>

                          <listitem>
                            <simpara>Der Anruf wurde abgebrochen.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist></para>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>; eine Nummer auf Zap-Channel 2 wählen, max. 10 Sekunden klingeln:yyy123yyysw
exten =&gt; 123,1,Dial(Zap/2/1234567,10,tTm)yyy123yyysw
; sonst weiter im Dialplan:yyy123yyysw
exten =&gt; 123,n,Playback(tut-uns-leid)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw
yyy123yyysw
; über IAX die Extension 500 auf dem Host beispiel.de wählen:yyy123yyysw
exten =&gt; 123,1,Dial(IAX/username:password@beispiel.de/500)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Dial' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Place a call and connect to the current channelyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Dial(Technology/resource[&amp;Tech2/resource2...][|timeout][|options][|URL]):yyy123yyysw
This application will place calls to one or more specified channels. As soonyyy123yyysw
as one of the requested channels answers, the originating channel will beyyy123yyysw
answered, if it has not already been answered. These two channels will thenyyy123yyysw
be active in a bridged call. All other channels that were requested will thenyyy123yyysw
be hung up.yyy123yyysw
  Unless there is a timeout specified, the Dial application will waityyy123yyysw
indefinitely until one of the called channels answers, the user hangs up, oryyy123yyysw
if all of the called channels are busy or unavailable. Dialplan executing willyyy123yyysw
continue if no requested channels can be called, or if the timeout expires.yyy123yyysw
yyy123yyysw
  This application sets the following channel variables upon completion:yyy123yyysw
    DIALEDTIME   - This is the time from dialing a channel until when ityyy123yyysw
                   is disconnected.yyy123yyysw
    ANSWEREDTIME - This is the amount of time for actual call.yyy123yyysw
    DIALSTATUS   - This is the status of the call:yyy123yyysw
                   CHANUNAVAIL | CONGESTION | NOANSWER | BUSY | ANSWER | CANCELyyy123yyysw
                   DONTCALL | TORTUREyyy123yyysw
  For the Privacy and Screening Modes, the DIALSTATUS variable will be set toyyy123yyysw
DONTCALL if the called party chooses to send the calling party to the 'Go Away'yyy123yyysw
script. The DIALSTATUS variable will be set to TORTURE if the called partyyyy123yyysw
wants to send the caller to the 'torture' script.yyy123yyysw
  This application will report normal termination if the originating channelyyy123yyysw
hangs up, or if the call is bridged and either of the parties in the bridgeyyy123yyysw
ends the call.yyy123yyysw
  The optional URL will be sent to the called party if the channel supports it.yyy123yyysw
  If the OUTBOUND_GROUP variable is set, all peer channels created by thisyyy123yyysw
application will be put into that group (as in Set(GROUP()=...).yyy123yyysw
yyy123yyysw
  Options:yyy123yyysw
    A(x) - Play an announcement to the called party, using 'x' as the file.yyy123yyysw
    C    - Reset the CDR for this call.yyy123yyysw
    d    - Allow the calling user to dial a 1 digit extension while waiting foryyy123yyysw
           a call to be answered. Exit to that extension if it exists in theyyy123yyysw
           current context, or the context defined in the EXITCONTEXT variable,yyy123yyysw
           if it exists.yyy123yyysw
    D([called][:calling]) - Send the specified DTMF strings *after* the calledyyy123yyysw
           party has answered, but before the call gets bridged. The 'called'yyy123yyysw
           DTMF string is sent to the called party, and the 'calling' DTMFyyy123yyysw
           string is sent to the calling party. Both parameters can be usedyyy123yyysw
           alone.yyy123yyysw
    f    - Force the callerid of the *calling* channel to be set as theyyy123yyysw
           extension associated with the channel using a dialplan 'hint'.yyy123yyysw
           For example, some PSTNs do not allow CallerID to be set to anythingyyy123yyysw
           other than the number assigned to the caller.yyy123yyysw
    g    - Proceed with dialplan execution at the current extension if theyyy123yyysw
           destination channel hangs up.yyy123yyysw
    G(context^exten^pri) - If the call is answered, transfer the calling party toyyy123yyysw
           the specified priority and the called party to the specified priority+1.yyy123yyysw
           Optionally, an extension, or extension and context may be specified. yyy123yyysw
           Otherwise, the current extension is used. You cannot use any additionalyyy123yyysw
           action post answer options in conjunction with this option.yyy123yyysw
    h    - Allow the called party to hang up by sending the '*' DTMF digit.yyy123yyysw
    H    - Allow the calling party to hang up by hitting the '*' DTMF digit.yyy123yyysw
    i    - Asterisk will ignore any forwarding requests it may receive on thisyyy123yyysw
           dial attempt.yyy123yyysw
    j    - Jump to priority n+101 if all of the requested channels were busy.yyy123yyysw
    L(x[:y][:z]) - Limit the call to 'x' ms. Play a warning when 'y' ms areyyy123yyysw
           left. Repeat the warning every 'z' ms. The following specialyyy123yyysw
           variables can be used with this option:yyy123yyysw
           * LIMIT_PLAYAUDIO_CALLER   yes|no (default yes)yyy123yyysw
                                      Play sounds to the caller.yyy123yyysw
           * LIMIT_PLAYAUDIO_CALLEE   yes|noyyy123yyysw
                                      Play sounds to the callee.yyy123yyysw
           * LIMIT_TIMEOUT_FILE       File to play when time is up.yyy123yyysw
           * LIMIT_CONNECT_FILE       File to play when call begins.yyy123yyysw
           * LIMIT_WARNING_FILE       File to play as warning if 'y' is defined.yyy123yyysw
                                      The default is to say the time remaining.yyy123yyysw
    m([class]) - Provide hold music to the calling party until a requestedyyy123yyysw
           channel answers. A specific MusicOnHold class can beyyy123yyysw
           specified.yyy123yyysw
    M(x[^arg]) - Execute the Macro for the *called* channel before connectingyyy123yyysw
           to the calling channel. Arguments can be specified to the Macroyyy123yyysw
           using '^' as a delimeter. The Macro can set the variableyyy123yyysw
           MACRO_RESULT to specify the following actions after the Macro isyyy123yyysw
           finished executing.yyy123yyysw
           * ABORT        Hangup both legs of the call.yyy123yyysw
           * CONGESTION   Behave as if line congestion was encountered.yyy123yyysw
           * BUSY         Behave as if a busy signal was encountered. This will alsoyyy123yyysw
                          have the application jump to priority n+101 if theyyy123yyysw
                          'j' option is set.yyy123yyysw
           * CONTINUE     Hangup the called party and allow the calling partyyyy123yyysw
                          to continue dialplan execution at the next priority.yyy123yyysw
           * GOTO:&lt;context&gt;^&lt;xexten&gt;^&lt;priority&gt; - Transfer the call to theyyy123yyysw
                          specified priority. Optionally, an extension, oryyy123yyysw
                          extension and priority can be specified.yyy123yyysw
           You cannot use any additional action post answer options in conjunctionyyy123yyysw
           with this option. Also, pbx services are not run on the peer (called) channel,yyy123yyysw
           so you will not be able to set timeouts via the TIMEOUT() function in this macro.yyy123yyysw
    n    - This option is a modifier for the screen/privacy mode. It specifiesyyy123yyysw
           that no introductions are to be saved in the priv-callerintrosyyy123yyysw
           directory.yyy123yyysw
    N    - This option is a modifier for the screen/privacy mode. It specifiesyyy123yyysw
           that if callerID is present, do not screen the call.yyy123yyysw
    o    - Specify that the CallerID that was present on the *calling* channelyyy123yyysw
           be set as the CallerID on the *called* channel. This was theyyy123yyysw
           behavior of Asterisk 1.0 and earlier.yyy123yyysw
    O([x]) - "Operator Services" mode (Zaptel channel to Zaptel channelyyy123yyysw
             only, if specified on non-Zaptel interface, it will be ignored).yyy123yyysw
             When the destination answers (presumably an operator servicesyyy123yyysw
             station), the originator no longer has control of their line.yyy123yyysw
             They may hang up, but the switch will not release their lineyyy123yyysw
             until the destination party hangs up (the operator). Specifiedyyy123yyysw
             without an arg, or with 1 as an arg, the originator hanging upyyy123yyysw
             will cause the phone to ring back immediately. With a 2 specified,yyy123yyysw
             when the "operator" flashes the trunk, it will ring their phoneyyy123yyysw
             back.yyy123yyysw
    p    - This option enables screening mode. This is basically Privacy modeyyy123yyysw
           without memory.yyy123yyysw
    P([x]) - Enable privacy mode. Use 'x' as the family/key in the database ifyyy123yyysw
           it is provided. The current extension is used if a databaseyyy123yyysw
           family/key is not specified.yyy123yyysw
    r    - Indicate ringing to the calling party. Pass no audio to the callingyyy123yyysw
           party until the called channel has answered.yyy123yyysw
    S(x) - Hang up the call after 'x' seconds *after* the called party hasyyy123yyysw
           answered the call.yyy123yyysw
    t    - Allow the called party to transfer the calling party by sending theyyy123yyysw
           DTMF sequence defined in features.conf.yyy123yyysw
    T    - Allow the calling party to transfer the called party by sending theyyy123yyysw
           DTMF sequence defined in features.conf.yyy123yyysw
    w    - Allow the called party to enable recording of the call by sendingyyy123yyysw
           the DTMF sequence defined for one-touch recording in features.conf.yyy123yyysw
    W    - Allow the calling party to enable recording of the call by sendingyyy123yyysw
           the DTMF sequence defined for one-touch recording in features.conf.yyy123yyysw
    k    - Allow the called party to enable parking of the call by sendingyyy123yyysw
           the DTMF sequence defined for call parking in features.conf.yyy123yyysw
    K    - Allow the calling party to enable parking of the call by sendingyyy123yyysw
           the DTMF sequence defined for call parking in features.conf.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>62,63d61yyy123yyysw
&lt;     i    - Asterisk will ignore any forwarding requests it may receive on thisyyy123yyysw
&lt;            dial attempt.yyy123yyysw
95,96c93yyy123yyysw
&lt;            with this option. Also, pbx services are not run on the peer (called) channel,yyy123yyysw
&lt;            so you will not be able to set timeouts via the TIMEOUT() function in this macro.yyy123yyysw
---yyy123yyysw
&gt;            with this option.yyy123yyysw
105,114d101yyy123yyysw
&lt;     O([x]) - "Operator Services" mode (Zaptel channel to Zaptel channelyyy123yyysw
&lt;              only, if specified on non-Zaptel interface, it will be ignored).yyy123yyysw
&lt;              When the destination answers (presumably an operator servicesyyy123yyysw
&lt;              station), the originator no longer has control of their line.yyy123yyysw
&lt;              They may hang up, but the switch will not release their lineyyy123yyysw
&lt;              until the destination party hangs up (the operator). Specifiedyyy123yyysw
&lt;              without an arg, or with 1 as an arg, the originator hanging upyyy123yyysw
&lt;              will cause the phone to ring back immediately. With a 2 specified,yyy123yyysw
&lt;              when the "operator" flashes the trunk, it will ring their phoneyyy123yyysw
&lt;              back.yyy123yyysw
132,135d118yyy123yyysw
&lt;     k    - Allow the called party to enable parking of the call by sendingyyy123yyysw
&lt;            the DTMF sequence defined for call parking in features.conf.yyy123yyysw
&lt;     K    - Allow the calling party to enable parking of the call by sendingyyy123yyysw
&lt;            the DTMF sequence defined for call parking in features.conf.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-retrydial" /></para>
    </formalpara>
  </section>

  <section id="applikationen-dictate">
    <title><code>Dictate()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Dictate()</code></secondary>
    </indexterm>

    <simpara>Virtuelles Diktiergerät</simpara>

    <synopsis>Dictate([<replaceable>Verzeichnis</replaceable>[,<replaceable>Dateiname</replaceable>]])</synopsis>

    <simpara>Startet ein virtuelles Diktiergerät. Mit den Parametern lassen
    sich das Verzeichnis für die Aufzeichnungen (Default:
    <filename>/var/spool/asterisk/dictate/</filename>) und der Dateiname
    (numerisch!) bestimmen. Aufgezeichnet wird im Format
    <code>raw</code>.</simpara>

    <para>Der User kann das Diktiergerät mit folgenden Tasten
    steuern:<variablelist termlength="3">
        <varlistentry>
          <term><code>0</code></term>

          <listitem>
            <simpara>Hilfe</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>1</code></term>

          <listitem>
            <simpara>Schaltet zwischen Aufnahme- und Abspielmodus hin und
            her.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>*</code></term>

          <listitem>
            <simpara>Pause / weiter</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>#</code></term>

          <listitem>
            <simpara>Datei wählen / neuen Dateinamen eingeben (z.B.
            <code>1234#</code>)</simpara>
          </listitem>
        </varlistentry>
      </variablelist>Im Abspielmodus:<variablelist
        termlength="3">
        <varlistentry>
          <term><code>2</code></term>

          <listitem>
            <simpara>Schaltet die Abspielgeschwindigkeit um (1x, 2x, 3x,
            4x)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>7</code></term>

          <listitem>
            <simpara>Ein Stück zurück springen</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>8</code></term>

          <listitem>
            <simpara>Ein Stück weiter springen</simpara>
          </listitem>
        </varlistentry>
      </variablelist>Im Aufnahmemodus:<variablelist
        termlength="3">
        <varlistentry>
          <term><code>8</code></term>

          <listitem>
            <simpara>Aufnahme löschen und neu anfangen</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>; Diktiergerät starten:yyy123yyysw
exten =&gt; 123,1,Dictate()yyy123yyysw</programlisting>

    <simpara>Um jedem User sein eigenes Diktiergerät zu geben, könnte man z.B.
    als Pfad <filename>/var/spool/asterisk/dictate/${EXTEN}</filename>
    angeben.</simpara>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Dictate' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Virtual Dictation Machineyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Dictate([&lt;base_dir&gt;[|&lt;filename&gt;]])yyy123yyysw
Start dictation machine using optional base dir for files.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>8c8yyy123yyysw
&lt;   Dictate([&lt;base_dir&gt;[|&lt;filename&gt;]])yyy123yyysw
---yyy123yyysw
&gt;   Dictate([&lt;base_dir&gt;])yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-record" /></para>
    </formalpara>
  </section>

  <section id="applikationen-directory">
    <title><code>Directory()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Directory()</code></secondary>
    </indexterm>

    <simpara>Stellt ein Verzeichnis anwählbarer (Voicemail-)Extensions bereit
    (internes Telefonbuch, Dial-by-name, siehe <xref
    linkend="voicemail-telefonbuch" />).</simpara>

    <synopsis>Directory(<replaceable>VM-Kontext</replaceable>[,<replaceable>Wähl-Kontext</replaceable>[,<replaceable>Optionen</replaceable>]])</synopsis>

    <simpara>Liefert Benutzern ein Verzeichnis mit Extensionen, aus dem anhand
    des Namens ausgewählt werden kann. Die Liste von Namen und Extensionen
    findet sich in <filename>voicemail.conf</filename>. Der
    <code>VM-Kontext</code> muss angegeben werden, er bestimmt den zu
    benutzenden Kontext aus <filename>voicemail.conf</filename>.</simpara>

    <simpara>Der <code>Wähl-Kontext</code> bestimmt den zum Anrufen der
    Benutzer zu verwendenden Kontext. Falls er nicht angegeben ist, wird
    <code>VM-Kontext</code> angenommen. Momentan ist die einzige mögliche
    Option, die im <code>Optionen</code>-Parameter Verwendung finden kann,
    <code>f</code> (wie first name), die das Verzeichnis veranlasst, die
    Eingabe anhand des Vornamens statt des Nachnamens abzugleichen.</simpara>

    <simpara>Gibt der Benutzer <code>0</code> (Null) ein, und es existiert
    eine Extension o (kleiner Buchstabe o) im aktuellen Kontext, geht die
    Steuerung des Anrufs an diese Extension über. Durch Drücken der Taste *
    wird analog dazu zur <code>a</code>-Extension übergegangen. Diese
    Verhalten ähnelt dem von <code>Voicemail()</code>.</simpara>

    <simpara>Gibt 0 zurück, es sei denn, der Teilnehmer legt auf.</simpara>

    <programlisting>exten =&gt; *,1,Directory(default,incoming)yyy123yyysw
exten =&gt; #,1,Directory(default,incoming,f)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Directory' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Provide directory of voicemail extensionsyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Directory(vm-context[|dial-context[|options]]): This application will presentyyy123yyysw
the calling channel with a directory of extensions from which they can searchyyy123yyysw
by name. The list of names and corresponding extensions is retrieved from theyyy123yyysw
voicemail configuration file, voicemail.conf.yyy123yyysw
  This application will immediately exit if one of the following DTMF digits areyyy123yyysw
received and the extension to jump to exists:yyy123yyysw
    0 - Jump to the 'o' extension, if it exists.yyy123yyysw
    * - Jump to the 'a' extension, if it exists.yyy123yyysw
yyy123yyysw
  Parameters:yyy123yyysw
    vm-context   - This is the context within voicemail.conf to use for theyyy123yyysw
                   Directory.yyy123yyysw
    dial-context - This is the dialplan context to use when looking for anyyy123yyysw
                   extension that the user has selected, or when jumping to theyyy123yyysw
                   'o' or 'a' extension.yyy123yyysw
yyy123yyysw
  Options:yyy123yyysw
    e - In addition to the name, also read the extension number to theyyy123yyysw
        caller before presenting dialing options.yyy123yyysw
    f - Allow the caller to enter the first name of a user in the directoryyyy123yyysw
        instead of using the last name.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>25,26d24yyy123yyysw
&lt;     e - In addition to the name, also read the extension number to theyyy123yyysw
&lt;         caller before presenting dialing options.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><filename>voicemail.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-disa">
    <title><code>DISA()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>DISA()</code></secondary>
    </indexterm>

    <simpara>Direct Inward System Access erlaubt auswärtigen Anrufern Anrufe
    mit internem System-Wählton.</simpara>

    <synopsis>DISA(<replaceable>Passwort</replaceable>[,<replaceable>Kontext</replaceable>[,<replaceable>CallerID</replaceable>[,<replaceable>Mailbox</replaceable>[@<replaceable>VM-Kontext</replaceable>]]]])</synopsis>

    <synopsis>DISA(<replaceable>Passwort-Datei</replaceable>[,<replaceable>CallerID</replaceable>[,<replaceable>Mailbox</replaceable>[@<replaceable>VM-Kontext</replaceable>]]])</synopsis>

    <simpara>Erlaubt Anrufern von außen einen internen System-Wählton zu
    erhalten und entsprechend Anrufe zu tätigen, als würden diese von
    innerhalb des Switches aus getätigt. Dem Teilnehmer wird ein Wählton zur
    Verfügung gestellt, nach dem er einen Zugangskode eingeben muss gefolgt
    von der Rautetaste (<code>#</code>). Ist der Zugangskode korrekt, erhält
    er einen System-Wählton, auf dem er einen Anruf tätigen kann.</simpara>

    <caution>
      <para>Diese Art von Zugang kann ein ernstes Sicherheitsrisiko sein und
      sollte sorgfältig überlegt werden, damit die Sicherheit Ihres Systems
      nicht gefährdet ist!</para>
    </caution>

    <simpara>Der <code>Passwort</code>-Parameter ist ein numerischer
    Zugangskode, den der Benutzer eingeben muss, um Anrufe tätigen zu können.
    Mit dieser Syntax werden alle Benutzer dieser Extension das gleiche
    Passwort benutzen. Möchten Sie Benutzern erlauben, <code>DISA()</code>
    ohne Passwort zu verwenden, übergeben Sie die Zeichenkette
    <code>no-password</code> an der Stelle des Passwortes.</simpara>

    <simpara>Der <code>Kontext</code>-Parameter spezifiziert den Kontext, in
    dem sich ein Benutzer einwählen wird. Wird kein Kontext spezifiziert,
    nimmt die <code>DISA()</code>-Anwendung den Kontext <code>disa</code>
    an.</simpara>

    <simpara>Die <code>CallerID</code> ist die Mailbox-Nummer (und optional
    Voicemail-Kontext <code>VM-Kontext</code>) einer Voicemailbox. Der Anrufer
    wird einen so genannten <quote>stuttered dial-tone</quote> (das ist ein
    regelmäßig kurz unterbrochener, <quote>stotternder</quote> Wählton) hören,
    falls neue Nachrichten in der angegebenen Voicemailbox
    vorliegen.</simpara>

    <simpara>Außerdem können Sie eine alternative Syntax benutzen und den
    Namen einer global verfügbaren Passwortdatei statt der Parameter
    <code>Passwort</code> und <code>Kontext</code> übergeben. In jeder Zeile
    kann diese Datei entweder einen Zugangskode oder eine Kombination aus
    Zugangskode und Kontext, getrennt durch das Zeichen <code>|</code>,
    enthalten. Ist kein Kontext mit angegeben, wird standardmäßig der Kontext
    <code>disa</code> verwendet.</simpara>

    <simpara>Ist das Einloggen des Teilnehmers erfolgreich, wird die Anwendung
    die gewählte Nummer in dem spezifizierten Kontext
    interpretieren.</simpara>

    <programlisting>; Anrufern von außen erlauben, 0800er-Nummern zu wählen, sofern sieyyy123yyysw
; das Passwort (1234) wissen. Dabei ihre Caller-ID so setzen, dassyyy123yyysw
; es aussieht, als riefen sie von innerhalb der Firma an:yyy123yyysw
[incoming]yyy123yyysw
exten =&gt; 123,1,DISA(1234,disa,Apfelmus GmbH &lt;(0261) 1234567&gt;)yyy123yyysw
[disa]yyy123yyysw
exten =&gt; _0800XXXXXXXX,1,Dial(Zap/4/${EXTEN})yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'DISA' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
DISA (Direct Inward System Access)yyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
DISA(&lt;numeric passcode&gt;[|&lt;context&gt;]) or DISA(&lt;filename&gt;)yyy123yyysw
The DISA, Direct Inward System Access, application allows someone from yyy123yyysw
outside the telephone switch (PBX) to obtain an "internal" system yyy123yyysw
dialtone and to place calls from it as if they were placing a call from yyy123yyysw
within the switch.yyy123yyysw
DISA plays a dialtone. The user enters their numeric passcode, followed byyyy123yyysw
the pound sign (#). If the passcode is correct, the user is then givenyyy123yyysw
system dialtone on which a call may be placed. Obviously, this typeyyy123yyysw
of access has SERIOUS security implications, and GREAT care must beyyy123yyysw
taken NOT to compromise your security.yyy123yyysw
yyy123yyysw
There is a possibility of accessing DISA without password. Simplyyyy123yyysw
exchange your password with "no-password".yyy123yyysw
yyy123yyysw
    Example: exten =&gt; s,1,DISA(no-password|local)yyy123yyysw
yyy123yyysw
Be aware that using this compromises the security of your PBX.yyy123yyysw
yyy123yyysw
The arguments to this application (in extensions.conf) allow eitheryyy123yyysw
specification of a single global passcode (that everyone uses), oryyy123yyysw
individual passcodes contained in a file. It also allows specificationyyy123yyysw
of the context on which the user will be dialing. If no context isyyy123yyysw
specified, the DISA application defaults the context to "disa".yyy123yyysw
Presumably a normal system will have a special context set upyyy123yyysw
for DISA use with some or a lot of restrictions. yyy123yyysw
yyy123yyysw
The file that contains the passcodes (if used) allows specificationyyy123yyysw
of either just a passcode (defaulting to the "disa" context, oryyy123yyysw
passcode|context on each line of the file. The file may contain blankyyy123yyysw
lines, or comments starting with "#" or ";". In addition, theyyy123yyysw
above arguments may have |new-callerid-string appended to them, toyyy123yyysw
specify a new (different) callerid to be used for this call, foryyy123yyysw
example: numeric-passcode|context|"My Phone" &lt;(234) 123-4567&gt; or yyy123yyysw
full-pathname-of-passcode-file|"My Phone" &lt;(234) 123-4567&gt;.  Lastyyy123yyysw
but not least, |mailbox[@context] may be appended, which will causeyyy123yyysw
a stutter-dialtone (indication "dialrecall") to be used, if theyyy123yyysw
specified mailbox contains any new messages, for example:yyy123yyysw
numeric-passcode|context||1234 (w/a changing callerid).  Note thatyyy123yyysw
in the case of specifying the numeric-passcode, the context must beyyy123yyysw
specified if the callerid is specified also.yyy123yyysw
yyy123yyysw
If login is successful, the application looks up the dialed number inyyy123yyysw
the specified (or default) context, and executes it if found.yyy123yyysw
If the user enters an invalid extension and extension "i" (invalid) yyy123yyysw
exists in the context, it will be used. Also, if you set the 5th argumentyyy123yyysw
to 'NOANSWER', the DISA application will not answer initially.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>8c8yyy123yyysw
&lt; DISA(&lt;numeric passcode&gt;[|&lt;context&gt;]) or DISA(&lt;filename&gt;)yyy123yyysw
---yyy123yyysw
&gt; DISA(&lt;numeric passcode&gt;[|&lt;context&gt;]) or disa(&lt;filename&gt;)yyy123yyysw
28c28yyy123yyysw
&lt; individual passcodes contained in a file. It also allows specificationyyy123yyysw
---yyy123yyysw
&gt; individual passcodes contained in a file. It also allow specificationyyy123yyysw
52,53c52yyy123yyysw
&lt; exists in the context, it will be used. Also, if you set the 5th argumentyyy123yyysw
&lt; to 'NOANSWER', the DISA application will not answer initially.yyy123yyysw
---yyy123yyysw
&gt; exists in the context, it will be used.yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-dumpchan">
    <title><code>DumpChan()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>DumpChan()</code></secondary>
    </indexterm>

    <simpara>Gibt Informationen über den anrufenden Channel auf der Konsole
    aus.</simpara>

    <synopsis>DumpChan([<replaceable>min_verbose_level</replaceable>])</synopsis>

    <simpara>Zeigt Informationen über den anrufenden Channel an und auch eine
    Auflistung aller Channelvariablen. Falls <code>min_verbose_level</code>
    angegeben ist, werden Ausgaben nur im Falle eines aktuell gleich hoch oder
    höher gesetzten Verbosity-Levels angezeigt.</simpara>

    <simpara>Gibt stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,DumpChan()yyy123yyysw
exten =&gt; 123,n,Background(enter-ext-of-person)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'DumpChan' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Dump Info About The Calling Channelyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
   DumpChan([&lt;min_verbose_level&gt;])yyy123yyysw
Displays information on channel and listing of all channelyyy123yyysw
variables. If min_verbose_level is specified, output is onlyyyy123yyysw
displayed when the verbose level is currently set to that numberyyy123yyysw
or greater.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-eagi">
    <title><code>EAGI()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>EAGI()</code></secondary>
    </indexterm>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'EAGI' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Executes an EAGI compliant applicationyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  [E|Dead]AGI(command|args): Executes an Asterisk Gateway Interface compliantyyy123yyysw
program on a channel. AGI allows Asterisk to launch external programsyyy123yyysw
written in any language to control a telephony channel, play audio,yyy123yyysw
read DTMF digits, etc. by communicating with the AGI protocol on stdinyyy123yyysw
and stdout.yyy123yyysw
  This channel will stop dialplan execution on hangup inside of thisyyy123yyysw
application, except when using DeadAGI.  Otherwise, dialplan executionyyy123yyysw
will continue normally.yyy123yyysw
  A locally executed AGI script will receive SIGHUP on hangup from the channelyyy123yyysw
except when using DeadAGI. This can be disabled by setting the AGISIGHUP channelyyy123yyysw
variable to "no" before executing the AGI application.yyy123yyysw
  Using 'EAGI' provides enhanced AGI, with incoming audio available out of bandyyy123yyysw
on file descriptor 3yyy123yyysw
yyy123yyysw
  Use the CLI command 'agi show' to list available agi commandsyyy123yyysw
  This application sets the following channel variable upon completion:yyy123yyysw
     AGISTATUS      The status of the attempt to the run the AGI scriptyyy123yyysw
                    text string, one of SUCCESS | FAILED | HANGUPyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>13,19c13,15yyy123yyysw
&lt;   This channel will stop dialplan execution on hangup inside of thisyyy123yyysw
&lt; application, except when using DeadAGI.  Otherwise, dialplan executionyyy123yyysw
&lt; will continue normally.yyy123yyysw
&lt;   A locally executed AGI script will receive SIGHUP on hangup from the channelyyy123yyysw
&lt; except when using DeadAGI. This can be disabled by setting the AGISIGHUP channelyyy123yyysw
&lt; variable to "no" before executing the AGI application.yyy123yyysw
&lt;   Using 'EAGI' provides enhanced AGI, with incoming audio available out of bandyyy123yyysw
---yyy123yyysw
&gt; Returns -1 on hangup (except for DeadAGI) or if application requestedyyy123yyysw
&gt;  hangup, or 0 on non-hangup exit. yyy123yyysw
&gt; Using 'EAGI' provides enhanced AGI, with incoming audio available out of bandyyy123yyysw
22,25c18yyy123yyysw
&lt;   Use the CLI command 'agi show' to list available agi commandsyyy123yyysw
&lt;   This application sets the following channel variable upon completion:yyy123yyysw
&lt;      AGISTATUS      The status of the attempt to the run the AGI scriptyyy123yyysw
&lt;                     text string, one of SUCCESS | FAILED | HANGUPyyy123yyysw
---yyy123yyysw
&gt; Use the CLI command 'show agi' to list available agi commandsyyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe</title>

      <para><xref linkend="applikationen-agi" />.</para>
    </formalpara>
  </section>

  <section id="applikationen-echo">
    <title><code>Echo()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Echo()</code></secondary>
    </indexterm>

    <simpara>Wiederholt inwärtiges Audio für den Anrufer.</simpara>

    <synopsis>Echo()</synopsis>

    <simpara>Gibt auf dem Channel eingehendes Audio direkt wieder auf diesem
    Channel aus. Diese Anwendung findet häufig zum Testen der Verzögerung
    (Latenz) und Sprachqualität einer VoIP-Verbindung Verwendung. Der Anrufer
    kann zum Beenden die <code>#</code>-Taste drücken.</simpara>

    <simpara>Gibt 0 zurück, falls der Benutzer durch die <code>#</code>-Taste
    beendet, oder -1, falls der Benutzer auflegt.</simpara>

    <programlisting>exten =&gt; 123,1,Echo()yyy123yyysw
exten =&gt; 123,n,Playback(vm-goodbye)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Echo' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Echo audio, video, or DTMF back to the calling partyyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Echo(): This application will echo any audio, video, or DTMF frames read fromyyy123yyysw
the calling channel back to itself. If the DTMF digit '#' is received, theyyy123yyysw
application will exit.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>5c5yyy123yyysw
&lt; Echo audio, video, or DTMF back to the calling partyyyy123yyysw
---yyy123yyysw
&gt; Echo audio read back to the useryyy123yyysw
8,10c8,10yyy123yyysw
&lt;   Echo(): This application will echo any audio, video, or DTMF frames read fromyyy123yyysw
&lt; the calling channel back to itself. If the DTMF digit '#' is received, theyyy123yyysw
&lt; application will exit.yyy123yyysw
---yyy123yyysw
&gt;   Echo():  Echo audio read from channel back to the channel. yyy123yyysw
&gt; User can exit the application by either pressing the '#' key, yyy123yyysw
&gt; or hanging up.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-milliwatt" /></para>
    </formalpara>
  </section>

  <section id="applikationen-endwhile">
    <title><code>EndWhile()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>EndWhile()</code></secondary>
    </indexterm>

    <simpara>Beendet eine While-Schleife.</simpara>

    <synopsis>EndWhile()</synopsis>

    <simpara>Kehrt zur vorangehend aufgerufenen <code>While()</code>-Anwendung
    zurück. Für eine vollständige Beschreibung zur Benutzung einer
    While-Schleife siehe <xref linkend="applikationen-while" />.</simpara>

    <programlisting>exten =&gt; 123,1,Set(COUNT=1)yyy123yyysw
exten =&gt; 123,n,While($[${COUNT} &lt; 5])yyy123yyysw
exten =&gt; 123,n,SayNumber(${COUNT})yyy123yyysw
exten =&gt; 123,n,EndWhile()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'EndWhile' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
End a while loopyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Usage:  EndWhile()yyy123yyysw
Return to the previous called Whileyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>5c5yyy123yyysw
&lt; End a while loopyyy123yyysw
---yyy123yyysw
&gt; End A While Loopyyy123yyysw
10a11yyy123yyysw
&gt; yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-while" />, <xref
      linkend="applikationen-gotoif" /></para>
    </formalpara>
  </section>

  <section id="applikationen-exec">
    <title><code>Exec()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Exec()</code></secondary>
    </indexterm>

    <simpara>Führt eine Asterisk-Anwendung dynamisch aus.</simpara>

    <synopsis>Exec(<replaceable>Applikationsname</replaceable>(<replaceable>Argumente</replaceable>))</synopsis>

    <simpara>Erlaubt den Aufruf einer beliebigen Anwendung, selbst wenn er
    nicht fest im Wählplan einprogrammiert ist. Liefert den Wert zurück, den
    diese Asterisk-Anwendung zurückliefert, oder -2, wenn die aufgerufene
    Anwendung nicht gefunden werden kann. Die <code>Argumente</code> werden an
    die aufgerufene Anwendung durchgereicht.</simpara>

    <simpara>Diese Anwendung erlaubt den dynamischen Aufruf von Anwendungen,
    die aus einer Datenbank oder externen Quelle gelesen werden.</simpara>

    <programlisting>exten =&gt; 123,1,Set(app=SayDigits(12345))yyy123yyysw
exten =&gt; 123,2,Exec(${app})yyy123yyysw</programlisting>

    <important>
      <para>Bei einem negativen Rückgabewert wird die Ausführung des Dialplans
      beendet. Will man das nicht, verwendet man
      <code>TryExec()</code>.</para>
    </important>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Exec' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Executes dialplan applicationyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Usage: Exec(appname(arguments))yyy123yyysw
  Allows an arbitrary application to be invoked even when notyyy123yyysw
hardcoded into the dialplan.  If the underlying applicationyyy123yyysw
terminates the dialplan, or if the application cannot be found,yyy123yyysw
Exec will terminate the dialplan.yyy123yyysw
  To invoke external applications, see the application System.yyy123yyysw
  If you would like to catch any error instead, see TryExec.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>5c5yyy123yyysw
&lt; Executes dialplan applicationyyy123yyysw
---yyy123yyysw
&gt; Executes internal applicationyyy123yyysw
10,14c10,12yyy123yyysw
&lt; hardcoded into the dialplan.  If the underlying applicationyyy123yyysw
&lt; terminates the dialplan, or if the application cannot be found,yyy123yyysw
&lt; Exec will terminate the dialplan.yyy123yyysw
&lt;   To invoke external applications, see the application System.yyy123yyysw
&lt;   If you would like to catch any error instead, see TryExec.yyy123yyysw
---yyy123yyysw
&gt; hardcoded into the dialplan. To invoke external applicationsyyy123yyysw
&gt; see the application System. Returns whatever value theyyy123yyysw
&gt; app returns or a non-zero value if the app cannot be found.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-execif" />, <xref
      linkend="applikationen-tryexec" />, <xref
      linkend="applikationen-system" /></para>
    </formalpara>
  </section>

  <section id="applikationen-execif">
    <title><code>ExecIf()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ExecIf()</code></secondary>
    </indexterm>

    <simpara>Führt eine Asterisk-Anwendung unter bestimmten Bedingungen
    aus.</simpara>

    <synopsis>ExecIf(<replaceable>Ausdruck</replaceable>,<replaceable>Applikation</replaceable>,<replaceable>Argumente</replaceable>)</synopsis>

    <simpara>Ist <code>Ausdruck</code> wahr, wird die angegebene
    <code>Applikation</code> mit den Parametern <code>Argumente</code>
    ausgeführt, und deren Ergebnis zurückgeliefert. Siehe
    <filename>doc/README.variables</filename> (1.2) /
    <filename>doc/channelvariables.txt</filename> (1.4) für weiterführende
    Informationen über Standard-Asterisk-Ausdrücke.</simpara>

    <simpara>Ist der <code>Ausdruck</code> nicht wahr (also false), wird die
    Ausführung mit der nächsten Priorität fortgesetzt.</simpara>

    <programlisting>exten =&gt; 123,1,ExecIf($[${CALLERID(num)} = 101],SayDigits,123)yyy123yyysw
exten =&gt; 123,n,SayDigits(678)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ExecIf' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Executes dialplan application, conditionallyyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Usage:  ExecIF (&lt;expr&gt;|&lt;app&gt;|&lt;data&gt;)yyy123yyysw
If &lt;expr&gt; is true, execute and return the result of &lt;app&gt;(&lt;data&gt;).yyy123yyysw
If &lt;expr&gt; is true, but &lt;app&gt; is not found, then the applicationyyy123yyysw
will return a non-zero value.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>5c5yyy123yyysw
&lt; Executes dialplan application, conditionallyyyy123yyysw
---yyy123yyysw
&gt; Conditional execyyy123yyysw
12d11yyy123yyysw
&lt; yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-exec" /></para>
    </formalpara>
  </section>

  <section id="applikationen-fastagi">
    <title><code>FastAGI()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>FastAGI()</code></secondary>
    </indexterm>

    <simpara>Führt ein AGI-konformes Skript über eine Netzwerkverbindung
    aus.</simpara>

    <synopsis>FastAGI(agi://<replaceable>hostname</replaceable>[:<replaceable>Port</replaceable>][/<replaceable>script</replaceable>],<replaceable>Argumente</replaceable>)</synopsis>

    <simpara>Führt ein AGI-konformes Skript über das Netzwerk aus. Diese
    Anwendung ist <code>AGI()</code> sehr ähnlich, außer dass sie ein
    FastAGI-Skript über eine Netzwerkverbindung ausführt. Der wichtigste
    Verwendungszweck ist, rechenintensive AGI-Skripte von Remote-Servern
    ausführen zu lassen und die Startzeiten von AGI-Skripten zu reduzieren
    (ein FastAGI Skript läuft bereits bevor Asterisk sich mit ihm verbindet,
    ähnlich FastCGI bei Web-Servern).</simpara>

    <simpara><code>FastAGI()</code> versucht, sich direkt zu einem laufenden
    FastAGI-Programm zu verbinden, welches auf einem spezifizierten
    <code>Port</code> des Servers <code>hostname</code> bereits auf
    Verbindungen wartet. Als Standardport wird 4573 benutzt, falls kein
    anderer angegeben ist. Ist <code>script</code> angegeben, wird es als
    <code>agi_network_script</code>-Variable an das FastAGI-Programm
    übergeben. Die in <code>Argumente</code> stehenden Parameter werden an das
    Programm weitergegeben.</simpara>

    <simpara>Im Verzeichnis <filename>agi/fastagi-test</filename> befindet
    sich ein Beispiel-FastAGI-Skript. Verwenden Sie es als Ansatzpunkt für
    Ihre eigenen FastAGI-Programme.</simpara>

    <simpara>Liefert -1, falls die Anwendung ein Auflegen verlangt, oder 0 bei
    Beendigung ohne Auflegen.</simpara>

    <programlisting>; mit dem Beispiel-FastAGI-Programm "fastagi-test" verbinden, dasyyy123yyysw
; bereits auf dem lokalen Rechner laufen muss:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,FastAGI(agi://localhost/fastagi-test)yyy123yyysw
yyy123yyysw
; mit dem FastAGI-Skript "test" auf einem Host namens "testbox" aufyyy123yyysw
; Port 9000 verbinden und als Parameter "123" übergeben:yyy123yyysw
exten =&gt; 124,1,Answer()yyy123yyysw
exten =&gt; 124,n,FastAGI(agi://testbox:9000/test,123)yyy123yyysw</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-agi" />, <xref
      linkend="applikationen-deadagi" /></para>
    </formalpara>
  </section>

  <section id="applikationen-festival">
    <title><code>Festival()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Festival()</code></secondary>
    </indexterm>

    <simpara>Verwendet das Sprachsynthese-System (Text-to-speech) Festival, um
    dem Anrufer Text vorzulesen.</simpara>

    <synopsis>Festival(<replaceable>Text</replaceable>[,<replaceable>Tasten</replaceable>])</synopsis>

    <simpara>Verbindet sich zum lokal laufenden Festival-Server (muss
    installiert sein), sendet ihm den angegebenen <code>Text</code> und spielt
    dem Teilnehmer die resultierende Audiodatei vor. Wenn <code>Tasten</code>
    angegeben wurden und der Anrufer während des Abspielens eine davon drückt,
    wird der Abspielvorgang beendet und die entsprechende Taste zurückgegeben.
    Falls als <code>Tasten</code> der Wert <code>any</code> angegeben ist,
    wird jede Taste erkannt (und an die entsprechende Extension
    weitergeleitet).</simpara>

    <simpara>Sie müssen den Festival-Server <emphasis>vor</emphasis> Asterisk
    starten und die <code>Answer()</code>-Anwendung zum Beantworten des
    Channels verwenden, bevor Sie <code>Festival()</code> aufrufen.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Festival('Hallo Welt',#)yyy123yyysw</programlisting>

    <para>Alternativ zu der Applikation <code>Festival()</code> kann man auch
    mit dem <code>System()</code>-Befehl Festivals Programm
    <command>text2wave</command> aufrufen und die resultierende Audiodatei mit
    <code>Background()</code> oder <code>Playback()</code> abspielen, etwa so
    (nur als Beispiel, Verzeichnisse beachten!):<programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,System(echo 'Hallo Welt' | text2wave -o sound.wav -otype wav -)yyy123yyysw
exten =&gt; 123,n,Background(sound)yyy123yyysw</programlisting></para>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Festival' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Say text to the useryyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Festival(text[|intkeys]):  Connect to Festival, send the argument, get back the waveform,play it to the user, allowing any given interrupt keys to immediately terminate and returnyyy123yyysw
the value, or 'any' to allow any number back (useful in dialplan)yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><filename>contrib/README.festival</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-flash">
    <title><code>Flash()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Flash()</code></secondary>
    </indexterm>

    <simpara>Flasht einen Zap-Channel.</simpara>

    <synopsis>Flash()</synopsis>

    <simpara>Sendet einen Flash auf einen Zap-Channel. Dies ist nichts weiter
    als ein Hack für Leute, die Übermittlungen und andere Aktionen, die einen
    Flash durch ein AGI-Skript benötigen, durchführen möchten.</simpara>

    <sidebar>
      <simpara>Ein Flash (auch Switch-Hook-Flash oder Link genannt) entspricht
      dem ganz kurzen Drücken der Gabel für 80 - 500 Millisekunden (je nach
      Anbieter) an einem analogen Telefon (manche Apparate haben dafür eine
      eigene Taste), wodurch z.B. Rückfrage-Gespräche o.ä. eingeleitet werden,
      ohne den aktuellen Anruf aufzulegen.</simpara>
    </sidebar>

    <simpara>Liefert bei Erfolg 0 zurück, oder -1, falls der Channel kein
    Zap-Channel ist.</simpara>

    <programlisting>exten =&gt; 123,1,Flash()yyy123yyysw</programlisting>

    <para>Falls Ihnen auf Ihrer Leitung Link-Transfer bereitgestellt wird
    (typischerweise ein Zusatzdienst), könnten Sie so einen Anruf auf eine
    andere externe Nummer umleiten:<programlisting>[macro-link-umleitung]yyy123yyysw
exten =&gt; s,1,Playback(transfer)yyy123yyysw
exten =&gt; s,n,Flash()yyy123yyysw
exten =&gt; s,n,Wait(1)yyy123yyysw
exten =&gt; s,n,SendDTMF(${ARG1})yyy123yyysw
exten =&gt; s,n,Wait(1)yyy123yyysw
exten =&gt; s,n,Hangup()yyy123yyysw
yyy123yyysw
[externe-apparate]yyy123yyysw
; eingehende Anrufe auf 6001 auf die externe Nummer 0261123456 umleiten:yyy123yyysw
exten =&gt; 6001,1,Macro(link-umleitung,0261123456)yyy123yyysw</programlisting>Es kann
    dazu nötig sein, die Flash-Dauer (Einstellung <code>flash</code>) in der
    <filename>zapata.conf</filename> auf die Vorgabe Ihres Anbieters zu
    setzen, z.B. <code>flash=200</code>.</para>
  </section>

  <section id="applikationen-forkcdr">
    <title><code>ForkCDR()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ForkCDR()</code></secondary>
    </indexterm>

    <simpara>Erstellt ein zusätzliches CDR aus dem aktuellen Anruf.</simpara>

    <synopsis>ForkCDR()</synopsis>

    <simpara>Erstellt für den Rest des aktuellen Anrufs einen zusätzlichen
    Call Detail Record, um die in Rechnung zu stellende Gesprächszeit von der
    Gesamtdauer des Anrufs zu unterscheiden.</simpara>

    <programlisting>exten =&gt; 123,n,ForkCDR()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ForkCDR' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Forks the Call Data Recordyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  ForkCDR([options]):  Causes the Call Data Record to fork an additionalyyy123yyysw
cdr record starting from the time of the fork callyyy123yyysw
If the option 'v' is passed all cdr variables will be passed along also.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-nocdr" />, <xref
      linkend="applikationen-resetcdr" /></para>
    </formalpara>
  </section>

  <section id="applikationen-getcpeid">
    <title><code>GetCPEID()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>GetCPEID()</code></secondary>
    </indexterm>

    <simpara>Holt die CPE-ID eines ADSI-fähigen Telefons.</simpara>

    <synopsis>GetCPEID()</synopsis>

    <simpara>Holt die CPE-ID und weitere Informationen und zeigt sie auf der
    Asterisk-Konsole an. Diese Informationen werden häufig benötigt, um die
    Datei <filename>zapata.conf</filename> für Operationen bei ADSI-fähigen
    Telefonen einzurichten.</simpara>

    <simpara>Liefert beim Auflegen -1 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,GetCPEID()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'GetCPEID' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Get ADSI CPE IDyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  GetCPEID: Obtains and displays ADSI CPE ID and other information in orderyyy123yyysw
to properly setup zapata.conf for on-hook operations.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-adsiprog" />,
      <filename>adsi.conf</filename>, <filename>zapata.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-gosub">
    <title><code>Gosub()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Gosub()</code></secondary>
    </indexterm>

    <simpara>Springt zu einer bestimmten Priorität, Extension und einem
    bestimmten Kontext (mit der Möglichkeit der Rückkehr).</simpara>

    <synopsis>Gosub([[<replaceable>Kontext</replaceable>,]<replaceable>Extension</replaceable>,]<replaceable>Priorität</replaceable>)</synopsis>

    <synopsis>Gosub(<replaceable>benannte_Priorität</replaceable>)</synopsis>

    <simpara>Springt wie <code>Goto()</code> im Dialplan, erlaubt es dem
    Unterprogramm aber, mit <code>Return()</code> zurückzukehren.</simpara>

    <simpara>Gibt 0 zurück oder -1, wenn das Sprungziel ungültig
    ist.</simpara>

    <programlisting>exten =&gt; 123,1,Gosub(cid-setzen)yyy123yyysw
exten =&gt; 123,n,Dial(SIP/${EXTEN})yyy123yyysw
yyy123yyysw
exten =&gt; 123,10(cid-setzen),Set(CALLERID(all)=Apfelmus GmbH &lt;012345678&gt;)yyy123yyysw
exten =&gt; 123,n,Return()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Gosub' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Jump to label, saving return addressyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Gosub([[context|]exten|]priority)yyy123yyysw
  Jumps to the label specified, saving the return address.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-gosubif" />, <xref
      linkend="applikationen-goto" />, <xref
      linkend="applikationen-gotoif" />, <xref
      linkend="applikationen-return" />, <xref
      linkend="applikationen-macro" /></para>
    </formalpara>
  </section>

  <section id="applikationen-gosubif">
    <title><code>GosubIf()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>GosubIf()</code></secondary>
    </indexterm>

    <simpara>Springt bedingt zu der angegebenen Priorität (mit der Möglichkeit
    der Rückkehr).</simpara>

    <synopsis>GosubIf(<replaceable>Bedingung</replaceable>?<replaceable>PrioWahr</replaceable>:<replaceable>PrioFalsch</replaceable>)</synopsis>

    <simpara>Springt wie <code>GotoIf()</code> unter einer bestimmten
    Bedingung im Dialplan, erlaubt es dem Unterprogramm aber, mit
    <code>Return()</code> zurückzukehren.</simpara>

    <simpara>Gibt 0 zurück oder -1, wenn das Sprungziel ungültig
    ist.</simpara>

    <programlisting>exten =&gt; telcid,1,Set(CALLERID(all)=Apfelmus &lt;0123456780&gt;)yyy123yyysw
exten =&gt; telcid,n,Return()yyy123yyysw
exten =&gt; faxcid,1,Set(CALLERID(all)=Apfelmus &lt;0123456785&gt;)yyy123yyysw
exten =&gt; faxcid,n,Return()yyy123yyysw
yyy123yyysw
exten =&gt; _0.,1,GosubIf($[${CHANNEL:4:2} = 43]?faxcid,1:telcid,1)yyy123yyysw
exten =&gt; _0.,n,Dial(${TRUNK}/${EXTEN:1},,T)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'GosubIf' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Conditionally jump to label, saving return addressyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
GosubIf(condition?labeliftrue[:labeliffalse])yyy123yyysw
  If the condition is true, then jump to labeliftrue.  If false, jumps toyyy123yyysw
labeliffalse, if specified.  In either case, a jump saves the return pointyyy123yyysw
in the dialplan, to be returned to with a Return.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>5c5yyy123yyysw
&lt; Conditionally jump to label, saving return addressyyy123yyysw
---yyy123yyysw
&gt; Jump to label, saving return addressyyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-gosub" />, <xref
      linkend="applikationen-goto" />, <xref
      linkend="applikationen-gotoif" />, <xref
      linkend="applikationen-return" />, <xref
      linkend="applikationen-macro" /></para>
    </formalpara>
  </section>

  <section id="applikationen-goto">
    <title><code>Goto()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Goto()</code></secondary>
    </indexterm>

    <simpara>Springt zu einer bestimmten Priorität, Extension und einem
    bestimmten Kontext.</simpara>

    <synopsis>Goto([[<replaceable>Kontext</replaceable>,]<replaceable>Extension</replaceable>,]<replaceable>Priorität</replaceable>)</synopsis>

    <synopsis>Goto(<replaceable>benannte_Priorität</replaceable>)</synopsis>

    <simpara>Übergibt die Kontrolle des aktuellen Channels ohne Möglichkeit
    der Rückkehr an die spezifizierte Priorität und setzt optional Extension
    und Kontext des Ziels.</simpara>

    <simpara>Optional können Sie die Anwendung dazu benutzen, zu der durch den
    Parameter <code>benannte_Priorität</code> angegebenen Priorität (also
    Priorität mit Label) zu gelangen. Benannte Prioritäten funktionieren
    ausschließlich in der aktuellen Extension.</simpara>

    <simpara>Liefert immer 0 zurück, auch falls der gegebene Kontext, die geg.
    Extension oder Priorität nicht gültig sind.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,2,Set(COUNT=1)yyy123yyysw
exten =&gt; 123,3,SayNumber(${COUNT})yyy123yyysw
exten =&gt; 123,4,Set(COUNT=$[ ${COUNT} + 1 ])yyy123yyysw
exten =&gt; 123,5,Goto(3)yyy123yyysw
yyy123yyysw
; das gleiche mit einer benannten Priorität:yyy123yyysw
exten =&gt; 124,1,Answer()yyy123yyysw
exten =&gt; 124,2,Set(COUNT=1)yyy123yyysw
exten =&gt; 124,3(ansage),SayNumber(${COUNT})yyy123yyysw
exten =&gt; 124,4,Set(COUNT=$[ ${COUNT} + 1 ])yyy123yyysw
exten =&gt; 124,5,Goto(ansage)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Goto' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Jump to a particular priority, extension, or contextyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Goto([[context|]extension|]priority): This application will cause theyyy123yyysw
calling channel to continue dialplan execution at the specified priority.yyy123yyysw
If no specific extension, or extension and context, are specified, then thisyyy123yyysw
application will jump to the specified priority of the current extension.yyy123yyysw
  If the attempt to jump to another location in the dialplan is not successful,yyy123yyysw
then the channel will continue at the next priority of the current extension.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-gotoif" />, <xref
      linkend="applikationen-gotoiftime" />, <xref
      linkend="applikationen-gosub" />, <xref
      linkend="applikationen-gosubif" />, <xref
      linkend="applikationen-macro" /></para>
    </formalpara>
  </section>

  <section id="applikationen-gotoif">
    <title><code>GotoIf()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>GotoIf()</code></secondary>
    </indexterm>

    <simpara>Springt bedingt zu der angegebenen Priorität,</simpara>

    <synopsis>GotoIf(<replaceable>Bedingung</replaceable>?<replaceable>PrioWahr</replaceable>:<replaceable>PrioFalsch</replaceable>)</synopsis>

    <simpara>Schickt den Anruf ohne Möglichkeit der Rückkehr an die Priorität
    <code>PrioWahr</code>, falls die <code>Bedingung</code> wahr ist oder zu
    <code>PrioFalsch</code>, falls sie falsch ist. Entweder
    <code>PrioWahr</code> oder <code>PrioFalsch</code> können ausgelassen
    werden (dann wird ggf. mit der nächsten Priorität weitergemacht), aber
    nicht beide (und nicht der Doppelpunkt!).</simpara>

    <para>Eine Priorität ist hier eines der Folgenden:<itemizedlist
       >
        <listitem>
          <simpara>eine Priorität, z.B. <code>10</code></simpara>
        </listitem>

        <listitem>
          <simpara>eine Extension und eine Priorität, z.B.
          <code>123,10</code></simpara>
        </listitem>

        <listitem>
          <simpara>Kontext, Extension und Priorität, z.B.
          <code>incoming,123,10</code></simpara>
        </listitem>

        <listitem>
          <simpara>eine benannte Priorität innerhalb der gleichen Extension,
          z.B. <code>ok</code></simpara>
        </listitem>
      </itemizedlist></para>

    <programlisting>exten =&gt; 123,1,GotoIf($[ ${test} = 5 ]?ok:nein)yyy123yyysw
exten =&gt; 123,10(ok),Playback(tt-monkeys)yyy123yyysw
exten =&gt; 123,20(nein),Playback(tt-weasels)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'GotoIf' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Conditional gotoyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  GotoIf(condition?[labeliftrue]:[labeliffalse]): This application will causeyyy123yyysw
the calling channel to jump to the specified location in the dialplan based onyyy123yyysw
the evaluation of the given condition. The channel will continue atyyy123yyysw
'labeliftrue' if the condition is true, or 'labeliffalse' if the condition isyyy123yyysw
false. The labels are specified with the same syntax as used within the Gotoyyy123yyysw
application.  If the label chosen by the condition is omitted, no jump isyyy123yyysw
performed, but execution continues with the next priority in the dialplan.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-goto" />, <xref
      linkend="applikationen-gotoiftime" />, <xref
      linkend="applikationen-gosub" />, <xref
      linkend="applikationen-gosubif" />, <xref
      linkend="applikationen-macro" /></para>
    </formalpara>
  </section>

  <section id="applikationen-gotoiftime">
    <title><code>GotoIfTime()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>GotoIfTime()</code></secondary>
    </indexterm>

    <simpara>Verzweigt bedingt, abhängig von Zeit und Tag.</simpara>

    <synopsis>GotoIfTime(<replaceable>Zeit</replaceable>,<replaceable>Wochentag</replaceable>,<replaceable>Monatstag</replaceable>,<replaceable>Monat</replaceable>?[[<replaceable>Kontext</replaceable>,]<replaceable>Extension</replaceable>,]<replaceable>Pri</replaceable>o)</synopsis>

    <simpara>Verzweigt zu der angegebenen Priorität, falls die aktuelle Zeit
    in das angegebene Muster fällt. Jedes Element kann auch als * (für immer)
    oder als Spanne (mit <code>-</code>) definiert werden.</simpara>

    <para>Die Parameter zu dieser Anwendung sind: <variablelist
        termlength="15">
        <varlistentry>
          <term><code>Uhrzeit-Spanne</code></term>

          <listitem>
            <simpara>Zeitintervall, im 24-Stunden-Format mit Minuten, z.B.
            <code>9:00-17:00</code></simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>Wochentag</code></term>

          <listitem>
            <simpara>Wochentage (<code>mon</code>, <code>tue</code>,
            <code>wed</code>, <code>thu</code>, <code>fri</code>,
            <code>sat</code>, <code>sun</code>), z.B.
            <code>mon-fri</code></simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>Monatstag</code></term>

          <listitem>
            <simpara>Tag des Monats (1-31), z.B. <code>1-15</code></simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>Monat</code></term>

          <listitem>
            <simpara>Monate (<code>jan</code>, <code>feb</code>,
            <code>mar</code>, <code>apr</code>, <code>mai</code>,
            <code>jun</code>, <code>jul</code>, <code>aug</code>,
            <code>sep</code>, <code>oct</code>, <code>nov</code>,
            <code>dec</code>), z.B. <code>apr-oct</code></simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>; Während der Öffnungszeiten zum Kontext incoming-geoeffnet springen.yyy123yyysw
; Wir haben montags-freitags von 9 bis 18 Uhr geöffnet:yyy123yyysw
exten =&gt; s,1,GotoIfTime(09:00-17:59,mon-fri,*,*?incoming-geoeffnet,s,1)yyy123yyysw
; außerdem samstags von 9 bis 12:yyy123yyysw
exten =&gt; s,n,GotoIfTime(09:00-11:59,sat,*,*?incoming-geoeffnet,s,1)yyy123yyysw
; Außerhalb der Öffnungszeiten zum Kontext incoming-geschlossen:yyy123yyysw
exten =&gt; s,n,Goto(incoming-geschlossen,s,1)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'GotoIfTime' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Conditional Goto based on the current timeyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  GotoIfTime(&lt;times&gt;|&lt;weekdays&gt;|&lt;mdays&gt;|&lt;months&gt;?[[context|]exten|]priority):yyy123yyysw
This application will have the calling channel jump to the specified locationyyy123yyysw
in the dialplan if the current time matches the given time specification.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>9,10c9,12yyy123yyysw
&lt; This application will have the calling channel jump to the specified locationyyy123yyysw
&lt; in the dialplan if the current time matches the given time specification.yyy123yyysw
---yyy123yyysw
&gt; This application will have the calling channel jump to the speicified locationyyy123yyysw
&gt; int the dialplan if the current time matches the given time specification.yyy123yyysw
&gt; Further information on the time specification can be found in examplesyyy123yyysw
&gt; illustrating how to do time-based context includes in the dialplan.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-gotoif" />, <xref
      linkend="funktionen-iftime" /></para>
    </formalpara>
  </section>

  <section id="applikationen-hangup">
    <title><code>Hangup()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Hangup()</code></secondary>
    </indexterm>

    <simpara>Legt den aktuellen Channel auf.</simpara>

    <synopsis>Hangup()</synopsis>

    <simpara>Legt den aktuellen Channel bedingungslos auf.</simpara>

    <simpara>Liefert stets -1 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Playback(vm-goodbye)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Hangup' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Hang up the calling channelyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Hangup([causecode]): This application will hang up the calling channel.yyy123yyysw
If a causecode is given the channel's hangup cause will be set to the givenyyy123yyysw
value.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>8,10c8yyy123yyysw
&lt;   Hangup([causecode]): This application will hang up the calling channel.yyy123yyysw
&lt; If a causecode is given the channel's hangup cause will be set to the givenyyy123yyysw
&lt; value.yyy123yyysw
---yyy123yyysw
&gt;   Hangup(): This application will hang up the calling channel.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-answer" /></para>
    </formalpara>
  </section>

  <section id="applikationen-iax2provision">
    <title><code>IAX2Provision()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>IAX2Provision()</code></secondary>
    </indexterm>

    <simpara>Versorgt eine anrufende IAXy-Einheit.</simpara>

    <synopsis>IAX2Provision([<replaceable>Template</replaceable>])</synopsis>

    <simpara>Stellt einer anrufende IAXy-Einheit die Vorlage
    <code>Template</code> bereit. Ist keine Vorlage angegeben, wird die
    Standard-Vorlage benutzt. IAXy-Versorgungsvorlagen sind in der
    Konfigurationsdatei <filename>iaxprov.conf</filename> definiert.</simpara>

    <simpara>Liefert 0 bei Erfolg oder -1 bei einem Fehler.</simpara>

    <programlisting>exten =&gt; 123,1,IAX2Provision(default)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'IAX2Provision' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Provision a calling IAXy with a given templateyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  IAX2Provision([template]): Provisions the calling IAXy (assumingyyy123yyysw
the calling entity is in fact an IAXy) with the given template oryyy123yyysw
default if one is not specified.  Returns -1 on error or 0 on success.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-importvar">
    <title><code>ImportVar()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ImportVar()</code></secondary>
    </indexterm>

    <simpara>Setzt eine Variable basierend auf einer Channelvariable eines
    anderen Channels.</simpara>

    <synopsis>ImportVar(<replaceable>NeueVariable</replaceable>=<replaceable>Channel</replaceable>,<replaceable>Variable</replaceable>)</synopsis>

    <simpara>Setzt die Variable <code>NeueVariable</code> auf den Wert von
    <code>Variable</code> des angegebenen Channels. Falls
    <code>NeueVariable</code> mit dem Zeichen <code>_</code> beginnt, wird
    einfache Vererbung angenommen. Falls <code>NeueVariable</code> mit
    <code>__</code> beginnt, wird unbeschränkte Vererbung
    angenommen.</simpara>

    <programlisting>; Caller-ID vom Channel Zap/1 importieren:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,ImportVar(cid=Zap/1,CALLERID)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ImportVar' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Import a variable from a channel into a new variableyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  ImportVar(newvar=channelname|variable): This application imports a variableyyy123yyysw
from the specified channel (as opposed to the current one) and stores it asyyy123yyysw
a variable in the current channel (the channel that is calling thisyyy123yyysw
application). Variables created by this application have the same inheritanceyyy123yyysw
properties as those created with the Set application. See the documentation foryyy123yyysw
Set for more information.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-set" /></para>
    </formalpara>
  </section>

  <section id="applikationen-lookupblacklist">
    <title><code>LookupBlacklist()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>LookupBlacklist()</code></secondary>
    </indexterm>

    <simpara>Schlägt die Caller-ID-Nummer in der lokalen Blacklist-Datenbank
    in der AstDB nach.</simpara>

    <synopsis>LookupBlacklist([<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Sucht die Caller-ID-Nummer (/-Name) des aktiven Channels in der
    AstDB in der Familie <code>blacklist</code>. Wenn die Option j (jump)
    angegeben ist, die Nummer gefunden wird und eine Priorität n+101
    existiert, geht die Ausführung bei dieser Priorität weiter. Wird auf dem
    Channel keine Caller-ID empfangen, tut die Anwendung nichts.</simpara>

    <simpara>Die Applikation setzt auch die Channelvariable
    <code>LOOKUPBLSTATUS</code> auf <code>FOUND</code> (gefunden) oder
    <code>NOTFOUND</code> (nicht gefunden).</simpara>

    <simpara>Um der Blacklist Einträge hinzuzufügen, geben Sie im CLI
    <code>database put blacklist "<replaceable>Nummer</replaceable>"
    "1"</code>, bzw. <code>database del blacklist
    "<replaceable>Nummer</replaceable>"</code> zum Löschen oder <code>database
    show blacklist</code> für eine Auflistung ein.</simpara>

    <programlisting>; Nummern aus der Schwarzen Liste nicht zulassen,yyy123yyysw
; andernfalls die Nummer in der Variablen ${PETER} wählen:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,LookupBlacklist()yyy123yyysw
exten =&gt; 123,n,GotoIf($["${LOOKUPBLSTATUS}" = "FOUND"]?black,1)yyy123yyysw
exten =&gt; 123,n,Dial(${PETER},30)yyy123yyysw
yyy123yyysw
exten =&gt; black,1,Playback(tt-allbusy)yyy123yyysw
exten =&gt; black,n,Hangup()yyy123yyysw</programlisting>

    <para>Die Applikation <code>LookupBlacklist()</code> könnte folgendermaßen
    ersetzt werden:<programlisting>exten =&gt; 123,1,Macro(blacklist,${CALLERID(num)})yyy123yyysw
exten =&gt; 123,n,Dial(IAX2/benutzer:passwort@beispiel.de/500)yyy123yyysw
yyy123yyysw
[macro-blacklist]yyy123yyysw
; Aufruf: Macro(blacklist,${CALLERID(num)})yyy123yyysw
exten =&gt; s,1,GotoIf(${DB_EXISTS(blacklist/${ARG1})}?black)yyy123yyysw
exten =&gt; s,10(black),NoOp(Nummer ${ARG1} ist auf der Blacklist)yyy123yyysw
exten =&gt; s,n,Busy(5)yyy123yyysw
exten =&gt; s,n,Hangup()yyy123yyysw</programlisting></para>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'LookupBlacklist' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Look up Caller*ID name/number from blacklist databaseyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  LookupBlacklist(options): Looks up the Caller*ID number on the activeyyy123yyysw
channel in the Asterisk database (family 'blacklist').  yyy123yyysw
The option string may contain the following character:yyy123yyysw
 'j' -- jump to n+101 priority if the number/name is found in the blacklistyyy123yyysw
This application sets the following channel variable upon completion:yyy123yyysw
 LOOKUPBLSTATUS  The status of the Blacklist lookup as a text string, one ofyyy123yyysw
  FOUND | NOTFOUNDyyy123yyysw
Example: exten =&gt; 1234,1,LookupBlacklist()yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-lookupcidname">
    <title><code>LookupCIDName()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>LookupCIDName()</code></secondary>
    </indexterm>

    <simpara>Sucht einen Caller-ID-Namen in der AstDB.</simpara>

    <synopsis>LookupCIDName()</synopsis>

    <simpara>Schlägt die Caller-ID-Nummer des aktiven Channels in der AstDB
    (Familie <code>cidname</code>) nach und setzt den Caller-ID-Namen - wenn
    vorhanden - auf den gespeicherten Wert. Diese Anwendung tut nichts, wenn
    auf dem Channel keine Caller-ID empfangen wird.
    <code>LookupCIDName()</code> kann nützlich sein, wenn Sie nur eine
    Caller-ID-Nummer, aber keinen -Namen empfangen, oder wenn Sie den
    Caller-ID-Namen für einige eingehende Anrufe ändern möchten.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <simpara>Um der Liste Einträge hinzuzufügen, geben Sie im CLI
    <code>database put cidname "<replaceable>Nummer</replaceable>"
    "<replaceable>Name</replaceable>"</code>, bzw. <code>database del cidname
    "<replaceable>Nummer</replaceable>"</code> zum Löschen oder <code>database
    show cidname</code> für eine Auflistung ein.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,LookupCIDName()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'LookupCIDName' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Look up CallerID Name from local databaseyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  LookupCIDName: Looks up the Caller*ID number on the activeyyy123yyysw
channel in the Asterisk database (family 'cidname') and sets theyyy123yyysw
Caller*ID name.  Does nothing if no Caller*ID was received on theyyy123yyysw
channel.  This is useful if you do not subscribe to Caller*IDyyy123yyysw
name delivery, or if you want to change the names on some incomingyyy123yyysw
calls.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-macro">
    <title><code>Macro()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Macro()</code></secondary>
    </indexterm>

    <simpara>Ruft ein zuvor definiertes Makro auf.</simpara>

    <synopsis>Macro(<replaceable>macroname</replaceable>[,<replaceable>Arg1</replaceable>[,<replaceable>Arg2</replaceable>[,<replaceable>...</replaceable>]]])</synopsis>

    <simpara>Führt ein im Kontext
    <code>macro-<replaceable>macroname</replaceable></code> definiertes Makro
    aus, indem es zur <code>s</code>-Extension dieses Kontextes springt und
    nach der Ausführung des Makros zurückkehrt.</simpara>

    <simpara>Die angerufene Extension, Kontext und Priorität sind innerhalb
    des Makros in<code> ${MACRO_EXTEN}</code>, <code>${MACRO_CONTEXT}</code>
    und <code>${MACRO_PRIORITY}</code> verfügbar. Die Parameter
    <code>Arg1</code>, <code>Arg2</code> ... werden im Makrokontext zu
    <code>${ARG1}</code>, <code>${ARG2}</code> usw.</simpara>

    <simpara><code>Macro()</code> liefert -1 zurück, falls irgendein Schritt
    des Makros -1 zurückliefert, sonst 0. Falls bei Beendigung des Ablaufs
    <code>${MACRO_OFFSET}</code> gesetzt ist, versucht die Anwendung bei
    Priorität n+1+<code>MACRO_OFFSET</code> fortzufahren, falls ein solcher
    Schritt existiert, sonst bei n+1.</simpara>

    <simpara>Falls die <code>Goto()</code>-Anwendung aus dem Makro heraus
    aufgerufen wird, wird das Makro enden und die Kontrolle an das Ziel von
    <code>Goto()</code> gehen.</simpara>

    <programlisting>; ein Makro definieren, das vom übergebenen Wert runterzählt:yyy123yyysw
[macro-countdown]yyy123yyysw
exten =&gt; s,1,Set(COUNT=${ARG1})yyy123yyysw
exten =&gt; s,n,While($[ ${COUNT} &gt; 0])yyy123yyysw
exten =&gt; s,n,SayNumber(${COUNT})yyy123yyysw
exten =&gt; s,n,Set(COUNT=$[ ${COUNT} - 1 ])yyy123yyysw
exten =&gt; s,n,EndWhile()yyy123yyysw
yyy123yyysw
[default]yyy123yyysw
exten =&gt; 123,1,Macro(countdown,3)   ; das Makro "countdown" mit ARG1=3 aufrufenyyy123yyysw
exten =&gt; 124,1,Macro(countdown,5)   ; das Makro "countdown" mit ARG1=5 aufrufenyyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Macro' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Macro Implementationyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Macro(macroname|arg1|arg2...): Executes a macro using the contextyyy123yyysw
'macro-&lt;macroname&gt;', jumping to the 's' extension of that context andyyy123yyysw
executing each step, then returning when the steps end. yyy123yyysw
The calling extension, context, and priority are stored in ${MACRO_EXTEN}, yyy123yyysw
${MACRO_CONTEXT} and ${MACRO_PRIORITY} respectively.  Arguments becomeyyy123yyysw
${ARG1}, ${ARG2}, etc in the macro context.yyy123yyysw
If you Goto out of the Macro context, the Macro will terminate and controlyyy123yyysw
will be returned at the location of the Goto.yyy123yyysw
If ${MACRO_OFFSET} is set at termination, Macro will attempt to continueyyy123yyysw
at priority MACRO_OFFSET + N + 1 if such a step exists, and N + 1 otherwise.yyy123yyysw
WARNING: Because of the way Macro is implemented (it executes the prioritiesyyy123yyysw
         contained within it via sub-engine), and a fixed per-threadyyy123yyysw
         memory stack allowance, macros are limited to 7 levelsyyy123yyysw
         of nesting (macro calling macro calling macro, etc.); Ityyy123yyysw
         may be possible that stack-intensive applications in deeply nested macrosyyy123yyysw
         could cause asterisk to crash earlier than this limit.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>22,23c22,23yyy123yyysw
&lt;          may be possible that stack-intensive applications in deeply nested macrosyyy123yyysw
&lt;          could cause asterisk to crash earlier than this limit.yyy123yyysw
---yyy123yyysw
&gt;          may be possible that stack-intensive applications in deeply nestedyyy123yyysw
&gt;          macros could cause asterisk to crash earlier than this limit.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-goto" />, <xref
      linkend="applikationen-gosub" /></para>
    </formalpara>
  </section>

  <section id="applikationen-mailboxexists">
    <title><code>MailboxExists()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MailboxExists()</code></secondary>
    </indexterm>

    <simpara>Verzweigt bedingt, falls die angegebene Voicemailbox
    existiert.</simpara>

    <synopsis>MailboxExists(<replaceable>Mailbox</replaceable>[@<replaceable>Kontext</replaceable>][,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Prüft, ob die durch <code>Mailbox</code> angegebene Voicemailbox
    existiert. Sie können zusätzlich einen Voicemail-Kontext
    <code>Kontext</code> übergeben, wenn die Mailbox nicht zum
    Standard-Voicemail-Kontext gehört.</simpara>

    <simpara>Setzt die Channelvariable <code>VMBOXEXISTSSTATUS</code> auf
    <code>SUCCESS</code> (Erfolg, Mailbox vorhanden) oder <code>FAILED</code>
    (fehlgeschlagen, Mailbox nicht vorhanden).</simpara>

    <simpara>Mit der Option <code>j</code> wird bei vorhandener Mailbox zur
    Priorität n+101 gesprungen.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,MailboxExists(123@default)yyy123yyysw
exten =&gt; 123,n,Goto(box-${VMBOXEXISTSSTATUS})yyy123yyysw
exten =&gt; 123,10(box-SUCCESS),Voicemail(123,u)yyy123yyysw
exten =&gt; 123,20(box-FAILED),Playback(tut-uns-leid)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'MailboxExists' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Check to see if Voicemail mailbox existsyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  MailboxExists(mailbox[@context][|options]): Check to see if the specifiedyyy123yyysw
mailbox exists. If no voicemail context is specified, the 'default' contextyyy123yyysw
will be used.yyy123yyysw
  This application will set the following channel variable upon completion:yyy123yyysw
    VMBOXEXISTSSTATUS - This will contain the status of the execution of theyyy123yyysw
                        MailboxExists application. Possible values include:yyy123yyysw
                        SUCCESS | FAILEDyyy123yyysw
yyy123yyysw
  Options:yyy123yyysw
    j - Jump to priority n+101 if the mailbox is found.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="funktionen-vmcount" /></para>
    </formalpara>
  </section>

  <section id="applikationen-meetme">
    <title><code>MeetMe()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MeetMe()</code></secondary>
    </indexterm>

    <simpara>Nimmt den Anrufer in eine MeetMe-Konferenz auf.</simpara>

    <synopsis>MeetMe([<replaceable>KonferenzNr</replaceable>][,<replaceable>Optionen</replaceable>[,<replaceable>PIN</replaceable>]])</synopsis>

    <simpara>Verbindet den Anrufer auf dem aktuellen Channel zu einer
    MeetMe-Konferenz, angegeben durch den Parameter <code>KonferenzNr</code>.
    Ohne Angabe der Konferenznummer wird der Teilnehmer zur Eingabe derselben
    aufgefordert.</simpara>

    <simpara>Wird als <code>PIN</code>-Parameter die PIN-Nummer der Konferenz
    (statisch in <filename>meetme.conf</filename> oder dynamisch vom Ersteller
    festgelegt) übergeben, so wird der Anrufer direkt in die Konferenz
    geleitet. Ansonsten muss der Anrufer die PIN eingeben, um beitreten zu
    können.</simpara>

    <important>
      <simpara>Damit MeetMe-Konferenzen funktionieren, muss ein passendes
      Zaptel-Interface installiert sein. Alternativ kann auch der
      <code>ztdummy</code>-Treiber für Timing-Zwecke verwendet
      werden.</simpara>

      <simpara>MeetMe-Konferenzen benutzen offenbar intern immer den
      uLaw-Codec, je mehr Teilnehmer in einer Konferenz andere Codecs wie GSM
      verwenden, desto mehr Rechenleistung wird für die Umkodierung
      benötigt.</simpara>
    </important>

    <simpara>Die <code>Optionen</code> können sich aus folgenden Zeichen
    zusammensetzen:</simpara>

    <variablelist termlength="3">
      <varlistentry>
        <term><code>a</code></term>

        <listitem>
          <simpara>Aktiviert den Administrator-Modus.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>A</code></term>

        <listitem>
          <simpara>Markiert den eintretenden User als besonderen Teilnehmer
          (siehe <code>w</code> und <code>x</code>).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>b</code></term>

        <listitem>
          <simpara>Startet das in <code>${MEETME_AGI_BACKGROUND}</code>
          spezifizierte AGI-Skript, standardmäßig
          <filename>conf-background.agi</filename>. (Funktioniert nur dann
          korrekt, wenn alle Kanäle in einer Konferenz Zap-Kanäle sind.) Das
          Skript erhält alle DTMF-Tanstendrücke, wodurch die Kombination mit
          Optionen, die auch das Abfangen von Tasten zur Folge haben
          (<code>p</code>), nicht möglich ist.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>c</code></term>

        <listitem>
          <simpara>Kündigt beim Betreten die Zahl der Teilnehmer an.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>d</code></term>

        <listitem>
          <simpara>Legt dynamisch einen neuen Konferenzraum an.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>D</code></term>

        <listitem>
          <simpara>Legt dynamisch einen neuen Konferenzraum an, wobei die
          Festlegung der PIN verlangt wird. (Wenn der User keine PIN will,
          muss er <code>#</code> drücken.)</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>e</code></term>

        <listitem>
          <simpara>Wählt eine leere Konferenz aus.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>E</code></term>

        <listitem>
          <simpara>Wählt eine leere Konferenz aus, die keine PIN
          verlangt.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>i</code></term>

        <listitem>
          <simpara>Kündigt Betreten oder Verlassen eines Teilnehmers an (nur
          mit Zap-Kanälen).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>m</code></term>

        <listitem>
          <simpara>Aktiviert den Monitor-Modus (nur hören, nicht
          sprechen).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>M</code></term>

        <listitem>
          <simpara>Aktiviert Wartemusik (Music on Hold), wenn nur ein
          Teilnehmer in der Konferenz ist.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>p</code></term>

        <listitem>
          <simpara>Ermöglicht es dem Teilnehmer, die Konferenz durch Drücken
          von <code>#</code> zu verlassen.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>P</code></term>

        <listitem>
          <simpara>Fragt immer nach der PIN, auch wenn sie hier im Befehl
          angegeben ist.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>q</code></term>

        <listitem>
          <simpara>Aktiviert den ruhigen Modus (spielt keine
          Eintritts-/Austrittsklänge ab).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>r</code></term>

        <listitem>
          <simpara>Zeichnet eine Konferenz auf. Datei:
          <code>${MEETME_RECORDINGFILE}</code>, Format:
          <code>${MEETME_RECORDINGFORMAT}</code>. Der Standard-Dateiname
          lautet
          <code>meetme-conf-rec-${<replaceable>KonferenzNr</replaceable>}-${<replaceable>UniqueID</replaceable>}</code>,
          wobei <code>UniqueID</code> eine einmalige ID ist. Das
          Standardformat ist <code>wav</code>. (Funktioniert nur mit
          Zap-Kanälen)</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>s</code></term>

        <listitem>
          <simpara>Wechselt beim Drücken von <code>*</code> ins (Teilnehmer-
          oder Administrator-)Menü.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>t</code></term>

        <listitem>
          <simpara>Aktiviert den Nur-Sprechen-Modus (nur reden, nicht
          hören).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>T</code></term>

        <listitem>
          <simpara>Aktiviert die Sprecher-Erkennung (wird zum
          Manager-Inferface gesendet und in der MeetMe-Liste im CLI
          angezeigt).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>v</code></term>

        <listitem>
          <simpara>Aktiviert den Video-Modus (bisher ohne Funktion).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>w</code></term>

        <listitem>
          <simpara>Wartet, bis ein gekennzeichneter Teilnehmer (siehe
          <code>A</code>) die Konferenz betritt. Bis dahin hören alle
          Teilnehmer Wartemusik.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>x</code></term>

        <listitem>
          <simpara>Schließt die Konferenz, wenn sie vom letzten
          gekennzeichneten Teilnehmer (siehe <code>A</code>) verlassen
          wird.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>X</code></term>

        <listitem>
          <simpara>Ermöglicht es dem Teilnehmer, die Konferenz durch Eingabe
          einer einziffrigen Extension im Kontext
          <code>${MEETME_EXIT_CONTEXT}</code> zu verlassen, oder durch Eingabe
          der Nummer einer Extension des aktuellen Kontexts, falls diese
          Variable nicht definiert ist.</simpara>
        </listitem>
      </varlistentry>
    </variablelist>

    <simpara>Die Option <code>X</code> funktioniert nicht zusammen mit
    <code>p</code> oder <code>s</code>.</simpara>

    <simpara>Verwenden Sie <code>e</code> (oder <code>E</code>) zusammen mit
    <code>d</code> (oder <code>D</code>), um dynamisch einen neuen
    Konferenzraum zu eröffnen, wobei Asterisk automatisch die
    <code>KonferenzNr</code> festlegt. Sie müssen dann natürlich den anderen
    Teilnehmern die Nummer mitteilen oder entsprechende Dialplan-Logik
    einsetzen.</simpara>

    <note>
      <para>Mit <code>d</code> oder <code>D</code> werden
      <emphasis>dynamisch</emphasis> Konferenzräume angelegt, in der
      <filename>meetme.conf</filename> können sie
      <emphasis>statisch</emphasis> definiert werden.</para>
    </note>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
; den Anrufer in Konferenzraum 333 schicken (mit der PIN 1234):yyy123yyysw
exten =&gt; 123,n,MeetMe(333,DpM,1234)yyy123yyysw</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-meetmeadmin" />, <xref
      linkend="applikationen-meetmecount" /></para>
    </formalpara>

    <formalpara>
      <title>Befehle im CLI</title>

      <para>Diese Befehle stehen im CLI zur Verfügung, um MeetMe-Konferenzen
      zu verwalten (dabei ist die <code>TeilnehmerNr</code> die in der Liste
      angezeigte Nummer des Teilnehmers):<variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><code>MeetMe</code></term>

            <listitem>
              <simpara>Listet alle Konferenzen auf.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe list
            <replaceable>KonferenzNr</replaceable></code></term>

            <listitem>
              <simpara>Listet die Teilnehmer einer Konferenz auf.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe kick <replaceable>KonferenzNr</replaceable>
            <replaceable>TeilnehmerNr</replaceable></code></term>

            <listitem>
              <simpara>Wirft einen Teilnehmer aus der Konferenz.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe kick
            <replaceable>KonferenzNr</replaceable></code></term>

            <listitem>
              <simpara>Wirft alle Teilnehmer aus der Konferenz.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe lock
            <replaceable>KonferenzNr</replaceable></code></term>

            <listitem>
              <simpara>Sperrt eine Konferenz, so dass keine Teilnehmer mehr
              aufgenommen werden.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe unlock
            <replaceable>KonferenzNr</replaceable></code></term>

            <listitem>
              <simpara>Hebt eine Konferenz-Sperre (s.o.) wieder auf.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe mute <replaceable>KonferenzNr</replaceable>
            <replaceable>TeilnehmerNr</replaceable></code></term>

            <listitem>
              <simpara>Schaltet einen Teilnehmer stumm.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe unmute <replaceable>KonferenzNr</replaceable>
            <replaceable>TeilnehmerNr</replaceable></code></term>

            <listitem>
              <simpara>Hebt die Stummschaltung eines Teilnehmers (s.o.) wieder
              auf.</simpara>
            </listitem>
          </varlistentry>
        </variablelist></para>
    </formalpara>
  </section>

  <section id="applikationen-meetmeadmin">
    <title><code>MeetMeAdmin()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MeetMeAdmin()</code></secondary>
    </indexterm>

    <simpara>Administration von MeetMe-Konferenzen</simpara>

    <synopsis>MeetMeAdmin(<replaceable>KonferenzNr</replaceable>,<replaceable>Befehl</replaceable>[,<replaceable>TeilnehmerNr</replaceable>])</synopsis>

    <para>Führt den angegebenen MeetMe-Administrationsbefehl in der
    angegebenen Konferenz aus. Der Befehl kann einer der folgenden sein (Die
    <code>TeilnehmerNr</code> wird nur für den Befehl <code>k</code>
    benötigt.): <variablelist termlength="3">
        <varlistentry>
          <term><code>K</code></term>

          <listitem>
            <simpara>Wirft alle Teilnehmer aus der Konferenz.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>k</code></term>

          <listitem>
            <simpara>Wirft den Teilnehmer mit der angegebenen
            <code>TeilnehmerNr</code> aus der Konferenz</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>e</code></term>

          <listitem>
            <simpara>Wirft den letzten Teilnehmer, der sich zu der Konferenz
            verbunden hat, raus</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>L</code></term>

          <listitem>
            <simpara>Sperrt die Konferenz (d.h. keine neuen
            Teilnehmer)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>l</code></term>

          <listitem>
            <simpara>Entsperrt die Konferenz.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>M</code></term>

          <listitem>
            <simpara>Schaltet die Konferenz stumm.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>m</code></term>

          <listitem>
            <simpara>Hebt die Stummschaltung (durch <code>M</code>)
            auf</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>N</code></term>

          <listitem>
            <simpara>Schaltet alle Teilnehmer außer dem Administrator
            stumm</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>n</code></term>

          <listitem>
            <simpara>Hebt die Stummschaltung (durch <code>N</code>)
            auf</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>; Konferenz 333 stummschalten:yyy123yyysw
exten =&gt; 123,1,MeetMeAdmin(333,M)yyy123yyysw
yyy123yyysw
; Teilnehmer 3 aus der Konferenz 333 kicken:yyy123yyysw
exten =&gt; 123,1,MeetMeAdmin(333,k,3)yyy123yyysw</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-meetme" />, <xref
      linkend="applikationen-meetmecount" /></para>
    </formalpara>
  </section>

  <section id="applikationen-meetmecount">
    <title><code>MeetMeCount()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MeetMeCount()</code></secondary>
    </indexterm>

    <simpara>Zählt die Teilnehmer einer MeetMe-Konferenz.</simpara>

    <synopsis>MeetMeCount(<replaceable>KonferenzNr</replaceable>[,<replaceable>Variablenname</replaceable>])</synopsis>

    <simpara>Spielt die Anzahl der Teilnehmer in der MeetMe-Konferenz ab.
    Falls eine Variable angegeben ist, wird der Abspielvorgang übersprungen
    und die Anzahl in diese Variable geschrieben.</simpara>

    <simpara>Liefert bei Erfolg 0 zurück, bei einem Fehler -1</simpara>

    <simpara>Zählt die Teilnehmer in Konferenz 501, und weist diese Zahl
    <code>${COUNT}</code> zu.</simpara>

    <programlisting>; die Teilnehmerzahl der Konferenz 333 in ${anzahl} speichern:yyy123yyysw
exten =&gt; 333,1,MeetMeCount(123,anzahl)yyy123yyysw</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-meetme" />, <xref
      linkend="applikationen-meetmeadmin" /></para>
    </formalpara>
  </section>

  <section id="applikationen-milliwatt">
    <title><code>Milliwatt()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Milliwatt()</code></secondary>
    </indexterm>

    <simpara>Erzeugt einen 1000-Hz-Ton.</simpara>

    <synopsis>Milliwatt()</synopsis>

    <simpara>Erzeugt einen konstanten 1000-Hz-Ton bei 0 dbm (u-law). Diese
    Anwendung wird häufig verwendet, um die Audioeigenschaften eines
    bestimmten Channels zu testen. Allerdings ist die Bezeichnung etwas
    irreführend, sinnvoller schiene <quote>Kilohertz()</quote>.</simpara>

    <programlisting>; einen 1000-Hz-Ton erzeugen:yyy123yyysw
exten =&gt; 123,1,Milliwatt()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Milliwatt' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Generate a Constant 1000Hz tone at 0dbm (mu-law)yyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Milliwatt(): Generate a Constant 1000Hz tone at 0dbm (mu-law)yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-echo" /></para>
    </formalpara>
  </section>

  <section id="applikationen-mixmonitor">
    <title><code>MixMonitor()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MixMonitor()</code></secondary>
    </indexterm>

    <simpara>Schneidet das Gespräch auf dem aktuellen Channel mit (eine
    Datei)</simpara>

    <synopsis>MixMonitor(<replaceable>Basisname</replaceable>.<replaceable>Format</replaceable>[,<replaceable>Optionen</replaceable>[,<replaceable>Befehl</replaceable>]])</synopsis>

    <simpara>Startet die Audio-Aufzeichnung des aktuellen Channels. Dabei
    werden im im Gegensatz zu <code>Monitor()</code> direkt beide Kanäle zu
    einer Datei gemischt.</simpara>

    <para>Optionen:<variablelist termlength="6">
        <varlistentry>
          <term><code>a</code></term>

          <listitem>
            <simpara>Hängt den Audio-Stream an eine bestehende Datei
            an.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>b</code></term>

          <listitem>
            <simpara>Startet die Aufnahme erst, nachdem der Anruf mit einem
            anderen Channel verbunden wurde, also nachdem z.B. durch
            <code>Dial()</code> tatsächlich ein Gespräch zustande
            kommt.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>v(<replaceable>x</replaceable>)</code></term>

          <listitem>
            <simpara>Passt die eingehende Lautstärke um Faktor <code>x</code>
            an (-4 bis 4).</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>V(<replaceable>x</replaceable>)</code></term>

          <listitem>
            <simpara>Passt die ausgehende Lautstärke um Faktor <code>x</code>
            an (-4 bis 4).</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>W(<replaceable>x</replaceable>)</code></term>

          <listitem>
            <simpara>Passt die eingehende und ausgehende Lautstärke um Faktor
            <code>x</code> an (-4 bis 4).</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara><code>Befehl</code> wird (falls angegeben) nach der Aufzeichnung
    ausgeführt. Die Variable <code>${MIXMONITOR_FILENAME}</code> wird auf den
    Namen der aufgezeichneten Datei gesetzt.</simpara>

    <simpara>Beachten Sie auch die Hinweise bei
    <code>Monitor()</code>.</simpara>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'MixMonitor' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Record a call and mix the audio during the recordingyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  MixMonitor(&lt;file&gt;.&lt;ext&gt;[|&lt;options&gt;[|&lt;command&gt;]])yyy123yyysw
yyy123yyysw
Records the audio on the current channel to the specified file.yyy123yyysw
If the filename is an absolute path, uses that path, otherwiseyyy123yyysw
creates the file in the configured monitoring directory fromyyy123yyysw
asterisk.conf.yyy123yyysw
yyy123yyysw
Valid options:yyy123yyysw
 a      - Append to the file instead of overwriting it.yyy123yyysw
 b      - Only save audio to the file while the channel is bridged.yyy123yyysw
          Note: does not include conferences.yyy123yyysw
 v(&lt;x&gt;) - Adjust the heard volume by a factor of &lt;x&gt; (range -4 to 4)yyy123yyysw
 V(&lt;x&gt;) - Adjust the spoken volume by a factor of &lt;x&gt; (range -4 to 4)yyy123yyysw
 W(&lt;x&gt;) - Adjust the both heard and spoken volumes by a factor of &lt;x&gt;yyy123yyysw
         (range -4 to 4)yyy123yyysw
yyy123yyysw
&lt;command&gt; will be executed when the recording is overyyy123yyysw
Any strings matching ^{X} will be unescaped to ${X} and yyy123yyysw
all variables will be evaluated at that time.yyy123yyysw
The variable MIXMONITOR_FILENAME will contain the filename used to record.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-monitor" /></para>
    </formalpara>
  </section>

  <section id="applikationen-monitor">
    <title><code>Monitor()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Monitor()</code></secondary>
    </indexterm>

    <simpara>Schneidet das Gespräch auf dem aktuellen Channel mit (zwei
    Dateien)</simpara>

    <synopsis>Monitor([<replaceable>Format</replaceable>[,<replaceable>Basisname</replaceable>[,<replaceable>Optionen</replaceable>]]])</synopsis>

    <simpara>Startet die Audio-Aufzeichnung des aktuellen Channels. Die auf
    dem Channel eingehenden und ausgehenden Sprachpakete werden in seperaten
    Dateien aufgezeichnet, bis der Channel aufgelegt oder die Überwachung
    durch die <code>StopMonitor()</code>-Anwendung beendet wird.</simpara>

    <simpara><code>Format</code> gibt das Dateiformat (= Dateiendung) an. Ohne
    Angabe wird <code>wav</code> verwendet.</simpara>

    <simpara><code>Basisname</code> gibt den Basis-Dateinamen an (also ohne
    Dateiendung). Ohne Angabe wird der Name aus dem Channelnamen und einer
    Nummer zusammengesetzt, z.B. <code>IAX2[foo@bar]-3</code>. Das eingehende
    Audio wird in
    <filename><replaceable>Basisname</replaceable>-in.<replaceable>Format</replaceable></filename>,
    das ausgehende in
    <filename><replaceable>Basisname</replaceable>-out.<replaceable>Format</replaceable></filename>
    im Verzeichnis <filename>/var/spool/asterisk/monitor/</filename>
    gespeichert.</simpara>

    <para>Eine der beiden Optionen kann angegeben werden: <variablelist
        termlength="3">
        <varlistentry>
          <term><code>m</code></term>

          <listitem>
            <simpara>Nach dem Beenden der Aufnahme werden die Dateien für In
            und Out in eine gemischt und die ursprünglichen Dateien gelöscht.
            Dazu muss das Programm <command>soxmix</command> aus dem Paket
            <command>sox</command> installiert sein<footnote>
                <simpara><ulink
                url="http://sox.sourceforge.net/">http://sox.sourceforge.net/</ulink>,
                siehe Beschreibung in <xref linkend="musiconhold.conf" />,
                mindestens Version 12.17.7, Ihre installierte Version erfahren
                Sie mit <command>soxmix -help</command></simpara>
              </footnote>. Falls die Variable <code>${MONITOR_EXEC}</code>
            definiert ist, wird statt <command>soxmix</command> die angegebene
            Anwendung ausgeführt, und die ursprünglichen Dateien für beide
            Richtungen nicht automatisch gelöscht<footnote>
                <para>abhängig von der Asterisk-Version; ältere Versionen
                löschen nicht automatisch</para>
              </footnote>. <command>soxmix</command> (bzw.
            <command>${MONITOR_EXEC}</command>) werden drei Parameter
            übergeben, die beiden Aufzeichnungsdateien und der Dateiname für
            die zu erstellende gemischte Datei, welcher dem Basisnamen ohne
            <code>-in</code>/<code>-out</code> entspricht. Ist
            <code>${MONITOR_EXEC_ARGS}</code> gesetzt, werd der Inhalt als
            zusätzliche Argumente an <code>${MONITOR_EXEC}</code>
            übergeben.</simpara>

            <important>
              <para>Bei der Verwendung von <command>soxmix</command> ist zu
              beachten, dass <command>soxmix</command> ohne explizite Angabe
              der Dateitypen diese aus den Endungen erkennt. <code>gsm</code>
              und <code>wav</code> bereiten z.B. keine Probleme, aber für die
              Formate <code>alaw</code> und <code>ulaw</code> werden als
              Endungen <code>al</code> bzw. <code>ul</code> erwartet. Lesen
              Sie also ggf. die Anleitung von sox (/soxmix) und verwenden Sie
              <code>${MONITOR_EXEC_ARGS}</code> oder benutzen Sie ein kleines
              Wrapper-Skript als <code>${MONITOR_EXEC}</code>, das die
              Datei-Parameter liest und soxmix mit Angabe der Typen
              aufruft.</para>
            </important>

            <note>
              <simpara>Wenn Sie eine kombinierte Aufzeichnung wollen, ist
              meist <code>MixMonitor()</code> die bessere Alternative, da es
              die Kanäle direkt während der Aufnahme mischt und dadurch
              Lastspitzen am Ende der Aufzeichnung vermeidet.</simpara>
            </note>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>b</code></term>

          <listitem>
            <simpara>Startet die Aufnahme erst, nachdem ein Anruf zu einem
            anderen Channel verbunden wurde, also nachdem z.B. durch
            <code>Dial()</code> tatsächlich ein Gespräch zustande
            kommt.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Gibt 0 bei Erfolg zurück oder -1 bei einem Fehler
    (Überwachungsdateien konnten nicht geöffnet werden, Channel wird bereits
    aufgezeichnet, ...)</simpara>

    <programlisting>; das Gespräch aufzeichnen und hinterher die Audio-Kanäle mixen:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Monitor(gsm,,mb)yyy123yyysw
exten =&gt; 123,n,SayDigits(123456789)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw
yyy123yyysw
; wie oben aber mit einem eigenen Wrapper, der soxmix aufruft:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Set(MONITOR_EXEC=/pfad/zu/mein-soxmix-wrapper.sh)yyy123yyysw
exten =&gt; 123,n,Monitor(gsm,,mb)yyy123yyysw
exten =&gt; 123,n,SayDigits(123456789)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw</programlisting>

    <important>
      <para>Stellen Sie vor dem Mitschneiden von Gesprächen sicher, dass die
      rechtlichen Voraussetzungen erfüllt sind. Meist müssen beide Teilnehmer
      von der Aufzeichnung informiert sein.<footnote>
          <simpara>siehe auch <ulink
          url="http://www.voip-info.org/wiki/view/Monitor+Recording+Legal+Issues">http://www.voip-info.org/wiki/view/Monitor+Recording+Legal+Issues</ulink></simpara>
        </footnote></para>
    </important>

    <note>
      <simpara>Einige Anwender, die viele (50-500) Gespräche gleichzeitig
      aufnehmen, berichten von <emphasis>stark</emphasis> verbesserter
      Performance, wenn man auf eine RAM-Disk aufzeichnet (weniger
      Such-Operationen) und die Dateien erst nach Gesprächsende auf die
      Festplatte (lokal oder gemountet) kopiert.</simpara>
    </note>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Monitor' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Monitor a channelyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Monitor([file_format[:urlbase]|[fname_base]|[options]]):yyy123yyysw
Used to start monitoring a channel. The channel's input and outputyyy123yyysw
voice packets are logged to files until the channel hangs up oryyy123yyysw
monitoring is stopped by the StopMonitor application.yyy123yyysw
  file_format  optional, if not set, defaults to "wav"yyy123yyysw
  fname_base   if set, changes the filename used to the one specified.yyy123yyysw
  options:yyy123yyysw
    m   - when the recording ends mix the two leg files into one andyyy123yyysw
          delete the two leg files.  If the variable MONITOR_EXEC is set, theyyy123yyysw
          application referenced in it will be executed instead ofyyy123yyysw
          soxmix and the raw leg files will NOT be deleted automatically.yyy123yyysw
          soxmix or MONITOR_EXEC is handed 3 arguments, the two leg filesyyy123yyysw
          and a target mixed file name which is the same as the leg file namesyyy123yyysw
          only without the in/out designator.yyy123yyysw
          If MONITOR_EXEC_ARGS is set, the contents will be passed on asyyy123yyysw
          additional arguements to MONITOR_EXECyyy123yyysw
          Both MONITOR_EXEC and the Mix flag can be set from theyyy123yyysw
          administrator interfaceyyy123yyysw
yyy123yyysw
    b   - Don't begin recording unless a call is bridged to another channelyyy123yyysw
yyy123yyysw
Returns -1 if monitor files can't be opened or if the channel is alreadyyyy123yyysw
monitored, otherwise 0.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-changemonitor" />, <xref
      linkend="applikationen-stopmonitor" />, <xref
      linkend="applikationen-mixmonitor" />, <xref
      linkend="applikationen-record" /></para>
    </formalpara>
  </section>

  <section id="applikationen-mp3player">
    <title><code>MP3Player()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MP3Player()</code></secondary>
    </indexterm>

    <simpara>Gibt eine MP3-Datei oder einen MP3-Stream wieder.</simpara>

    <synopsis>MP3Player(<replaceable>Dateiname</replaceable>)</synopsis>

    <simpara>Verwendet das Programm <code>mpg123</code><footnote>
        <simpara><ulink url="http://mpg123.org/">http://mpg123.org/</ulink>,
        <ulink
        url="http://sourceforge.net/projects/mpg123/">http://sourceforge.net/projects/mpg123/</ulink>,
        für MacOS X siehe auch <ulink
        url="http://sourceforge.net/projects/mosx-mpg123/">http://sourceforge.net/projects/mosx-mpg123/</ulink></simpara>
      </footnote>, um dem Anrufer eine MP3-Datei vorzuspielen. Der angegebene
    Dateiname kann auch eine URL sein. Der Anrufer kann die Wiedergabe durch
    Betätigung einer beliebigen Taste stoppen.</simpara>

    <simpara>Die richtige Version von <code>mpg123</code> muss installiert
    sein, damit diese Anwendung ordnungsgemäß funktioniert. Asterisk arbeitet
    momentan mit der Version 0.59r ideal.</simpara>

    <note>
      <simpara>Das häufig als Alternative installierte und auf
      <filename>mpg123</filename> verlinkte Programm <command>mpg321</command>
      funktioniert <emphasis>nicht</emphasis> einwandfrei.</simpara>
    </note>

    <simpara>Liefert -1, falls aufgelegt wird, sonst 0.</simpara>

    <programlisting>; lokale Datei spielen:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,MP3Player(test.mp3)yyy123yyysw
yyy123yyysw
; Datei von einer URL spielen:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,MP3Player(http://server.tld/test.mp3)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'MP3Player' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Play an MP3 file or streamyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  MP3Player(location) Executes mpg123 to play the given location,yyy123yyysw
which typically would be a filename or a URL. User can exit by pressingyyy123yyysw
any key on the dialpad, or by hanging up.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-musiconhold">
    <title><code>MusicOnHold()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MusicOnHold()</code></secondary>
    </indexterm>

    <simpara>Spielt endlos Wartemusik.</simpara>

    <synopsis>MusicOnHold(<replaceable>class</replaceable>)</synopsis>

    <simpara>Spielt die durch class spezifizierte Wartemusik, wie in
    <filename>musiconhold.conf</filename> konfiguriert. Wird
    <code>class</code> nicht angegeben, wird die Standardmusik-Klasse für
    diesen Channel verwendet. Um die Standardmusik-Klasse für einen Channel
    einzustellen, können Sie die Funktion <code>MUSICCLASS()</code>
    verwenden.</simpara>

    <simpara>Liefert -1, falls aufgelegt wird, ansonsten wird sie endlos
    ausgeführt.</simpara>

    <programlisting>; auf diese Extension könnte man Telefonverkäufer schicken:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,2,Playback(tt-allbusy)yyy123yyysw
exten =&gt; 123,3,MusicOnHold(default)yyy123yyysw
exten =&gt; 123,4,Goto(2)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'MusicOnHold' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Play Music On Hold indefinitelyyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
MusicOnHold(class): Plays hold music specified by class.  If omitted, the defaultyyy123yyysw
music source for the channel will be used. Set the default yyy123yyysw
class with the SetMusicOnHold() application.yyy123yyysw
Returns -1 on hangup.yyy123yyysw
Never returns otherwise.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-waitmusiconhold" />, <xref
      linkend="funktionen-musicclass" /></para>
    </formalpara>
  </section>

  <section id="applikationen-nbscat">
    <title><code>NBScat()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>NBScat()</code></secondary>
    </indexterm>

    <simpara>Wiedergabe eines lokalen NBS-Streams</simpara>

    <synopsis>NBScat()</synopsis>

    <simpara>Verwendet das <code>nbscat8k</code>-Programm, um den lokalen NBS
    (Network Broadcast Sound)-Stream zu hören. (Schauen Sie sich das
    <filename>nbs</filename>-Modul in Digiums CVS-Server an, um weitere
    Informationen zu erhalten.) Der Anrufer kann durch Drücken einer
    beliebigen Taste aussteigen.</simpara>

    <simpara>Die Anwendung liefert -1, falls aufgelegt wird, ansonsten wird
    sie endlos ausgeführt.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,NBScat()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'NBScat' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Play an NBS local streamyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  NBScat: Executes nbscat to listen to the local NBS stream.yyy123yyysw
User can exit by pressing any keyyyy123yyysw
.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-nocdr">
    <title><code>NoCDR()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>NoCDR()</code></secondary>
    </indexterm>

    <simpara>Unterdrückt das CDR.</simpara>

    <synopsis>NoCDR()</synopsis>

    <simpara>Unterdrückt die Erstellung eines Anrufprotokolls (Call Detail
    Record) für den aktuellen Anruf.</simpara>

    <programlisting>; für Anrufe an 0123-45678 kein CDR:yyy123yyysw
exten =&gt; 5551212,1,Answer()yyy123yyysw
exten =&gt; 5551212,n,NoCDR()yyy123yyysw
exten =&gt; 5551212,n,Dial(Zap/4/012345678)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'NoCDR' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Tell Asterisk to not maintain a CDR for the current callyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  NoCDR(): This application will tell Asterisk not to maintain a CDR for theyyy123yyysw
current call.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-forkcdr" /></para>
    </formalpara>
  </section>

  <section id="applikationen-noop">
    <title><code>NoOp()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>NoOp()</code></secondary>
    </indexterm>

    <simpara>Tut nichts (no operation).</simpara>

    <synopsis>NoOp(<replaceable>Text</replaceable>)</synopsis>

    <simpara>Diese Anwendung tut nichts - dem Namen nach. Mit
    <code>NoOp()</code> kann man aber Text auf dem Asterisk-CLI ausgeben -
    eine zum Debugging sehr nützliche Eigenschaft.</simpara>

    <simpara>Sie müssen den Text nicht in Anführungszeichen betten. Stehen
    Anführungszeichen innerhalb der Klammern, werden diese auf der Konsole
    ausgegeben.</simpara>

    <important>
      <para>Die Ausgabe von <code>NoOp()</code> auf dem CLI erfolgt erst ab
      dem Verbose-Level 3. Dieser kann im CLI mit <command>set verbose
      3</command> gesetzt werden.</para>
    </important>

    <programlisting>exten =&gt; 123,1,NoOp(Caller-ID: ${CALLERID})yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'NoOp' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Do Nothingyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  NoOp(): This applicatiion does nothing. However, it is useful for debuggingyyy123yyysw
purposes. Any text that is provided as arguments to this application can beyyy123yyysw
viewed at the Asterisk CLI. This method can be used to see the evaluations ofyyy123yyysw
variables or functions without having any effect.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-park">
    <title><code>Park()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Park()</code></secondary>
    </indexterm>

    <simpara>Parkt den aktuellen Anruf.</simpara>

    <synopsis>Park(<replaceable>Extension</replaceable>)</synopsis>

    <simpara>Parkt den aktuellen Anruf (typischerweise in Kombination mit
    einer beaufsichtigten Übertragung, um die <quote>Parkplatznummer</quote>
    zu bestimmen). Diese Anwendung ist intern stets registriert und muss nicht
    explizit im Wählplan eingefügt werden, jedoch müssen Sie den
    <code>parkedcalls</code>-Kontext mit der Zeile <code>include =&gt;
    parkedcalls</code> einbinden. Die Parkkonfiguration wird in
    <filename>features.conf</filename> vorgenommen.</simpara>

    <programlisting>; den Anruf auf 701 parken:yyy123yyysw
include =&gt; parkedcallsyyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Park(701)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Park' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Park yourselfyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Park():Used to park yourself (typically in combination with a supervisedyyy123yyysw
transfer to know the parking space). This application is alwaysyyy123yyysw
registered internally and does not need to be explicitly addedyyy123yyysw
into the dialplan, although you should include the 'parkedcalls'yyy123yyysw
context (or the context specified in features.conf).yyy123yyysw
yyy123yyysw
If you set the PARKINGEXTEN variable to an extension in youryyy123yyysw
parking context, park() will park the call on that extension, unlessyyy123yyysw
it already exists. In that case, execution will continue at nextyyy123yyysw
priority.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>12,17c12yyy123yyysw
&lt; context (or the context specified in features.conf).yyy123yyysw
&lt; yyy123yyysw
&lt; If you set the PARKINGEXTEN variable to an extension in youryyy123yyysw
&lt; parking context, park() will park the call on that extension, unlessyyy123yyysw
&lt; it already exists. In that case, execution will continue at nextyyy123yyysw
&lt; priority.yyy123yyysw
---yyy123yyysw
&gt; context.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-parkandannounce" />, <xref
      linkend="applikationen-parkedcall" /></para>
    </formalpara>
  </section>

  <section id="applikationen-parkandannounce">
    <title><code>ParkAndAnnounce()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ParkAndAnnounce()</code></secondary>
    </indexterm>

    <simpara>Parkt den aktuellen Anruf und macht ihn über den spezifizierten
    Channel bekannt.</simpara>

    <synopsis>ParkAndAnnounce(<replaceable>Template</replaceable>,<replaceable>Timeout</replaceable>,<replaceable>Channel</replaceable>[,<replaceable>Return-Kontext</replaceable>])</synopsis>

    <simpara>Parkt den aktuellen Anruf in dem dafür vorgesehenen Bereich (auf
    dem Parkplatz) und meldet ihn über den spezifizierten Channel.
    <code>Template</code> bezeichnet eine Liste von durch Kommas voneinander
    getrennten Dateien, die anzukündigen sind; das Wort <code>PARKED</code>
    wird durch die Parkplatznummer des Anrufs ersetzt. Der Parameter
    <code>Timeout</code> bestimmt die Zeit in Sekunden, nach deren Ablauf der
    Anruf zum <code>Return-Kontext</code> zurückkehrt. <code>Channel</code>
    bezeichnet den Channel, der anzurufen ist, um die Ankündigung zu machen
    (<code>Console/dsp</code> ruft die Konsole auf).
    <code>Return-Kontext</code> ist ein Label im <code>GoTo()</code>-Stil, um
    den Anruf nach der Beendigung zurückzubringen. Standardeinstellung hierfür
    ist n+1 im Kontext <code>Return-Kontext</code>.</simpara>

    <programlisting>include =&gt; parkedcallsyyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,ParkAndAnnounce(vm-youhave:a:pbx-transfer:at:vm-extension:PARKED,120,Console/dsp)yyy123yyysw
exten =&gt; 123,n,Playback(vm-nobodyavail)yyy123yyysw
exten =&gt; 123,n,Playback(vm-goodbye)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ParkAndAnnounce' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Park and Announceyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  ParkAndAnnounce(announce:template|timeout|dial|[return_context]):yyy123yyysw
Park a call into the parkinglot and announce the call to another channel.yyy123yyysw
yyy123yyysw
announce template: Colon-separated list of files to announce.  The word PARKEDyyy123yyysw
                   will be replaced by a say_digits of the extension in whichyyy123yyysw
                   the call is parked.yyy123yyysw
timeout:           Time in seconds before the call returns into the returnyyy123yyysw
                   context.yyy123yyysw
dial:              The app_dial style resource to call to make theyyy123yyysw
                   announcement.  Console/dsp calls the console.yyy123yyysw
return_context:    The goto-style label to jump the call back into afteryyy123yyysw
                   timeout.  Default &lt;priority+1&gt;.yyy123yyysw
yyy123yyysw
The variable ${PARKEDAT} will contain the parking extension into which theyyy123yyysw
call was placed.  Use with the Local channel to allow the dialplan to makeyyy123yyysw
use of this information.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>9,23c9,14yyy123yyysw
&lt; Park a call into the parkinglot and announce the call to another channel.yyy123yyysw
&lt; yyy123yyysw
&lt; announce template: Colon-separated list of files to announce.  The word PARKEDyyy123yyysw
&lt;                    will be replaced by a say_digits of the extension in whichyyy123yyysw
&lt;                    the call is parked.yyy123yyysw
&lt; timeout:           Time in seconds before the call returns into the returnyyy123yyysw
&lt;                    context.yyy123yyysw
&lt; dial:              The app_dial style resource to call to make theyyy123yyysw
&lt;                    announcement.  Console/dsp calls the console.yyy123yyysw
&lt; return_context:    The goto-style label to jump the call back into afteryyy123yyysw
&lt;                    timeout.  Default &lt;priority+1&gt;.yyy123yyysw
&lt; yyy123yyysw
&lt; The variable ${PARKEDAT} will contain the parking extension into which theyyy123yyysw
&lt; call was placed.  Use with the Local channel to allow the dialplan to makeyyy123yyysw
&lt; use of this information.yyy123yyysw
---yyy123yyysw
&gt; Park a call into the parkinglot and announce the call over the console.yyy123yyysw
&gt; announce template: colon separated list of files to announce, the word PARKEDyyy123yyysw
&gt;                    will be replaced by a say_digits of the ext the call is parked inyyy123yyysw
&gt; timeout: time in seconds before the call returns into the return context.yyy123yyysw
&gt; dial: The app_dial style resource to call to make the announcement. Console/dsp calls the console.yyy123yyysw
&gt; return_context: the goto style label to jump the call back into after timeout. default=prio+1yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-park" />, <xref
      linkend="applikationen-parkedcall" /></para>
    </formalpara>
  </section>

  <section id="applikationen-parkedcall">
    <title><code>ParkedCall()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ParkedCall()</code></secondary>
    </indexterm>

    <simpara>Beantwortet einen geparkten Anruf.</simpara>

    <synopsis>ParkedCall(<replaceable>Extension</replaceable>)</synopsis>

    <simpara>Verbindet den Anrufer mit dem auf dem durch
    <code>Extension</code> identifizierten Parkplatz geparkten Anruf. Diese
    Anwendung ist intern ständig registriert und muss daher dem Wählplan nicht
    explizit hinzugefügt werden. Sie sollten jedoch den
    <code>parkedcalls</code>-Kontext einbinden.</simpara>

    <programlisting>; den Anruf auf "Parkplatz" 701 wiederaufnehmen:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,ParkedCall(701)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ParkedCall' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Answer a parked callyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
ParkedCall(exten):Used to connect to a parked call.  This application is alwaysyyy123yyysw
registered internally and does not need to be explicitly addedyyy123yyysw
into the dialplan, although you should include the 'parkedcalls'yyy123yyysw
context.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-park" />, <xref
      linkend="applikationen-parkandannounce" /></para>
    </formalpara>
  </section>

  <section id="applikationen-pausequeuemember">
    <title><code>PauseQueueMember()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>PauseQueueMember()</code></secondary>
    </indexterm>

    <simpara>Pausiert ein Warteschlangenmitglied, so dass es keine Anrufe
    empfangen kann.</simpara>

    <synopsis>PauseQueueMember([<replaceable>Schlange</replaceable>],<replaceable>Interface</replaceable>[,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Pausiert die Durchstellung von Anrufen zu einem
    Warteschlangenmitglied. Das spezifizierte Interface wird in der gegebenen
    Warteschlange zeitweilig angehalten. Dadurch wird verhindert, dass Anrufe
    aus der Warteschlange zu diesem Interface durchgestellt werden, bis es
    nicht wieder freigegeben wurde durch <code>UnpauseQueueMember()</code>
    oder das Manager-Interface. Wenn kein Warteschlangenname angegeben ist,
    wird das Interface in jeder Warteschlange, in der es ein Mitglied ist,
    angehalten. Befindet sich das Interface nicht in der benannten
    Warteschlange, oder wenn keine Warteschlange angegeben und das Interface
    nicht Mitglied irgendeiner Warteschlange ist, wird - bei Angabe der Option
    <code>j</code> - die Ausführung bei Priorität n+101 fortgesetzt, falls
    diese existiert.</simpara>

    <simpara>Gibt -1 zurück, falls das Interface nicht gefunden wurde oder
    keine Extension existiert, zu der gesprungen werden kann, sonst 0. Setzt
    die Channel-Variable <code>PQMSTATUS</code> auf <code>PAUSED</code>
    (pausiert) oder <code>NOTFOUND</code> (nicht gefunden).</simpara>

    <programlisting>; wenn *111002 gewählt wird, wird Agent/1002 auf allen Schlangen pausiert:yyy123yyysw
exten =&gt; *11ZXXX,1,PauseQueueMember(,Agent/${EXTEN:3})yyy123yyysw
yyy123yyysw
; mit *121002 wird Agent/1002 wieder aktiviert:yyy123yyysw
exten =&gt; *12ZXXX,1,UnpauseQueueMember(,Agent/${EXTEN:3})yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'PauseQueueMember' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Pauses a queue memberyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
   PauseQueueMember([queuename]|interface[|options]):yyy123yyysw
Pauses (blocks calls for) a queue member.yyy123yyysw
The given interface will be paused in the given queue.  This preventsyyy123yyysw
any calls from being sent from the queue to the interface until it isyyy123yyysw
unpaused with UnpauseQueueMember or the manager interface.  If noyyy123yyysw
queuename is given, the interface is paused in every queue it is ayyy123yyysw
member of.  If the interface is not in the named queue, or if no queueyyy123yyysw
is given and the interface is not in any queue, it will jump toyyy123yyysw
priority n+101, if it exists and the appropriate options are set.yyy123yyysw
The application will fail if the interface is not found and no extensionyyy123yyysw
to jump to exists.yyy123yyysw
The option string may contain zero or more of the following characters:yyy123yyysw
       'j' -- jump to +101 priority when appropriate.yyy123yyysw
  This application sets the following channel variable upon completion:yyy123yyysw
     PQMSTATUS      The status of the attempt to pause a queue member as ayyy123yyysw
                     text string, one ofyyy123yyysw
           PAUSED | NOTFOUNDyyy123yyysw
Example: PauseQueueMember(|SIP/3000)yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-unpausequeuemember" /></para>
    </formalpara>
  </section>

  <section id="applikationen-perl">
    <title><code>Perl()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Perl()</code></secondary>
    </indexterm>

    <indexterm>
      <primary><code>res_perl</code></primary>
    </indexterm>

    <simpara>Führt eine Perl-Funktion oder ein Perl-Skript aus.</simpara>

    <synopsis>Perl(<replaceable>Funktionsname</replaceable>[:<replaceable>Arg1</replaceable>[:<replaceable>Arg2</replaceable>[:<replaceable>...</replaceable>]]])</synopsis>

    <synopsis>Perl(Loadfile:<replaceable>Dateiname</replaceable>[:<replaceable>Arg1</replaceable>[:<replaceable>Arg2</replaceable>[:<replaceable>...</replaceable>]]])</synopsis>

    <important>
      <simpara>Für <code>Perl()</code> muss das Modul
      <code>res_perl</code><footnote>
          <simpara>von <ulink
          url="http://www.pbxfreeware.org/">http://www.pbxfreeware.org/</ulink>,
          Informationen zur Benutzung auf <ulink
          url="http://www.voip-info.org/wiki-Asterisk+cmd+Perl">http://www.voip-info.org/wiki-Asterisk+cmd+Perl</ulink></simpara>
        </footnote> kompiliert und geladen sein! Alternativ können mit
      <code>System()</code> Perl-Skripte ausgeführt werden.</simpara>
    </important>

    <simpara>Führt eine Funktion aus dem Paket <code>Asterisk::Embed</code> in
    <filename>/usr/local/res_perl/modules/asterisk_init.pm</filename> oder ein
    Perl-Skript (z.B. <filename>demo.pl</filename>) aus dem Verzeichnis
    <filename>/usr/local/res_perl/apps/</filename> aus, was im Vergleich zum
    Aufruf auf der Shell den Vorteil hat, dass der Interpreter nicht jedesmal
    neu geladen wird.</simpara>

    <simpara><code>res_perl</code> ist möglicherweise nicht zu aktuellen
    Asterisk-Versionen kompatibel und wird in diesem Buch nicht weiter
    beschrieben.</simpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-system" />, <xref
      linkend="applikationen-agi" /></para>
    </formalpara>
  </section>

  <section id="applikationen-php">
    <title><code>PHP()</code></title>

    <indexterm>
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>PHP()</code></secondary>
    </indexterm>

    <indexterm>
      <primary><code>res_php</code></primary>
    </indexterm>

    <simpara>Führt ein PHP-Skript aus.</simpara>

    <synopsis>PHP(<replaceable>Dateiname</replaceable>[|<replaceable>Arg1</replaceable>[|<replaceable>Arg2</replaceable>[|<replaceable>...</replaceable>]]])</synopsis>

    <important>
      <para>Für <code>PHP()</code> muss das Modul
      <code>res_php</code><footnote>
          <simpara>von <ulink
          url="http://eder.us/projects/asterisk_php/">http://eder.us/projects/asterisk_php/</ulink>,
          Informationen zur Benutzung auf <ulink
          url="http://www.voip-info.org/wiki-Asterisk+cmd+PHP">http://www.voip-info.org/wiki-Asterisk+cmd+PHP</ulink></simpara>
        </footnote> kompiliert und geladen sein! Alternativ können mit
      <code>System()</code> PHP-Skripte ausgeführt werden.</para>
    </important>

    <simpara>Führt ein PHP-Skript aus, was im Vergleich zum Aufruf auf der
    Shell den Vorteil hat, dass der Interpreter nicht jedesmal neu geladen
    wird.</simpara>

    <simpara><code>res_php</code> ist z.Zt. nicht mit aktuellen
    Asterisk-Versionen kompatibel und wird in diesem Buch nicht weiter
    beschrieben.</simpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-system" />, <xref
      linkend="applikationen-agi" /></para>
    </formalpara>
  </section>

  <section id="applikationen-playback">
    <title><code>Playback()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Playback()</code></secondary>
    </indexterm>

    <simpara>Spielt dem Anrufer eine Audiodatei vor.</simpara>

    <synopsis>Playback(<replaceable>Dateiname</replaceable>[,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Spielt dem Anrufer die Audiodatei <code>Dateiname</code> (aus dem
    Verzeichnis <filename>/var/lib/asterisk/sounds/</filename>) vor. Der
    Dateiname enthält keine Dateiendung, damit Asterisk automatisch die
    Audiodatei mit dem niedrigsten Konvertierungsaufwand auswählen kann.
    Keine, eine oder mehr Optionen können hinzugefügt werden.</simpara>

    <simpara>Die Option <code>skip</code> bewirkt, dass die Wiedergabe der
    Nachricht übersprungen wird, wenn sich der Channel nicht im Up-Status
    befindet.</simpara>

    <simpara>Normalerweise wird der Channel beantwortet, bevor die Audiodatei
    wiedergegeben wird, es sei denn, <code>noanswer</code> ist angegeben.
    (Nicht alle Kanäle unterstützen die Wiedergabe von Nachrichten, wenn sie
    noch aufgelegt sind.)</simpara>

    <simpara>Liefert -1 zurück, wenn der Channel aufgelegt wurde. Wenn die
    Datei nicht existiert, wird zur Priorität n+101 übergegangen, falls diese
    existiert.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Playback(tt-weasels)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Playback' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Play a fileyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Playback(filename[&amp;filename2...][|option]):  Plays back given filenames (do not putyyy123yyysw
extension). Options may also be included following a pipe symbol. The 'skip'yyy123yyysw
option causes the playback of the message to be skipped if the channelyyy123yyysw
is not in the 'up' state (i.e. it hasn't been  answered  yet). If 'skip' is yyy123yyysw
specified, the application will return immediately should the channel not beyyy123yyysw
off hook.  Otherwise, unless 'noanswer' is specified, the channel willyyy123yyysw
be answered before the sound is played. Not all channels support playingyyy123yyysw
messages while still on hook. If 'j' is specified, the applicationyyy123yyysw
will jump to priority n+101 if present when a file specified to be playedyyy123yyysw
does not exist.yyy123yyysw
This application sets the following channel variable upon completion:yyy123yyysw
 PLAYBACKSTATUS    The status of the playback attempt as a text string, one ofyyy123yyysw
               SUCCESS | FAILEDyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-background" /></para>
    </formalpara>
  </section>

  <section id="applikationen-playtones">
    <title><code>Playtones()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Playtones()</code></secondary>
    </indexterm>

    <simpara>Wiedergabe einer Tonliste.</simpara>

    <synopsis>Playtones(<replaceable>Tonliste</replaceable>)</synopsis>

    <simpara>Spielt eine Liste von Tönen ab. Die Ausführung wird
    augenblicklich mit dem nächsten Schritt fortgesetzt, während die Töne
    weiter abgespielt werden. <code>Tonliste</code> ist entweder ein Tonname,
    der in der <filename>indications.conf</filename> definiert ist, oder eine
    Liste von Tonfrequenzen und -dauern. Für eine Beschreibung der
    Spezifikation einer eigenen Tonliste siehe
    <filename>indications.conf</filename>.</simpara>

    <simpara>Verwendet die <code>StopPlaytones()</code>-Anwendung, um die
    Wiedergabe der Töne anzuhalten.</simpara>

    <programlisting>; 2 Sekunden Besetzt-, dann 2 Sekunden Stau-Signal spielen:yyy123yyysw
exten =&gt; 123,1,Playtones(busy)yyy123yyysw
exten =&gt; 123,n,Wait(2)yyy123yyysw
exten =&gt; 123,n,StopPlaytones()yyy123yyysw
exten =&gt; 123,n,Playtones(congestion)yyy123yyysw
exten =&gt; 123,n,Wait(2)yyy123yyysw
exten =&gt; 123,n,StopPlaytones()yyy123yyysw
exten =&gt; 123,n,Goto(1)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'PlayTones' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Play a tone listyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
PlayTones(arg): Plays a tone list. Execution will continue with the next step immediately,yyy123yyysw
while the tones continue to play.yyy123yyysw
Arg is either the tone name defined in the indications.conf configuration file, or a directlyyyy123yyysw
specified list of frequencies and durations.yyy123yyysw
See the sample indications.conf for a description of the specification of a tonelist.yyy123yyysw
yyy123yyysw
Use the StopPlayTones application to stop the tones playing.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-stopplaytones" />,
      <filename>indications.conf</filename>, <xref
      linkend="applikationen-busy" />, <xref
      linkend="applikationen-congestion" />, <xref
      linkend="applikationen-progress" />, <xref
      linkend="applikationen-ringing" /></para>
    </formalpara>
  </section>

  <section id="applikationen-privacymanager">
    <title><code>PrivacyManager()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>PrivacyManager()</code></secondary>
    </indexterm>

    <simpara>Verlangt die Eingabe der Telefonnummer eines Teilnehmers, falls
    keine Caller-ID-Informationen empfangen werden.</simpara>

    <synopsis>PrivacyManager([<replaceable>Versuche</replaceable>[,<replaceable>Länge</replaceable>[,<replaceable>Optionen</replaceable>]]])</synopsis>

    <simpara>Wird keine Caller-ID empfangen, wird der Channel beantwortet und
    der Anrufer aufgefordert, seine Telefonnummer einzugeben. Wird auf dem
    Channel eine Caller-ID empfangen, tut <code>PrivacyManager()</code>
    nichts.</simpara>

    <para>Dem Anrufer werden dabei <code>Versuche</code> Versuche (Default: 3)
    gewährt eine Telefonnummer mit mindestens <code>Länge</code> Stellen
    (Default: 10) einzugeben. Diese Default-Werte werden aus der Datei
    <filename>privacy.conf</filename> gelesen. Sie enthält die beiden
    folgenden Einträge: <variablelist termlength="12">
        <varlistentry>
          <term><code>maxretries</code></term>

          <listitem>
            <simpara>Gibt die Anzahl der Versuche an, die einem Anrufer zur
            Eingabe einer Caller-ID gewährt werden (Standard: 3).</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>minlength</code></term>

          <listitem>
            <simpara>Gibt die minimale erlaubte Anzahl von Ziffern in der
            eingegebenen Caller-ID-Nummer an (Standard: 10).</simpara>
          </listitem>
        </varlistentry>
      </variablelist>Wenn Sie nicht wollen, dass bei jedem Aufruf aus der
    Datei gelesen werden muss, geben Sie bei <code>PrivacyManager()</code>
    explizit Werte an.</para>

    <simpara>Mit der Option <code>j</code> wird zur Priorität n+101
    gesprungen, wenn der Anrufer nicht innerhalb der erlaubten Versuche eine
    Nummer der erforderlichen Länge eingibt.</simpara>

    <simpara>Die Channel-Variable <code>PRIVACYMGRSTATUS</code> wird entweder
    auf <code>SUCCESS</code> oder auf <code>FAILED</code> gesetzt.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,PrivacyManager()yyy123yyysw
exten =&gt; 123,n,GotoIf($["${PRIVACYMGRSTATUS}" = "FAILED"]?pm-fehler,1)yyy123yyysw
exten =&gt; 123,n,Dial(Zap/1)yyy123yyysw
yyy123yyysw
exten =&gt; pm-fehler,1,Playback(tut-uns-leid)yyy123yyysw
exten =&gt; pm-fehler,n,Playback(vm-goodbye)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'PrivacyManager' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Require phone number to be entered, if no CallerID sentyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  PrivacyManager([maxretries[|minlength[|options]]]): If no Caller*ID yyy123yyysw
is sent, PrivacyManager answers the channel and asks the caller toyyy123yyysw
enter their phone number. The caller is given 3 attempts to do so.yyy123yyysw
The application does nothing if Caller*ID was received on the channel.yyy123yyysw
  Configuration file privacy.conf contains two variables:yyy123yyysw
   maxretries  default 3  -maximum number of attempts the caller is allowed yyy123yyysw
               to input a callerid.yyy123yyysw
   minlength   default 10 -minimum allowable digits in the input callerid number.yyy123yyysw
If you don't want to use the config file and have an i/o operation withyyy123yyysw
every call, you can also specify maxretries and minlength as applicationyyy123yyysw
parameters. Doing so supercedes any values set in privacy.conf.yyy123yyysw
The option string may contain the following character: yyy123yyysw
  'j' -- jump to n+101 priority after &lt;maxretries&gt; failed attempts to collectyyy123yyysw
         the minlength number of digits.yyy123yyysw
The application sets the following channel variable upon completion: yyy123yyysw
PRIVACYMGRSTATUS  The status of the privacy manager's attempt to collect yyy123yyysw
                  a phone number from the user. A text string that is either:yyy123yyysw
          SUCCESS | FAILEDyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-zapateller" /></para>
    </formalpara>
  </section>

  <section id="applikationen-progress">
    <title><code>Progress()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Progress()</code></secondary>
    </indexterm>

    <simpara>Signalisiert Fortschritt.</simpara>

    <synopsis>Progress()</synopsis>

    <simpara>Signalisiert dem Teilnehmer, dass ein Fortschritt stattfindet
    (... dass sich <quote>was tut</quote> :-).</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>; Fortschritt anzeigen:yyy123yyysw
exten =&gt; 123,1,Progress()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Progress' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Indicate progressyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Progress(): This application will request that in-band progress informationyyy123yyysw
be provided to the calling channel.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-busy" />, <xref
      linkend="applikationen-congestion" />, <xref
      linkend="applikationen-playtones" />, <xref
      linkend="applikationen-ringing" /></para>
    </formalpara>
  </section>

  <section id="applikationen-queue">
    <title><code>Queue()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Queue()</code></secondary>
    </indexterm>

    <simpara>Legt den aktuellen Anruf in der spezifizierten Anrufwarteschlange
    ab.</simpara>

    <synopsis>Queue(<replaceable>Schlange</replaceable>[,<replaceable>Optionen</replaceable>[,<replaceable>URL</replaceable>[,<replaceable>Ankündigung</replaceable>[,<replaceable>Timeout</replaceable>]]]])</synopsis>

    <simpara>Fügt der angegebenen Warteschlange - wie in
    <filename>queues.conf</filename> definiert - einen eingehenden Anruf
    hinzu.</simpara>

    <para>Folgende Optionen sind möglich (auch in Kombination): <variablelist
        termlength="3">
        <varlistentry>
          <term><code>t</code></term>

          <listitem>
            <simpara>Erlaubt es dem angerufenen Teilnehmer, den Anruf
            weiterzuleiten.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>T</code></term>

          <listitem>
            <simpara>Erlaubt es dem anrufenden Teilnehmer, den Anruf
            weiterzuleiten.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>d</code></term>

          <listitem>
            <simpara>Spezifiziert einen Anruf mit Datenqualität (Modem,
            minimale Verzögerung).</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>h</code></term>

          <listitem>
            <simpara>Erlaubt es dem Angerufenen, durch Drücken von
            <code>*</code> aufzulegen.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>H</code></term>

          <listitem>
            <simpara>Erlaubt es dem Anrufer, durch Drücken von <code>*</code>
            aufzulegen.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>n</code></term>

          <listitem>
            <simpara>Verbietet eine Wiederholung des Timeouts; beendet diese
            Anwendung und geht weiter zum nächsten Schritt.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>r</code></term>

          <listitem>
            <simpara>Klingelt, statt Wartemusik zu spielen.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Außer dass ein Anruf weitergeleitet werden kann, kann er auch
    geparkt und dann von einem anderen Teilnehmer aufgenommen
    werden.</simpara>

    <simpara>Der Parameter <code>Ankündigung</code> überschreibt die
    Standardankündigung, die Warteschlangenagenten vorgespielt wird, bevor sie
    den angegebenen Anruf beantworten.</simpara>

    <simpara>Die optionale <code>URL</code> wird dem angerufenen Teilnehmer
    übersendet, falls dies vom Channel unterstützt wird.</simpara>

    <simpara>Nach einer angegebenen Zahl von Sekunden, überprüft zwischen
    jedem <filename>queues.conf</filename> Timeout und Retry-Kreislauf, wird
    <code>Timeout</code> die Queue() zu einem Fehlschlagen zwingen.</simpara>

    <simpara>Liefert -1 zurück, falls der ursprüngliche Channel aufgelegt
    wird, oder falls der Anruf durchgestellt wird und einer der Teilnehmer den
    Anruf beendet. Ist die Warteschlange voll, existiert sie nicht oder hat
    sie keine Mitglieder, wird 0 zurückgeliefert.</simpara>

    <programlisting>; den Anrufer zur "supportschlange" hinzufügen:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Queue(supportschlange,t)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Queue' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Queue a call for a call queueyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Queue(queuename[|options[|URL][|announceoverride][|timeout][|AGI]):yyy123yyysw
Queues an incoming call in a particular call queue as defined in queues.conf.yyy123yyysw
This application will return to the dialplan if the queue does not exist, oryyy123yyysw
any of the join options cause the caller to not enter the queue.yyy123yyysw
The option string may contain zero or more of the following characters:yyy123yyysw
      'd' -- data-quality (modem) call (minimum delay).yyy123yyysw
      'h' -- allow callee to hang up by hitting *.yyy123yyysw
      'H' -- allow caller to hang up by hitting *.yyy123yyysw
      'n' -- no retries on the timeout; will exit this application and yyy123yyysw
             go to the next step.yyy123yyysw
      'i' -- ignore call forward requests from queue members and do nothingyyy123yyysw
             when they are requested.yyy123yyysw
      'r' -- ring instead of playing MOHyyy123yyysw
      't' -- allow the called user transfer the calling useryyy123yyysw
      'T' -- to allow the calling user to transfer the call.yyy123yyysw
      'w' -- allow the called user to write the conversation to disk via Monitoryyy123yyysw
      'W' -- allow the calling user to write the conversation to disk via Monitoryyy123yyysw
  In addition to transferring the call, a call may be parked and then pickedyyy123yyysw
up by another user.yyy123yyysw
  The optional URL will be sent to the called party if the channel supportsyyy123yyysw
it.yyy123yyysw
  The optional AGI parameter will setup an AGI script to be executed on the yyy123yyysw
calling party's channel once they are connected to a queue member.yyy123yyysw
  The timeout will cause the queue to fail out after a specified number ofyyy123yyysw
seconds, checked between each queues.conf 'timeout' and 'retry' cycle.yyy123yyysw
  This application sets the following channel variable upon completion:yyy123yyysw
      QUEUESTATUS    The status of the call as a text string, one ofyyy123yyysw
             TIMEOUT | FULL | JOINEMPTY | LEAVEEMPTY | JOINUNAVAIL | LEAVEUNAVAILyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>8c8yyy123yyysw
&lt;   Queue(queuename[|options[|URL][|announceoverride][|timeout][|AGI]):yyy123yyysw
---yyy123yyysw
&gt;   Queue(queuename[|options[|URL][|announceoverride][|timeout]]):yyy123yyysw
17,19c17yyy123yyysw
&lt;              go to the next step.yyy123yyysw
&lt;       'i' -- ignore call forward requests from queue members and do nothingyyy123yyysw
&lt;              when they are requested.yyy123yyysw
---yyy123yyysw
&gt;        go to the next step.yyy123yyysw
29,30d26yyy123yyysw
&lt;   The optional AGI parameter will setup an AGI script to be executed on the yyy123yyysw
&lt; calling party's channel once they are connected to a queue member.yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-random">
    <title><code>Random()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Random()</code></secondary>
    </indexterm>

    <simpara>Springt zu einer zufälligen Priorität.</simpara>

    <synopsis>Random([<replaceable>Wahrscheinlichkeit</replaceable>]:[[<replaceable>Kontext</replaceable>,]<replaceable>Extension</replaceable>,]<replaceable>Priorität</replaceable>)</synopsis>

    <simpara>Springt bedingt zu der spezifizierten Priorität (und optional
    Extension und Kontext), basierend auf der angegebenen Wahrscheinlichkeit,
    die ein ganze Zahl zwischen 1 und 100 sein muss. Die Anwendung springt in
    <code>Wahrscheinlichkeit</code> Prozent der Fälle zu dem angegebenen
    Ziel.</simpara>

    <programlisting>; Glücksspiel mit jedesmal 20% Gewinnchance:yyy123yyysw
exten =&gt; 123,1,Random(20:gewonnen,1)yyy123yyysw
exten =&gt; 123,n,Goto(verloren,1)yyy123yyysw
yyy123yyysw
exten =&gt; gewonnen,1,Playback(gewonnen)yyy123yyysw
exten =&gt; gewonnen,n,Goto(123,1)yyy123yyysw
yyy123yyysw
exten =&gt; verloren,1,Playback(verloren)yyy123yyysw
exten =&gt; verloren,n,Goto(123,1)yyy123yyysw</programlisting>

    <important>
      <simpara>Die Applikation <code>Random()</code> ist seit 1.4
      <quote>deprecated</quote> und wird durch die Funktion
      <code>RAND()</code> ersetzt.</simpara>
    </important>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Random' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Conditionally branches, based upon a probabilityyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Random([probability]:[[context|]extension|]priority)yyy123yyysw
  probability := INTEGER in the range 1 to 100yyy123yyysw
DEPRECATED: Use GotoIf($[${RAND(1,100)} &gt; &lt;number&gt;]?&lt;label&gt;)yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>10d9yyy123yyysw
&lt; DEPRECATED: Use GotoIf($[${RAND(1,100)} &gt; &lt;number&gt;]?&lt;label&gt;)yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="funktionen-rand" /></para>
    </formalpara>
  </section>

  <section id="applikationen-read">
    <title><code>Read()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Read()</code></secondary>
    </indexterm>

    <simpara>Liest DTMF-Ziffern eines Anrufers und weist die Eingabe einer
    Variablen zu.</simpara>

    <synopsis>Read(<replaceable>Variablenname</replaceable>[,<replaceable>Dateiname</replaceable>[,<replaceable>maxZiffern</replaceable>[,<replaceable>Option</replaceable>[,<replaceable>Versuche</replaceable>[,<replaceable>Timeout</replaceable>]]]]])</synopsis>

    <simpara>Liest eine mit <code>#</code> abgeschlossene Reihe von Ziffern
    von einem Teilnehmer, und legt sie in einer gegebenen Variablen
    ab.</simpara>

    <simpara>Wenn <code>Dateiname</code> (ohne Endung!) angegeben ist, wird
    dem Anrufer diese Datei vor dem Einlesen vorgespielt.</simpara>

    <simpara><code>maxZiffern</code> bestimmt die maximal zu akzeptierende
    Anzahl von Ziffern. Ist der Parameter angegeben, beendet die Anwendung das
    Einlesen, nachdem <code>maxZiffern</code> Ziffern eingegeben wurden (ohne
    dass der Teilnehmer mit der <code>#</code>-Taste bestätigen muss).
    Standardeinstellung ist 0, was bedeutet, dass keine Begrenzung existiert
    und auf die Eingabe von <code>#</code> gewartet wird. Der größte
    akzeptierte Wert ist 255.</simpara>

    <simpara>Die Option <code>skip</code> bewirkt sofortige Rückkehr, falls
    der Channel nicht aktiv ist. <code>noanswer</code> bewirkt Einlesen sogar
    bei einem inaktiven Channel.</simpara>

    <simpara>Der Anrufer hat maximal <code>Versuche</code> Versuche, innerhalb
    von <code>Timout</code> Sekunden eine Eingabe zu machen. (Ein Timeout von
    0 bedeutet unendlich.)</simpara>

    <simpara>Liefert -1 zurück im Falle eines Auflegens oder Fehlers, sonst
    0.</simpara>

    <programlisting>; eine maximal vierstellige Zahl einlesen (3 Versuche) und dem Anrufer ansagen:yyy123yyysw
exten =&gt; 123,1,Read(NUMMER,,4,3)yyy123yyysw
exten =&gt; 123,n,SayNumber(${NUMMER})yyy123yyysw
exten =&gt; 123,n,Goto(1)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Read' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Read a variableyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Read(variable[|filename][|maxdigits][|option][|attempts][|timeout])yyy123yyysw
yyy123yyysw
Reads a #-terminated string of digits a certain number of times from theyyy123yyysw
user in to the given variable.yyy123yyysw
  filename   -- file to play before reading digits or tone with option iyyy123yyysw
  maxdigits  -- maximum acceptable number of digits. Stops reading afteryyy123yyysw
                maxdigits have been entered (without requiring the user toyyy123yyysw
                press the '#' key).yyy123yyysw
                Defaults to 0 - no limit - wait for the user press the '#' key.yyy123yyysw
                Any value below 0 means the same. Max accepted value is 255.yyy123yyysw
  option     -- options are 's' , 'i', 'n'yyy123yyysw
                's' to return immediately if the line is not up,yyy123yyysw
                'i' to play  filename as an indication tone from your indications.confyyy123yyysw
                'n' to read digits even if the line is not up.yyy123yyysw
  attempts   -- if greater than 1, that many attempts will be made in the yyy123yyysw
                event no data is entered.yyy123yyysw
  timeout    -- An integer number of seconds to wait for a digit response. If greateryyy123yyysw
                than 0, that value will override the default timeout.yyy123yyysw
yyy123yyysw
Read should disconnect if the function fails or errors out.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>12c12yyy123yyysw
&lt;   filename   -- file to play before reading digits or tone with option iyyy123yyysw
---yyy123yyysw
&gt;   filename   -- file to play before reading digits.yyy123yyysw
18,21c18,19yyy123yyysw
&lt;   option     -- options are 's' , 'i', 'n'yyy123yyysw
&lt;                 's' to return immediately if the line is not up,yyy123yyysw
&lt;                 'i' to play  filename as an indication tone from your indications.confyyy123yyysw
&lt;                 'n' to read digits even if the line is not up.yyy123yyysw
---yyy123yyysw
&gt;   option     -- may be 'skip' to return immediately if the line is not up,yyy123yyysw
&gt;                 or 'noanswer' to read digits even if the line is not up.yyy123yyysw
24,25c22yyy123yyysw
&lt;   timeout    -- An integer number of seconds to wait for a digit response. If greateryyy123yyysw
&lt;                 than 0, that value will override the default timeout.yyy123yyysw
---yyy123yyysw
&gt;   timeout    -- if greater than 0, that value will override the default timeout.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-senddtmf" /></para>
    </formalpara>
  </section>

  <section id="applikationen-realtime">
    <title><code>RealTime()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>RealTime()</code></secondary>
    </indexterm>

    <simpara>Holt Informationen vom
    RealTime-Konfigurationssteuerprogramm.</simpara>

    <synopsis>RealTime(<replaceable>Familie</replaceable>,<replaceable>Spalte</replaceable>,<replaceable>Wert</replaceable>[,<replaceable>Präfix</replaceable>])</synopsis>

    <simpara>Benutzt das RealTime-Konfigurationssteuerprogramm, um Daten in
    Channelvariablen einzulesen. Alle eindeutigen Spaltennamen aus der
    angegebenen Familie werden als Channelvariablen gesetzt. Dabei kann ihr
    Name ein optionales Namenspräfix <code>Präfix</code> erhalten (zum
    Beispiel würde ein Präfix <code>var_</code> den Spaltennamen
    <code>test</code> in die Variable <code>${var_test}</code>
    überführen).</simpara>

    <simpara>Die Channelvariable <code>REALTIMECOUNT</code> wird auf die
    Anzahl der gelesenen Werte gesetzt.</simpara>

    <para>In der <filename>extconfig.conf</filename>:<programlisting>; Familie =&gt; DBMS,DB-Name,Tabelleyyy123yyysw
sipusers =&gt; mysql,asterisk,sip_usersyyy123yyysw</programlisting>In der
    <filename>extensions.conf</filename>:<programlisting>exten =&gt; 123,1,RealTime(sipusers,ext,5678,var_)yyy123yyysw</programlisting>Führt
    das folgende SQL-Query in der Datenbank <code>asterisk</code> aus:</para>

    <simpara><code>SELECT * FROM sip_users WHERE ext = 5678</code></simpara>

    <para>Angenommen die Tabelle hat eine Spalte <code>vorname</code> und eine
    Spalte <code>nachname</code>, dann können wir die Werte so im CLI
    ausgeben:<programlisting>exten =&gt; 123,n,NoOp(Der Vorname von Ext. 5678: ${var_vorname})yyy123yyysw
exten =&gt; 123,n,NoOp(Der Nachname von Ext. 5678: ${var_nachname})yyy123yyysw</programlisting></para>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'RealTime' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Realtime Data Lookupyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Use the RealTime config handler system to read data into channel variables.yyy123yyysw
RealTime(&lt;family&gt;|&lt;colmatch&gt;|&lt;value&gt;[|&lt;prefix&gt;])yyy123yyysw
yyy123yyysw
All unique column names will be set as channel variables with optional prefixyyy123yyysw
to the name.  For example, a prefix of 'var_' would make the column 'name'yyy123yyysw
become the variable ${var_name}.  REALTIMECOUNT will be set with the numberyyy123yyysw
of values read.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>11,14c11,13yyy123yyysw
&lt; All unique column names will be set as channel variables with optional prefixyyy123yyysw
&lt; to the name.  For example, a prefix of 'var_' would make the column 'name'yyy123yyysw
&lt; become the variable ${var_name}.  REALTIMECOUNT will be set with the numberyyy123yyysw
&lt; of values read.yyy123yyysw
---yyy123yyysw
&gt; All unique column names will be set as channel variables with optional prefix to the name.yyy123yyysw
&gt; e.g. prefix of 'var_' would make the column 'name' become the variable ${var_name}yyy123yyysw
&gt; yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-realtimeupdate" /></para>
    </formalpara>
  </section>

  <section id="applikationen-realtimeupdate">
    <title><code>RealTimeUpdate()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>RealTimeUpdate()</code></secondary>
    </indexterm>

    <simpara>Aktualisiert einen Wert mit Hilfe des
    RealTime-Konfigurationssteuerprogramms.</simpara>

    <synopsis>RealTimeUpdate(<replaceable>Familie</replaceable>,<replaceable>Spalte</replaceable>,<replaceable>Wert</replaceable>,<replaceable>UpdateSpalte</replaceable>,<replaceable>UpdateWert</replaceable>)</synopsis>

    <simpara>Benutzt das RealTime-Konfigurationssteuerprogrammsystem, um einen
    Wert zu aktualisieren. Das Feld <code>UpdateSpalte</code> in der Zeile,
    bei der die Spalte <code>UpdateSpalte</code> in der Familie
    <code>Familie</code> mit <code>Wert</code> übereinstimmt, wird auf den
    Wert <code>UpdateWert</code> aktualisiert.</simpara>

    <programlisting>; bei der Situation wie im Beispiel zu RealTime() könnten wir diesenyyy123yyysw
; Befehl ausführen:yyy123yyysw
exten =&gt; 123,1,RealTimeUpdate(sipusers,ext,5678,vorname,Peter)yyy123yyysw
; resultierender SQL-Befehl:yyy123yyysw
UPDATE sip_users SET vorname = 'bob' WHERE ext = '5678'yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'RealTimeUpdate' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Realtime Data Rewriteyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Use the RealTime config handler system to update a valueyyy123yyysw
RealTimeUpdate(&lt;family&gt;|&lt;colmatch&gt;|&lt;value&gt;|&lt;newcol&gt;|&lt;newval&gt;)yyy123yyysw
yyy123yyysw
The column &lt;newcol&gt; in 'family' matching column &lt;colmatch&gt;=&lt;value&gt; will beyyy123yyysw
updated to &lt;newval&gt;.  REALTIMECOUNT will be set with the number of rowsyyy123yyysw
updated or -1 if an error occurs.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>11,13c11yyy123yyysw
&lt; The column &lt;newcol&gt; in 'family' matching column &lt;colmatch&gt;=&lt;value&gt; will beyyy123yyysw
&lt; updated to &lt;newval&gt;.  REALTIMECOUNT will be set with the number of rowsyyy123yyysw
&lt; updated or -1 if an error occurs.yyy123yyysw
---yyy123yyysw
&gt; The column &lt;newcol&gt; in 'family' matching column &lt;colmatch&gt;=&lt;value&gt; will be updated to &lt;newval&gt;yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-realtime" /></para>
    </formalpara>
  </section>

  <section id="applikationen-record">
    <title><code>Record()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Record()</code></secondary>
    </indexterm>

    <simpara>Aufnahme von Audio auf einem Channel in eine Datei</simpara>

    <para>ab Asterisk 1.2: <synopsis>Record(<replaceable>Basisname</replaceable>[.<replaceable>Format</replaceable>[,<replaceable>Stille</replaceable>[,<replaceable>maxDauer</replaceable>[,<replaceable>Optionen</replaceable>]]]])</synopsis></para>

    <simpara>Nimmt Audio auf dem Channel auf und speichert es in der Datei
    <code>Basisname.Format</code>. Existiert diese Datei bereits, wird sie
    überschrieben.</simpara>

    <para>Optionale Parameter sind: <variablelist termlength="10">
        <varlistentry>
          <term><code>format</code></term>

          <listitem>
            <simpara>Spezifiziert das Dateiformat der Aufnahmedatei
            (<code>g723</code>, <code>g729</code>, <code>gsm</code>,
            <code>h263</code>, <code>ulaw</code>, <code>alaw</code>,
            <code>wav</code>, ...)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>Stille</code></term>

          <listitem>
            <simpara>Gibt die Dauer in Sekunden an, die geräuschlos
            verstreichen darf, bevor die Aufnahme beendet wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>maxDauer</code></term>

          <listitem>
            <simpara>Gibt die maximale Aufnahmedauer in Sekunden an. Falls
            nicht angegeben oder 0, gibt es keine Obergrenze.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>Optionen</code></term>

          <listitem>
            <para>Kann beliebige der aufgeführten Flags enthalten:
            <variablelist termlength="3">
                <varlistentry>
                  <term><code>s</code></term>

                  <listitem>
                    <simpara>Nimmt nicht auf, wenn die Leitung bisher nicht
                    beantwortet wurde.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>n</code></term>

                  <listitem>
                    <simpara>Antwortet nicht, aber nimmt trotzdem auf, auch
                    wenn die Leitung bisher nicht beantwortet wurde.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>a</code></term>

                  <listitem>
                    <simpara>Hängt die Aufnahme an die bereits bestehende
                    Aufnahme an, statt sie zu überschreiben.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>t</code></term>

                  <listitem>
                    <simpara>Benutzt die alternative Abschlusstaste
                    <code>*</code> an Stelle der standardmäßig eingestellten
                    <code>#</code>-Taste.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>q</code></term>

                  <listitem>
                    <simpara>Keinen Piep-Ton vor der Aufnahme
                    spielen.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>x</code></term>

                  <listitem>
                    <simpara>Auch die Abbruchtasten <code>#</code> oder
                    <code>*</code> als DTMF-Töne aufzeichnen. Die Aufnahme
                    kann dann nur durch Timeout von <code>maxDauer</code> oder
                    Auflegen beendet werden.</simpara>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Enthält der <code>Basisname</code> die Zeichenkette
    <code>%d</code>, wird diese durch eine Nummerierung ersetzt, die bei jedem
    erneuten Aufnehmen der Datei um 1 erhöht wird.</simpara>

    <simpara>Der Teilnehmer kann die Taste <code>#</code> benutzen, um die
    Aufnahme abzubrechen und zur nächsten Priorität überzugehen. Beim Auflegen
    wird die Aufnahme verworfen.</simpara>

    <simpara>Liefert -1 zurück, wenn der Benutzer auflegt, sonst 0.</simpara>

    <programlisting>; den Namen des Anrufers aufzeichnen:yyy123yyysw
exten =&gt; 123,1,Playback(bitte-sprechen-sie-ihren-namen-nach-dem-ton)yyy123yyysw
exten =&gt; 123,n,Record(/tmp/name.gsm,3,10)yyy123yyysw
exten =&gt; 123,n,Playback(/tmp/name)yyy123yyysw</programlisting>

    <simpara>Beachten Sie auch die Hinweise bei
    <code>Monitor()</code>.</simpara>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Record' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Record to a fileyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Record(filename.format|silence[|maxduration][|options])yyy123yyysw
yyy123yyysw
Records from the channel into a given filename. If the file exists it willyyy123yyysw
be overwritten.yyy123yyysw
- 'format' is the format of the file type to be recorded (wav, gsm, etc).yyy123yyysw
- 'silence' is the number of seconds of silence to allow before returning.yyy123yyysw
- 'maxduration' is the maximum recording duration in seconds. If missingyyy123yyysw
or 0 there is no maximum.yyy123yyysw
- 'options' may contain any of the following letters:yyy123yyysw
     'a' : append to existing recording rather than replacingyyy123yyysw
     'n' : do not answer, but record anyway if line not yet answeredyyy123yyysw
     'q' : quiet (do not play a beep tone)yyy123yyysw
     's' : skip recording if the line is not yet answeredyyy123yyysw
     't' : use alternate '*' terminator key (DTMF) instead of default '#'yyy123yyysw
     'x' : ignore all terminator keys (DTMF) and keep recording until hangupyyy123yyysw
yyy123yyysw
If filename contains '%d', these characters will be replaced with a numberyyy123yyysw
incremented by one each time the file is recorded. yyy123yyysw
yyy123yyysw
Use 'show file formats' to see the available formats on your systemyyy123yyysw
yyy123yyysw
User can press '#' to terminate the recording and continue to the next priority.yyy123yyysw
yyy123yyysw
If the user should hangup during a recording, all data will be lost and theyyy123yyysw
application will teminate.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>21,22c21yyy123yyysw
&lt;      't' : use alternate '*' terminator key (DTMF) instead of default '#'yyy123yyysw
&lt;      'x' : ignore all terminator keys (DTMF) and keep recording until hangupyyy123yyysw
---yyy123yyysw
&gt;      't' : use alternate '*' terminator key instead of default '#'yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-dictate" />, <xref
      linkend="applikationen-monitor" />, <xref
      linkend="applikationen-mixmonitor" /></para>
    </formalpara>
  </section>

  <section id="applikationen-removequeuemember">
    <title><code>RemoveQueueMember()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>RemoveQueueMember()</code></secondary>
    </indexterm>

    <simpara>Entfernt dynamisch Warteschlangenmitglieder.</simpara>

    <synopsis>RemoveQueueMember(<replaceable>Schlange</replaceable>[,<replaceable>Interface</replaceable>])</synopsis>

    <simpara>Enfernt das spezifizierte Interface dynamisch aus der
    Warteschlange. Ist <code>Interface</code> nicht angegeben, entfernt die
    Anwendung das momentan in Verwendung befindliche Interface aus der
    Warteschlange.</simpara>

    <simpara>Ist das Interface nicht in der Warteschlange enthalten und eine
    Priorität n+101 existiert, wird die Anwendung zu dieser Priorität
    übergehen. Andernfalls wird sie einen Fehler zurückliefern.</simpara>

    <simpara>Liefert -1, wenn ein Fehler auftritt, sonst 0.</simpara>

    <programlisting>; SIP/3000 aus der "supportschlange" entfernen:yyy123yyysw
exten =&gt; 123,1,RemoveQueueMember(supportschlange,SIP/3000)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'RemoveQueueMember' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Dynamically removes queue membersyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
   RemoveQueueMember(queuename[|interface[|options]]):yyy123yyysw
Dynamically removes interface to an existing queueyyy123yyysw
If the interface is NOT in the queue and there exists an n+101 priorityyyy123yyysw
then it will then jump to this priority.  Otherwise it will return an erroryyy123yyysw
The option string may contain zero or more of the following characters:yyy123yyysw
       'j' -- jump to +101 priority when appropriate.yyy123yyysw
  This application sets the following channel variable upon completion:yyy123yyysw
     RQMSTATUS      The status of the attempt to remove a queue member as ayyy123yyysw
                     text string, one ofyyy123yyysw
           REMOVED | NOTINQUEUE | NOSUCHQUEUE yyy123yyysw
Example: RemoveQueueMember(techsupport|SIP/3000)yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-addqueuemember" />, <xref
      linkend="applikationen-queue" />,
      <filename>queues.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-resetcdr">
    <title><code>ResetCDR()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ResetCDR()</code></secondary>
    </indexterm>

    <simpara>Setzt das Anrufprotokoll (Call Detail Record) zurück.</simpara>

    <synopsis>ResetCDR([<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Setzt das Anrufprotokoll (Call Detail Record) zurück. Ist die
    Option <code>w</code> angegeben, wird eine Kopie des aktuellen
    Anrufprotokolls gespeichert, bevor das aktuelle CDR gelöscht
    wird.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>; das aktuelle CDR speichern und dann zurücksetzen:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Playback(tt-monkeys)yyy123yyysw
exten =&gt; 123,n,ResetCDR(w)yyy123yyysw
exten =&gt; 123,n,Playback(tt-monkeys)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'ResetCDR' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Resets the Call Data Recordyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  ResetCDR([options]):  This application causes the Call Data Record to beyyy123yyysw
reset.yyy123yyysw
  Options:yyy123yyysw
    w -- Store the current CDR record before resetting it.yyy123yyysw
    a -- Store any stacked records.yyy123yyysw
    v -- Save CDR variables.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-forkcdr" />, <xref
      linkend="applikationen-nocdr" /></para>
    </formalpara>
  </section>

  <section id="applikationen-retrydial">
    <title><code>RetryDial()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>RetryDial()</code></secondary>
    </indexterm>

    <simpara>Versucht, einen Anruf zu tätigen, und wiederholt den Versuch bei
    einem Fehlschlag.</simpara>

    <synopsis>RetryDial(<replaceable>Ankündigung</replaceable>,<replaceable>Wartezeit</replaceable>,<replaceable>Versuche</replaceable>,<replaceable>Tech</replaceable>/<replaceable>Res</replaceable>[&amp;<replaceable>Tech2</replaceable>/<replaceable>Res2</replaceable>...][,<replaceable>Timeout</replaceable>[,<replaceable>Optionen</replaceable>[,<replaceable>URL</replaceable>]]])</synopsis>

    <simpara>Versucht, wie <code>Dial()</code>, einen Anruf zu tätigen. Kann
    kein Channel erreicht werden, wird die Datei <code>Ankündigung</code>
    (ohne Endung!) abgespielt und <code>Wartezeit</code> Sekunden gewartet,
    bis der Versuch wiederholt wird. Per Default wir 10 Sekunden gewartet.
    Nach <code>Versuche</code> Versuchen wird der Anruft mit der nächsten
    Priorität im Wählplan fortgesetzt. Ist <code>Versuche</code> auf 0 oder -1
    gesetzt, wird der Anrufversuch endlos wiederholt.</simpara>

    <simpara>In der Wartezeit kann eine einziffrige Extension gewählt werden.
    Existiert diese Extensions im durch <code>${EXITCONTEXT}</code>
    spezifizierten Kontext (oder im aktuellen), wird der Anruf unmittelbar an
    diese Extension weitergeleitet.</simpara>

    <simpara>Alle Parameter nach <code>Versuche</code> werden direkt an die
    <code>Dial()</code>-Anwendung weitergeleitet.</simpara>

    <programlisting>; 3-mal versuchen, die Nummer zu erreichen, Wdh. nach 5 Sekunden:yyy123yyysw
exten =&gt; 123,1,RetryDial(versuche-zu-verbinden,5,3,IAX2/VOIP/012345678,30)yyy123yyysw
; wenn der Anrufer während des Wählens 0 drückt, auf Zap/4 versuchen:yyy123yyysw
exten =&gt; 0,1,RetryDial(versuche-zu-verbinden,5,3,Zap/4/012345678,30)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'RetryDial' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Place a call, retrying on failure allowing optional exit extension.yyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  RetryDial(announce|sleep|retries|dialargs): This application will attempt toyyy123yyysw
place a call using the normal Dial application. If no channel can be reached,yyy123yyysw
the 'announce' file will be played. Then, it will wait 'sleep' number ofyyy123yyysw
seconds before retying the call. After 'retires' number of attempts, theyyy123yyysw
calling channel will continue at the next priority in the dialplan. If theyyy123yyysw
'retries' setting is set to 0, this application will retry endlessly.yyy123yyysw
  While waiting to retry a call, a 1 digit extension may be dialed. If thatyyy123yyysw
extension exists in either the context defined in ${EXITCONTEXT} or the currentyyy123yyysw
one, The call will jump to that extension immediately.yyy123yyysw
  The 'dialargs' are specified in the same format that arguments are providedyyy123yyysw
to the Dial application.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-dial" /></para>
    </formalpara>
  </section>

  <section id="applikationen-return">
    <title><code>Return()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Return()</code></secondary>
    </indexterm>

    <simpara>Kehrt von einem Unterprogramm zurück.</simpara>

    <synopsis>Return()</synopsis>

    <simpara>Kehrt von einem Unterprogramm, das mit <code>Gosub()</code> oder
    <code>GosubIf()</code> aufgerufen wurde, zurück an die Anweisung, die im
    Dialplan auf den Sprungbefehl folgt.</simpara>

    <programlisting>exten =&gt; 123,1,Playback(tt-monkeys)yyy123yyysw
exten =&gt; 123,n,Gosub(mein-unterprogramm,s,1)yyy123yyysw
exten =&gt; 123,n,Playback(tt-monkeys)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw
yyy123yyysw
[mein-unterprogramm]yyy123yyysw
exten =&gt; s,1,Playback(tt-weasels)yyy123yyysw
exten =&gt; s,n,Return()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Return' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Return from gosub routineyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Return()yyy123yyysw
  Jumps to the last label on the stack, removing it.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-gosub" />, <xref
      linkend="applikationen-gosubif" /></para>
    </formalpara>
  </section>

  <section id="applikationen-ringing">
    <title><code>Ringing()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Ringing()</code></secondary>
    </indexterm>

    <simpara>Signalisiert Klingelton.</simpara>

    <synopsis>Ringing()</synopsis>

    <simpara>Signalisiert dem Teilnehmer Klingeln. Wie diese Signalisierung
    erfolgt, hängt vom Channeltreiber ab. Beachten Sie, dass diese Anwendung
    den Anrufer nicht mit tatsächlichem Klingeln versieht. Benutzen Sie hierzu
    die Anwendung <code>Playtones()</code>.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>; Klingeln vortäuschen:yyy123yyysw
exten =&gt; 123,1,Ringing()yyy123yyysw
exten =&gt; 123,n,Wait(5)yyy123yyysw
exten =&gt; 123,n,Playback(tt-somethingwrong)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Ringing' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Indicate ringing toneyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Ringing(): This application will request that the channel indicate a ringingyyy123yyysw
tone to the user.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-busy" />, <xref
      linkend="applikationen-congestion" />, <xref
      linkend="applikationen-progress" />, <xref
      linkend="applikationen-ringing" />, <xref
      linkend="applikationen-playtones" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sayalpha">
    <title><code>SayAlpha()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SayAlpha()</code></secondary>
    </indexterm>

    <simpara>Spricht eine Zeichenkette.</simpara>

    <synopsis>SayAlpha(<replaceable>String</replaceable>)</synopsis>

    <simpara>Buchstabiert den übergebenen String unter Verwendung der
    aktuellen Spracheinstellung für den Channel. Die Sprache kann mit der
    Funktion <code>LANGUAGE()</code> geändert werden.</simpara>

    <programlisting>exten =&gt; 123,1,SayAlpha(ABC123)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SayAlpha' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Say Alphayyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SayAlpha(string): This application will play the sounds that correspond toyyy123yyysw
the letters of the given string.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-saydigits" />, <xref
      linkend="applikationen-saynumber" />, <xref
      linkend="applikationen-sayphonetic" /></para>
    </formalpara>
  </section>

  <section id="applikationen-saydigits">
    <title><code>SayDigits()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SayDigits()</code></secondary>
    </indexterm>

    <simpara>Spricht die übergebenen Ziffern.</simpara>

    <synopsis>SayDigits(<replaceable>Ziffern</replaceable>)</synopsis>

    <simpara>Spricht die übergebenen Ziffern unter Verwendung der aktuellen
    Spracheinstellung für den Channel. Die Sprache kann mit der Funktion
    <code>LANGUAGE()</code> geändert werden.</simpara>

    <programlisting>exten =&gt; 123,1,SayDigits(1234)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SayDigits' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Say Digitsyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SayDigits(digits): This application will play the sounds that correspondyyy123yyysw
to the digits of the given number. This will use the language that is currentlyyyy123yyysw
set for the channel. See the LANGUAGE function for more information on settingyyy123yyysw
the language for the channel.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sayalpha" />, <xref
      linkend="applikationen-saynumber" />, <xref
      linkend="applikationen-sayphonetic" /></para>
    </formalpara>
  </section>

  <section id="applikationen-saynumber">
    <title><code>SayNumber()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SayNumber()</code></secondary>
    </indexterm>

    <simpara>Spricht die angegebene Zahl.</simpara>

    <synopsis>SayNumber(<replaceable>Nummer</replaceable>[,<replaceable>Genus</replaceable>])</synopsis>

    <simpara>Spricht die angegebene Zahl unter Verwendung der aktuellen
    Spracheinstellung für den Channel. Die Sprache kann mit der Funktion
    <code>LANGUAGE()</code> geändert werden.</simpara>

    <para>Bisher werden Ganzzahlen von 1 bis 99.999.999 in den folgenden
    Sprachen syntaktisch unterstützt: <variablelist
        termlength="4">
        <varlistentry>
          <term><code>da</code></term>

          <listitem>
            <simpara>Dänisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>de</code></term>

          <listitem>
            <simpara>Deutsch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>en</code></term>

          <listitem>
            <simpara>Englisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>es</code></term>

          <listitem>
            <simpara>Spanisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>fr</code></term>

          <listitem>
            <simpara>Französisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>it</code></term>

          <listitem>
            <simpara>Italienisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>nl</code></term>

          <listitem>
            <simpara>Niederländisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>no</code></term>

          <listitem>
            <simpara>Norwegisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>pl</code></term>

          <listitem>
            <simpara>Polnisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>pt</code></term>

          <listitem>
            <simpara>Portugiesisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>se</code></term>

          <listitem>
            <simpara>Schwedisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>tw</code></term>

          <listitem>
            <simpara>Taiwanesisch</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Kennt die aktuelle Sprache Geschlechter (Genus, Sexus), kann der
    Parameter <code>Genus</code> übergeben werden und das Genus der zu
    sprechenden Zahl zu ändern.</simpara>

    <simpara>Benutzen Sie bei europäischen Sprachen wie Deutsch, Französisch,
    Spanisch, Portugiesisch das Genus <code>f</code> für Femininum,
    <code>m</code> für Maskulinum und <code>n</code> für Neutrum.</simpara>

    <simpara>Benutzen Sie bei nordischen Sprachen wie Dänisch, Schwedisch oder
    Norwegisch das <code>Genus</code> <code>c</code> für Commune (/Utrum,
    belebt) und <code>n</code> für Neutrum (/Ne-utrum, unbelebt).</simpara>

    <simpara>Benutzen Sie für Aufzählungen im deutschen Plural das
    <code>Genus</code> <code>p</code>.</simpara>

    <simpara>Damit diese Anwendung mit anderen Sprachen als Englisch
    funktioniert, müssen die entsprechenden Audiodateien für die jeweilige
    gewünschte Sprache in
    <filename>/var/lib/asterisk/sounds/digits/</filename> (bzw.
    Unterverzeichnissen wie <filename>de/</filename>) vorhanden
    sein.</simpara>

    <programlisting>; in Englisch sprechen:yyy123yyysw
exten =&gt; 123,1,Set(LANGUAGE=en)yyy123yyysw
exten =&gt; 123,n,SayNumber(1234)yyy123yyysw
; "one - thousand - two - hundred - and - thirty - four"yyy123yyysw
yyy123yyysw
; in Deutsch sprechen:yyy123yyysw
exten =&gt; 123,1,Set(LANGUAGE=de)yyy123yyysw
exten =&gt; 123,n,SayNumber(1234)yyy123yyysw
; "ein - Tausend - zwei - Hundert - und - vier - und - dreißig"yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SayNumber' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Say Numberyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SayNumber(digits[,gender]): This application will play the sounds thatyyy123yyysw
correspond to the given number. Optionally, a gender may be specified.yyy123yyysw
This will use the language that is currently set for the channel. See theyyy123yyysw
LANGUAGE function for more information on setting the language for the channel.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sayalpha" />, <xref
      linkend="applikationen-saydigits" />, <xref
      linkend="applikationen-sayphonetic" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sayphonetic">
    <title><code>SayPhonetic()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SayPhonetic()</code></secondary>
    </indexterm>

    <simpara>Buchstabiert die angegebene Zeichenkette phonetisch.</simpara>

    <synopsis>SayPhonetic(<replaceable>String</replaceable>)</synopsis>

    <simpara>Buchstabiert den angegebenen String unter Verwendung des
    phonetischen NATO-Alphabets bzw. Funker-Alphabets (je nach Sprache). Die
    Sprache kann mit der Funktion <code>LANGUAGE()</code> geändert werden.
    Umlaute/Sonderzeichen sind bisher nicht möglich.</simpara>

    <programlisting>exten =&gt; 123,1,Set(LANGUAGE=en)yyy123yyysw
exten =&gt; 123,n,SayPhonetic(asterisk)yyy123yyysw
; Alpha Sierra Tango Echo Romeo India Sierra Kiloyyy123yyysw
yyy123yyysw
exten =&gt; 123,n,Set(LANGUAGE=de)yyy123yyysw
exten =&gt; 123,n,SayPhonetic(asterisk)yyy123yyysw
; Anton Samuel Theodor Emil Richard Ida Samuel Kaufmannyyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SayPhonetic' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Say Phoneticyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SayPhonetic(string): This application will play the sounds from the phoneticyyy123yyysw
alphabet that correspond to the letters in the given string.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sayalpha" />, <xref
      linkend="applikationen-saydigits" />, <xref
      linkend="applikationen-saynumber" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sayunixtime">
    <title><code>SayUnixTime()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SayUnixTime()</code></secondary>
    </indexterm>

    <simpara>Zeitansage in einem spezifischen Format</simpara>

    <synopsis>SayUnixTime([<replaceable>Unixzeit</replaceable>][,<replaceable>Zeitzone</replaceable>[,<replaceable>Format</replaceable>]])</synopsis>

    <para>Sagt die angegebene Zeit unter Berücksichtigung der angegebenen
    Zeitzone und des vorgegebenen Formats. Die Parameter sind: <variablelist
        termlength="10">
        <varlistentry>
          <term><code>Unixzeit</code></term>

          <listitem>
            <simpara>Unix-Timestamp, also die Anzahl der Sekunden seit dem 1.
            Januar 1970, 0 Uhr GMT. Kann negative Werte annehmen. Standardwert
            ist die aktuelle Zeit.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>Zeitzone</code></term>

          <listitem>
            <simpara>Die Zeitzone. Eine Liste findet sich in
            <filename>/usr/share/zoneinfo/</filename>. Standardwert ist die
            Geräteeinstellung.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>Format</code></term>

          <listitem>
            <simpara>Das Format, in der die Zeit gesprochen werden soll. Eine
            Liste von Formaten findet sich in
            <filename>voicemail.conf</filename>. Als Standardformat wird
            <code>ABdY 'digits/at' IMp</code> verwendet.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Liefert 0 zurück oder -1, wenn aufgelegt wird.</simpara>

    <programlisting>exten =&gt; 123,1,SayUnixTime(,,IMp)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SayUnixTime' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Says a specified time in a custom formatyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
SayUnixTime([unixtime][|[timezone][|format]])yyy123yyysw
  unixtime: time, in seconds since Jan 1, 1970.  May be negative.yyy123yyysw
              defaults to now.yyy123yyysw
  timezone: timezone, see /usr/share/zoneinfo for a list.yyy123yyysw
              defaults to machine default.yyy123yyysw
  format:   a format the time is to be said in.  See voicemail.conf.yyy123yyysw
              defaults to "ABdY 'digits/at' IMp"yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-senddtmf">
    <title><code>SendDTMF()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SendDTMF()</code></secondary>
    </indexterm>

    <simpara>Sendet beliebige DTMF-Ziffern zu dem Channel.</simpara>

    <synopsis>SendDTMF(<replaceable>Ziffern</replaceable>[,<replaceable>Timeout_ms</replaceable>])</synopsis>

    <simpara>Sendet die angegebenen DTMF-Ziffern auf einem Channel. Gültige
    DTMF-Symbole sind <code>0</code>-<code>9</code>, <code>*</code>,
    <code>#</code> und <code>A</code>-<code>D</code>. Sie können auch den
    Buchstaben <code>w</code> als eine Ziffer verwendet, er steht für eine
    Wartezeit von 500 Millisekunden. Der Parameter <code>Timeout_ms</code>
    bezeichnet die Zeitdauer in Millisekunden zwischen den Ziffern. Falls
    nicht angegeben, wird ein Wert von 250 Millisekunden für
    <code>Timeout_ms</code> angenommen.</simpara>

    <simpara>Liefert bei Erfolg 0 zurück oder -1, wenn aufgelegt
    wird.</simpara>

    <programlisting>exten =&gt; 123,1,SendDTMF(123w456w789,200)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SendDTMF' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Sends arbitrary DTMF digitsyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
 SendDTMF(digits[|timeout_ms]): Sends DTMF digits on a channel. yyy123yyysw
 Accepted digits: 0-9, *#abcd, w (.5s pause)yyy123yyysw
 The application will either pass the assigned digits or terminate if ityyy123yyysw
 encounters an error.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-read" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sendimage">
    <title><code>SendImage()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SendImage()</code></secondary>
    </indexterm>

    <simpara>Sendet eine Bilddatei.</simpara>

    <synopsis>SendImage(<replaceable>Dateiname</replaceable>[,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Sendet eine Bilddatei auf einem Channel. Falls die Übermittlung
    von Bildern unterstützt wird und die Übertragung fehlschlägt, wird
    aufgelegt, sonst bei der nächsten Priorität fortgefahren. Mit der Option
    <code>j</code> wird, wenn der Channel keine Bildübertragung unterstützt,
    zur Priorität n+101 gesprungen.</simpara>

    <simpara>Liefert 0 zurück, wenn das Bild fehlerfrei übertragen wurde oder
    der Channel eine Bildübertragung nicht unterstützt, sonst -1. Setzt die
    Channelvariable <code>SENDIMAGESTATUS</code> entweder auf <code>OK</code>
    (Erfolg) oder <code>NOSUPPORT</code> (nicht unterstützt).</simpara>

    <programlisting>exten =&gt; 123,1,SendImage(logo.jpg)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SendImage' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Send an image fileyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SendImage(filename): Sends an image on a channel. yyy123yyysw
If the channel supports image transport but the image sendyyy123yyysw
fails, the channel will be hung up. Otherwise, the dialplanyyy123yyysw
continues execution.yyy123yyysw
The option string may contain the following character:yyy123yyysw
 'j' -- jump to priority n+101 if the channel doesn't support image transportyyy123yyysw
This application sets the following channel variable upon completion:yyy123yyysw
 SENDIMAGESTATUS  The status is the result of the attempt as a text string, one ofyyy123yyysw
  OK | NOSUPPORTyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sendtext" />, <xref
      linkend="applikationen-sendurl" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sendtext">
    <title><code>SendText()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SendText()</code></secondary>
    </indexterm>

    <simpara>Sendet Text zu dem Channel.</simpara>

    <synopsis>SendText(<replaceable>Text</replaceable>[,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Überträgt den Text auf einem Channel (z.B. zur Anzeige im
    Display), falls die Übertragung von Text unterstützt wird. Danach wird die
    Ausführung bei der nächsten Priorität fortgesetzt. Mit der Option
    <code>j</code> wird, wenn der Channel keine Textübertragung unterstützt,
    zur Priorität n+101 gesprungen.</simpara>

    <simpara>Der Text sollte bisher bei den meisten Kanälen 7-Bit-ASCII
    sein.</simpara>

    <simpara>Liefert 0 zurück, wenn der Text fehlerfrei übertragen wurde oder
    der Channel eine Textübertragung nicht unterstützt, sonst -1. Setzt die
    Channelvariable <code>SENDTEXTSTATUS</code> auf <code>SUCCESS</code>
    (Erfolg), <code>FAILURE</code> (Sendefehler) oder <code>UNSUPPORTED</code>
    (nicht unterstützt).</simpara>

    <programlisting>exten =&gt; 123,1,SendText(Willkommen zu Asterisk)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SendText' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Send a Text Messageyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SendText(text[|options]): Sends text to current channel (callee).yyy123yyysw
Result of transmission will be stored in the SENDTEXTSTATUSyyy123yyysw
channel variable:yyy123yyysw
      SUCCESS      Transmission succeededyyy123yyysw
      FAILURE      Transmission failedyyy123yyysw
      UNSUPPORTED  Text transmission not supported by channelyyy123yyysw
yyy123yyysw
At this moment, text is supposed to be 7 bit ASCII in most channels.yyy123yyysw
The option string many contain the following character:yyy123yyysw
'j' -- jump to n+101 priority if the channel doesn't supportyyy123yyysw
       text transportyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sendimage" />, <xref
      linkend="applikationen-sendurl" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sendurl">
    <title><code>SendURL()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SendURL()</code></secondary>
    </indexterm>

    <simpara>Sendet dem Channel eine URL.</simpara>

    <synopsis>SendURL(<replaceable>URL</replaceable>[,<replaceable>Option</replaceable>])</synopsis>

    <simpara>Sendet dem Channel eine URL, die das Gerät aufrufen soll (IAX2).
    Setzt die Ausführung beim nächsten Schritt fort.</simpara>

    <simpara>Mit der Option <code>j</code> wird, wenn der Channel keine
    Übertragung von URLs unterstützt, zur Priorität n+101 gesprungen. Mit der
    Option <code>wait</code> wird vor dem Fortfahren auf eine Bestätigung
    gewartet, dass die URL geladen wurde.</simpara>

    <simpara>Liefert 0 zurück, wenn die URL fehlerfrei übertragen wurde oder
    der Channel die Übertragung nicht unterstützt, sonst -1. Setzt die
    Channelvariable <code>SENDURLSTATUS</code> auf <code>SUCCESS</code>
    (Erfolg), <code>FAILURE</code> (Sendefehler), <code>UNSUPPORTED</code>
    (nicht unterstützt) oder <code>NOLOAD</code> (bei <code>wait</code>:
    Client konnte die URL nicht laden).</simpara>

    <programlisting>exten =&gt; 123,1,SendURL(http://www.asterisk.org/,wait)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SendURL' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Send a URLyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SendURL(URL[|option]): Requests client go to URL (IAX2) or sends the yyy123yyysw
URL to the client (other channels).yyy123yyysw
Result is returned in the SENDURLSTATUS channel variable:yyy123yyysw
    SUCCESS       URL successfully sent to clientyyy123yyysw
    FAILURE       Failed to send URLyyy123yyysw
    NOLOAD        Client failed to load URL (wait enabled)yyy123yyysw
    UNSUPPORTED   Channel does not support URL transportyyy123yyysw
yyy123yyysw
If the option 'wait' is specified, execution will wait for anyyy123yyysw
acknowledgement that the URL has been loaded before continuingyyy123yyysw
yyy123yyysw
If jumping is specified as an option (the 'j' flag), the client does notyyy123yyysw
support Asterisk "html" transport, and there exists a step with priorityyyy123yyysw
n + 101, then execution will continue at that step.yyy123yyysw
yyy123yyysw
SendURL continues normally if the URL was sent correctly or if the channelyyy123yyysw
does not support HTML transport.  Otherwise, the channel is hung up.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>13c13yyy123yyysw
&lt;     NOLOAD        Client failed to load URL (wait enabled)yyy123yyysw
---yyy123yyysw
&gt;     NOLOAD        Clien failed to load URL (wait enabled)yyy123yyysw
17a18yyy123yyysw
&gt; and will return -1 if the peer is unable to load the URLyyy123yyysw
19,24c20,26yyy123yyysw
&lt; If jumping is specified as an option (the 'j' flag), the client does notyyy123yyysw
&lt; support Asterisk "html" transport, and there exists a step with priorityyyy123yyysw
&lt; n + 101, then execution will continue at that step.yyy123yyysw
&lt; yyy123yyysw
&lt; SendURL continues normally if the URL was sent correctly or if the channelyyy123yyysw
&lt; does not support HTML transport.  Otherwise, the channel is hung up.yyy123yyysw
---yyy123yyysw
&gt; Old behaviour (deprecated): yyy123yyysw
&gt;  If the client does not support Asterisk "html" transport, yyy123yyysw
&gt;  and there exists a step with priority n + 101, then execution willyyy123yyysw
&gt;  continue at that step.yyy123yyysw
&gt;  Otherwise, execution will continue at the next priority level.yyy123yyysw
&gt;  SendURL only returns 0 if the URL was sent correctly  or ifyyy123yyysw
&gt;  the channel does not support HTML transport, and -1 otherwise.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sendimage" />, <xref
      linkend="applikationen-sendtext" /></para>
    </formalpara>
  </section>

  <section id="applikationen-set">
    <title><code>Set()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Set()</code></secondary>
    </indexterm>

    <simpara>Setzt eine Variable auf den angegebenen Wert.</simpara>

    <synopsis>Set(<replaceable>Variable</replaceable>=<replaceable>Wert</replaceable>[,<replaceable>Variable2</replaceable>=<replaceable>Wert2</replaceable>,...][,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Setzt die Variable auf den angegebenen Wert. Beginnt der Name der
    Variablen mit dem Zeichen <code>_</code>, wird einfache Vererbung
    angenommen (d.h. wird auf Kanäle vererbt, die von diesem Channel erzeugt
    werden), beginnt er mit <code>__</code>, wird Endlosvererbung angenommen
    (d.h. wird auf alle Kinder-Kanäle vererbt). Bis zu 24 Variablen können
    gesetzt werden. Variablen sind normalerweise nur innerhalb eines Channels
    gültig und werden beim Auflegen gelöscht. Mit der Option <code>g</code>
    setzt man in Asterisk 1.2 eine Variable (nicht eine Funktion!) global; in
    1.4 macht man das mit Hilfe der Funktion <code>GLOBAL()</code>.</simpara>

    <programlisting>; die Variable TEST auf "123" setzen:yyy123yyysw
exten =&gt; 123,1,Set(TEST=123)yyy123yyysw
exten =&gt; 123,n,SayDigits(${TEST})yyy123yyysw
yyy123yyysw
; die globale Variable TEST2 auf "456" setzen:yyy123yyysw
exten =&gt; 123,n,Set(TEST2=456,g)         ; Asterisk 1.2yyy123yyysw
exten =&gt; 123,n,Set(GLOBAL(TEST2)=456)   ; Asterisk 1.4yyy123yyysw</programlisting>

    <note>
      <para>Ob globale Variablen auch nach einem Reload von Asterisk noch
      gültig sind, wird durch die Einstellung <code>clearglobalvars</code> in
      der <filename>extensions.conf</filename> bestimmt.</para>
    </note>

    <simpara><code>Set()</code> wird auch verwendet, um in Funktionen zu
    schreiben (siehe <xref linkend="funktionen" />).</simpara>

    <programlisting>exten =&gt; 123,1,Set(CALLERID(name)=Apfelmus)  ; CALLERID(name) setzenyyy123yyysw
exten =&gt; 123,n,Set(CALLERID(name)=)          ; CALLERID(name) leerenyyy123yyysw
yyy123yyysw
exten =&gt; 123,n,Set(DB(mein/test)=ok)         ; in AstDB schreibenyyy123yyysw
exten =&gt; 123,n,Set(var=${DB(mein/test)})     ; aus AstDB lesenyyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Set' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Set channel variable(s) or function value(s)yyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Set(name1=value1|name2=value2|..[|options])yyy123yyysw
This function can be used to set the value of channel variables or dialplanyyy123yyysw
functions. It will accept up to 24 name/value pairs. When setting variables,yyy123yyysw
if the variable name is prefixed with _, the variable will be inherited intoyyy123yyysw
channels created from the current channel. If the variable name is prefixedyyy123yyysw
with __, the variable will be inherited into channels created from the currentyyy123yyysw
channel and all children channels.yyy123yyysw
  Options:yyy123yyysw
    g - Set variable globally instead of on the channelyyy123yyysw
        (applies only to variables, not functions)yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-importvar" />,
      <filename>doc/README.variables</filename> (1.2) /
      <filename>doc/channelvariables.txt</filename> (1.4), <xref
      linkend="funktionen-global" /></para>
    </formalpara>
  </section>

  <section id="applikationen-setamaflags">
    <title><code>SetAMAFlags()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SetAMAFlags()</code></secondary>
    </indexterm>

    <simpara>Setzt AMA-Flags im Anrufprotokoll.</simpara>

    <synopsis>SetAMAFlags(Flags)</synopsis>

    <simpara>Setzt zu Abrechnungszwecken die AMA-Flags im Anrufprotokoll (Call
    Detail Record), wobei die AMA-Einstellungen in den
    Channelkonfigurationsdateien überschrieben werden. Gültige Werte sind
    <code>default</code>, <code>omit</code>, <code>billing</code> und
    <code>documentation</code>.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,SetAMAFlags(billing)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SetAMAFlags' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Set the AMA Flagsyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SetAMAFlags([flag]): This application will set the channel's AMA Flags foryyy123yyysw
  billing purposes.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>8,9c8,9yyy123yyysw
&lt;   SetAMAFlags([flag]): This application will set the channel's AMA Flags foryyy123yyysw
&lt;   billing purposes.yyy123yyysw
---yyy123yyysw
&gt;   SetAMAFlags([flag]): This channel will set the channel's AMA Flags for billingyyy123yyysw
&gt; purposes.yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-setcallerpres">
    <title><code>SetCallerPres()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SetCallerPres()</code></secondary>
    </indexterm>

    <simpara>Setzt Caller-ID-Darstellungsflags (presentation flags).</simpara>

    <synopsis>SetCallerPres(<replaceable>Darstellung</replaceable>)</synopsis>

    <simpara>Setzt die Caller-ID-Darstellungsflags auf einer
    Q931-PRI-Verbindung.</simpara>

    <para>Gültige Darstellungen sind: <variablelist termlength="23">
        <varlistentry>
          <term><code>allowed_not_screened</code></term>

          <listitem>
            <simpara>Anzeige erlaubt und nicht überprüft.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>allowed_passed_screen</code></term>

          <listitem>
            <simpara>Anzeige erlaubt und Überprüfung erfolgreich.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>allowed_passed_screen</code></term>

          <listitem>
            <simpara>Anzeige erlaubt und Überprüfung nicht
            erfolgreich.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>allowed</code></term>

          <listitem>
            <simpara>Anzeige erlaubt, Netzwerknummer.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>prohib_not_screened</code></term>

          <listitem>
            <simpara>Anzeige verboten und nicht überprüft.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>prohib_passed_screen</code></term>

          <listitem>
            <simpara>Anzeige verboten und Überprüfung erfolgreich.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>prohib_failed_screen</code></term>

          <listitem>
            <simpara>Anzeige verboten und Überprüfung nicht
            erfolgreich.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>prohib</code></term>

          <listitem>
            <simpara>Anzeige verboten, Netzwerknummer.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>unavailable</code></term>

          <listitem>
            <simpara>Nummer nicht verfügbar.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,SetCallerPres(allowed_not_screened)yyy123yyysw
exten =&gt; 123,n,Dial(Zap/4/1234567)yyy123yyysw</programlisting>

    <simpara>Evtl. müssen Sie <code>usecallingpres=yes</code> in der
    <filename>zapata.conf</filename> setzen.</simpara>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SetCallerPres' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Set CallerID Presentationyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SetCallerPres(presentation): Set Caller*ID presentation on a call.yyy123yyysw
  Valid presentations are:yyy123yyysw
yyy123yyysw
      allowed_not_screened    : Presentation Allowed, Not Screenedyyy123yyysw
      allowed_passed_screen   : Presentation Allowed, Passed Screenyyy123yyysw
      allowed_failed_screen   : Presentation Allowed, Failed Screenyyy123yyysw
      allowed                 : Presentation Allowed, Network Numberyyy123yyysw
      prohib_not_screened     : Presentation Prohibited, Not Screenedyyy123yyysw
      prohib_passed_screen    : Presentation Prohibited, Passed Screenyyy123yyysw
      prohib_failed_screen    : Presentation Prohibited, Failed Screenyyy123yyysw
      prohib                  : Presentation Prohibited, Network Numberyyy123yyysw
      unavailable             : Number Unavailableyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-sipaddheader">
    <title><code>SIPAddHeader()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SIPAddHeader()</code></secondary>
    </indexterm>

    <simpara>Fügt dem ausgehenden SIP-Anruf einen Header hinzu.</simpara>

    <synopsis>SIPAddHeader(<replaceable>Header</replaceable>: <replaceable>Wert</replaceable>)</synopsis>

    <simpara>Fügt einem mit der <code>Dial()</code>-Anwendung initiierten
    SIP-Anruf einen Header hinzu. Ein nicht standardisierter SIP-Header sollte
    mit einem <code>X-</code> beginnen, wie etwa
    <code>X-Asterisk-Accountcode:</code>. Verwenden Sie diese Anwendung mit
    Vorsicht, denn das Hinzufügen eines falschen Headers kann Probleme
    verursachen. Mit dieser Applikation können keine SIP-Header verändert
    werden.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,SIPAddHeader(X-Asterisk-Account: ${CDR(accountcode)})yyy123yyysw
exten =&gt; 123,n,Dial(SIP/123)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SIPAddHeader' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Add a SIP header to the outbound callyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SIPAddHeader(Header: Content)yyy123yyysw
Adds a header to a SIP call placed with DIAL.yyy123yyysw
Remember to user the X-header if you are adding non-standard SIPyyy123yyysw
headers, like "X-Asterisk-Accountcode:". Use this with care.yyy123yyysw
Adding the wrong headers may jeopardize the SIP dialog.yyy123yyysw
Always returns 0yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="funktionen-sip_header" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sipdtmfmode">
    <title><code>SIPdtmfMode()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SIPdtmfMode()</code></secondary>
    </indexterm>

    <simpara>Ändert das DTMF-Verfahren für einen SIP-Anruf.</simpara>

    <synopsis>SIPdtmfMode(Methode)</synopsis>

    <simpara>Ändert den DTMF-Modus für einen Anruf, der von einem SIP-Channel
    ausgeht (nicht für einen Anruf auf einen SIP-Channel).
    <code>Methode</code> kann die Werte <code>inband</code> (RTP),
    <code>info</code> oder <code>rfc2833</code> annehmen.</simpara>

    <programlisting>exten =&gt; 123,n,SIPdtmfMode(rfc2833)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SIPDtmfMode' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Change the dtmfmode for a SIP callyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
SIPDtmfMode(inband|info|rfc2833): Changes the dtmfmode for a SIP callyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para>RFC 2833<footnote>
          <simpara><ulink
          url="http://www.ietf.org/rfc/rfc2833.txt">http://www.ietf.org/rfc/rfc2833.txt</ulink></simpara>
        </footnote>, RFC 2976<footnote>
          <simpara><ulink
          url="http://www.ietf.org/rfc/rfc2976.txt">http://www.ietf.org/rfc/rfc2976.txt</ulink></simpara>
        </footnote></para>
    </formalpara>
  </section>

  <section id="applikationen-sms">
    <title><code>SMS()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SMS()</code></secondary>
    </indexterm>

    <indexterm>
      <primary>SMS</primary>
    </indexterm>

    <simpara>Sendet oder empfängt SMS-Nachrichten.</simpara>

    <synopsis>SMS(<replaceable>Schlange</replaceable>[,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Regelt den Austausch von SMS-Nachrichten mit einem SMS-fähigen
    Telefon oder über ein SMS-Service-Center nach dem Protokoll ETSI ES 201
    912 auf analogen oder ISDN-Leitungen. Das Shell-Programm
    <command>smsq</command> verwendet dazu FSK<footnote>
        <simpara>Frequency Shift Keying, <xref
        linkend="glossar-fsk" /></simpara>
      </footnote> - die Funktion über komprimierte Codecs wie GSM ist daher
    unwahrscheinlich.</simpara>

    <para>Optionen:<variablelist termlength="3">
        <varlistentry>
          <term>a</term>

          <listitem>
            <simpara>Als antwortende Seite agieren.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>s</term>

          <listitem>
            <simpara>Als Service-Center agieren, das mit einem Telefon
            kommuniziert.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Alle Sende-/Empfangsschlangen werden in
    <filename>/var/spool/asterisk/sms/</filename> gespeichert: die Nachrichten
    vom Service-Center zum Telefon in
    <filename>sc-me.<replaceable>Schlange</replaceable>/</filename>, die
    Nachrichten vom Telefon zum SMSC in
    <filename>me-sc.<replaceable>Schlange</replaceable>/</filename>. In
    <filename>/var/log/asterisk/sms</filename> wird ein Log
    geschrieben.</simpara>

    <simpara>Beim Verbinden als Client (<code>a</code>) werden alle im
    Verzeichnis
    <filename>me-sc.<replaceable>Schlange</replaceable>/</filename> wartenden
    Nachrichten gesendet und dann gelöscht; die empfangenen werden in
    <filename>sc-me.<replaceable>Schlange</replaceable>/</filename> mit einem
    Timestamp im Dateinamen gespeichert. Wenn wir uns als Service-Center
    verbinden (<code>s</code>) ist das genau umgekehrt.</simpara>

    <para>Die Nachrichten-Dateien haben folgendes Format, wobei ausgelassene
    Parameter Default-Werte haben:<programlisting>oa=<replaceable>Originating Address (Absendernummer)</replaceable>yyy123yyysw</programlisting>Nationale
    Telefonnummer oder internationale mit vorangehendem <code>+</code> (z.B.
    <code>+49</code>).<programlisting>da=<replaceable>Destination Address (Empfängernummer)</replaceable>yyy123yyysw</programlisting>Nationale
    Telefonnummer oder internationale mit vorangehendem
    <code>+</code>.<programlisting>scts=<replaceable>Service Centre Time Stamp (Zeitstempel vom SC)</replaceable>yyy123yyysw</programlisting>Im
    Format <code>YYYY-MM-DD HH:MM:SS</code><programlisting>pid=<replaceable>Protocol Identifier (decimal octet value)</replaceable>yyy123yyysw</programlisting><programlisting>dcs=<replaceable>Data coding scheme (decimal octet value)</replaceable>yyy123yyysw</programlisting><programlisting>mr=<replaceable>Message reference (decimal octet value)</replaceable>yyy123yyysw</programlisting><programlisting>ud=<replaceable>Der Nachrichtentext</replaceable>yyy123yyysw</programlisting>Wenn
    andere Zeichen als 10, 13, 32-126, 128-255 (dezimal) in der Nachricht
    vorkommen, wird <code>ud=</code> durch <code>ud#</code> ersetzt und die
    Zeichen folgen hexadezimal kodiert.<programlisting>srr=<replaceable>Status Report Request (0|1)</replaceable>yyy123yyysw</programlisting><programlisting>rp=<replaceable>Return Path (0|1)</replaceable>yyy123yyysw</programlisting><programlisting>vp=<replaceable>Validity Period (Gültigkeitsdauer in Minuten)</replaceable>yyy123yyysw</programlisting>Beim
    Senden an ein SMSC müssen nur <code>da</code> und <code>ud</code>
    verwendet werden, <code>oa</code> wird ignoriert; beim Senden an ein
    Telefon sind nur <code>oa</code> und <code>ud</code> nötig,
    <code>da</code> wird ignoriert.</para>

    <para>Eine Extension zum Empfangen von Nachrichten könnte so aussehen
    (wenn 01930100 die Nummer des für uns zuständigen SMSC - hier T-Com -
    ist):<programlisting>[incoming]yyy123yyysw
exten =&gt; _X.,1,GotoIf($["${CALLERIDNUM}" = "01930100"]?sms-me-in,${EXTEN},1) yyy123yyysw
; oder so:yyy123yyysw
;exten =&gt; _X./_0193010.,1,Goto(sms-me-in,${EXTEN},1)yyy123yyysw
yyy123yyysw
[sms-me-in]yyy123yyysw
exten =&gt; _X.,1,Wait(1)yyy123yyysw
exten =&gt; _X.,n,SMS(me-eingang,a)yyy123yyysw
exten =&gt; _X.,n,System(handleincomingsms)yyy123yyysw
exten =&gt; _X.,n,Hangup()yyy123yyysw</programlisting>wobei
    <code>handleincomingsms</code> z.B. <code>smsq
    --process=<replaceable>befehl</replaceable> --queue=me-eingang</code> sein
    könnte, was für jede eingegangene Nachricht einen Befehl ausführt.</para>

    <para>Ausgehende Nachrichten sollten als Dateien geschrieben werden, könne
    aber auch mit folgendem (veralteten) Aufruf erzeugt werden (0193010 ist
    die Nummer des SMSC - hier T-Com):<programlisting>[outgoing]yyy123yyysw
exten = 0193010,1,Goto(sms-me-out,${CALLERIDNUM},1)yyy123yyysw
yyy123yyysw
[sms-me-out]yyy123yyysw
exten =&gt; _X.,1,Set(CDR(accountcode)=SMS)yyy123yyysw
exten =&gt; _X.,n,Set(smsFrom=${CALLERIDNUM})yyy123yyysw
exten =&gt; _X.,n,SMS(${smsFrom},s,${EXTEN},${smsText})  ; SMS erzeugenyyy123yyysw
exten =&gt; _X.,n,SMS(${smsFrom},s)                       ; sendenyyy123yyysw
exten =&gt; _X.,n,Hangup()yyy123yyysw</programlisting></para>

    <simpara>Weitere Informationen und viele Beispiele auf <ulink
    url="http://www.voip-info.org/wiki/view/Asterisk+cmd+Sms">http://www.voip-info.org/wiki/view/Asterisk+cmd+Sms</ulink>
    und <ulink
    url="http://www.pi4tel.de/asterisk/sms.shtml">http://www.pi4tel.de/asterisk/sms.shtml</ulink>.
    Man kann jedoch nicht erwarten, dass <code>SMS()</code> <quote>out of the
    box</quote> sofort funktioniert.</simpara>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SMS' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Communicates with SMS service centres and SMS capable analogue phonesyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SMS(name|[a][s]):  SMS handles exchange of SMS data with a call to/from SMS capabaleyyy123yyysw
phone or SMS PSTN service center. Can send and/or receive SMS messages.yyy123yyysw
Works to ETSI ES 201 912 compatible with BT SMS PSTN service in UKyyy123yyysw
Typical usage is to use to handle called from the SMS service centre CLI,yyy123yyysw
or to set up a call using 'outgoing' or manager interface to connectyyy123yyysw
service centre to SMS()yyy123yyysw
name is the name of the queue used in /var/spool/asterisk/smsyyy123yyysw
Arguments:yyy123yyysw
 a: answer, i.e. send initial FSK packet.yyy123yyysw
 s: act as service centre talking to a phone.yyy123yyysw
Messages are processed as per text file message queues.yyy123yyysw
smsq (a separate software) is a command to generate messageyyy123yyysw
queues and send messages.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-softhangup">
    <title><code>SoftHangup()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SoftHangup()</code></secondary>
    </indexterm>

    <simpara>Legt den angegebenen Channel auf.</simpara>

    <synopsis>SoftHangup(<replaceable>Technologie</replaceable>/<replaceable>Ressource</replaceable>[,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Legt den angegebenen Channel auf. Liefert stets 0 zurück. Der
    <code>Optionen</code>-Parameter kann den Buchstaben <code>a</code>
    enthalten, was bewirkt, dass alle Kanäle auf dem angegebenen Gerät (statt
    nur der Ressource) aufgelegt werden.</simpara>

    <programlisting>; alle Kanäle auflegen, die Zap/4 benutzen:yyy123yyysw
exten =&gt; 123,1,SoftHangup(Zap/4,a)yyy123yyysw
exten =&gt; 123,n,Wait(2)yyy123yyysw
exten =&gt; 123,n,Dial(Zap/4/1234567)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'SoftHangup' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Soft Hangup Applicationyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  SoftHangup(Technology/resource|options)yyy123yyysw
Hangs up the requested channel.  If there are no channels to hangup,yyy123yyysw
the application will report it.yyy123yyysw
- 'options' may contain the following letter:yyy123yyysw
     'a' : hang up all channels on a specified device instead of a single resourceyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-hangup" /></para>
    </formalpara>
  </section>

  <section id="applikationen-stopmonitor">
    <title><code>StopMonitor()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>StopMonitor()</code></secondary>
    </indexterm>

    <simpara>Beendet die Überwachung eines Channels.</simpara>

    <synopsis>StopMonitor()</synopsis>

    <simpara>Beendet die Überwachung (Aufnahme) eines Channels. Diese
    Anwendung hat keinerlei Auswirkungen, wenn der Channel momentan nicht
    überwacht wird.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Monitor(wav,monitor_test,mb)yyy123yyysw
exten =&gt; 123,n,SayDigits(12345678901234567890)yyy123yyysw
exten =&gt; 123,n,StopMonitor()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'StopMonitor' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Stop monitoring a channelyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
StopMonitoryyy123yyysw
Stops monitoring a channel. Has no effect if the channel is not monitoredyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-monitor" /></para>
    </formalpara>
  </section>

  <section id="applikationen-stopplaytones">
    <title><code>StopPlaytones()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>StopPlaytones()</code></secondary>
    </indexterm>

    <simpara>Beendet die Wiedergabe einer Liste von Tönen.</simpara>

    <synopsis>StopPlaytones()</synopsis>

    <simpara>Beendet die Wiedergabe der momentan laufenden Tonliste.</simpara>

    <programlisting>exten =&gt; 123,1,Playtones(busy)yyy123yyysw
exten =&gt; 123,n,Wait(2)yyy123yyysw
exten =&gt; 123,n,StopPlaytones()yyy123yyysw
exten =&gt; 123,n,Playtones(congestion)yyy123yyysw
exten =&gt; 123,n,Wait(2)yyy123yyysw
exten =&gt; 123,n,StopPlaytones()yyy123yyysw
exten =&gt; 123,n,Goto(1)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'StopPlayTones' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Stop playing a tone listyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Stop playing a tone listyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-playtones" />,
      <filename>indications.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-system">
    <title><code>System()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>System()</code></secondary>
    </indexterm>

    <simpara>Führt einen Shell-Befehl aus.</simpara>

    <synopsis>System(<replaceable>Befehl</replaceable>)</synopsis>

    <simpara>Führt durch die C-Funktion <code>system()</code> einen Befehl auf
    der Shell <command>sh</command> aus.</simpara>

    <simpara>Diese Anwendung ist der <code>TrySystem()</code>-Anwendung sehr
    ähnlich, abgesehen davon, dass sie -1 zurückliefert, falls sie den
    Systembefehl nicht ausführen kann, wohingegen die
    <code>TrySystem()</code>-Anwendung stets 0 zurückliefert.</simpara>

    <simpara>Setzt die Channelvariable <code>SYSTEMSTATUS</code> auf
    <code>SUCCESS</code> (erfolgreich ausgeführt), <code>FAILURE</code>
    (konnte nicht ausgeführt werden) oder (undokumentiert) auf
    <code>APPERROR</code> (Befehl ausgeführt aber mit Exit-Code ungleich
    0).</simpara>

    <programlisting>exten =&gt; s,1,System(echo '${DATETIME} - ${CALLERID} - ${CHANNEL}' &gt;&gt; /var/log/asterisk/anrufe)yyy123yyysw</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-trysystem" /></para>
    </formalpara>

    <note>
      <para>Als Alternative kann die Applikation <code>Backticks()</code> oder
      Funktion <code>BACKTICKS()</code> aus dem Modul
      <code>app_backticks</code><footnote>
          <simpara>von <ulink
          url="http://www.pbxfreeware.org/archives/2005/06/index.html">http://www.pbxfreeware.org/archives/2005/06/index.html</ulink>
          oder <ulink
          url="http://www.pbxfreeware.org/">http://www.pbxfreeware.org/</ulink></simpara>
        </footnote> verwenden, mit denen man auch die Ausgabe des Befehls
      erhält.</para>
    </note>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'System' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Execute a system commandyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  System(command): Executes a command  by  using  system(). If the commandyyy123yyysw
fails, the console should report a fallthrough. yyy123yyysw
Result of execution is returned in the SYSTEMSTATUS channel variable:yyy123yyysw
   FAILURE  Could not execute the specified commandyyy123yyysw
   SUCCESS  Specified command successfully executedyyy123yyysw
yyy123yyysw
Old behaviour:yyy123yyysw
If the command itself executes but is in error, and if there existsyyy123yyysw
a priority n + 101, where 'n' is the priority of the current instance,yyy123yyysw
then  the  channel  will  be  setup to continue at that priority level.yyy123yyysw
Note that this jump functionality has been deprecated and will only occuryyy123yyysw
if the global priority jumping option is enabled in extensions.conf.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-transfer">
    <title><code>Transfer()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Transfer()</code></secondary>
    </indexterm>

    <simpara>Übermittelt den Anruf zu einer anderen Extension.</simpara>

    <synopsis>Transfer([<replaceable>Technologie</replaceable>/]<replaceable>Ziel</replaceable>[,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Verlangt die Übermittlung des Anrufers zu einer gegebenen
    Extension. Wird <code>Technologie</code> (<code>SIP</code>,
    <code>IAX2</code> etc.) angegeben, werden nur Anrufe der gleichen
    Technologie transferiert. Bei SIP-Kanälen, die noch nicht beantwortet
    wurden, geschieht das mittels einer 302-<code>REDIRECT</code>-Nachricht an
    den Anrufer, bei beantworteten SIP-Kanälen mit <code>REFER</code>. Ziel
    kann auch z.B. <code>123456@sip.provider.tld</code> sein.</simpara>

    <simpara>Mit der Option <code>j</code> wird zur Priorität n+101
    gesprungen, falls der Transfer-Versuch fehlschlägt.</simpara>

    <simpara>Setzt die Channelvariable <code>TRANSFERSTATUS</code> auf
    <code>SUCCESS</code> (Transfer erfolgreich), <code>FAILURE</code>
    (Transfer fehlgeschlagen) oder <code>UNSUPPORTED</code> (vom Channel nicht
    unterstützt).</simpara>

    <programlisting>; Anrufe an Extension 123 zur Extension 130 umleiten:yyy123yyysw
exten =&gt; 123,1,Transfer(130)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Transfer' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Transfer caller to remote extensionyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Transfer([Tech/]dest[|options]):  Requests the remote caller be transferredyyy123yyysw
to a given destination. If TECH (SIP, IAX2, LOCAL etc) is used, onlyyyy123yyysw
an incoming call with the same channel technology will be transfered.yyy123yyysw
Note that for SIP, if you transfer before call is setup, a 302 redirectyyy123yyysw
SIP message will be returned to the caller.yyy123yyysw
yyy123yyysw
The result of the application will be reported in the TRANSFERSTATUSyyy123yyysw
channel variable:yyy123yyysw
       SUCCESS      Transfer succeededyyy123yyysw
       FAILURE      Transfer failedyyy123yyysw
       UNSUPPORTED  Transfer unsupported by channel driveryyy123yyysw
The option string many contain the following character:yyy123yyysw
'j' -- jump to n+101 priority if the channel transfer attemptyyy123yyysw
       failsyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-tryexec">
    <title><code>TryExec()</code></title>

    <indexterm>
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>TryExec()</code></secondary>
    </indexterm>

    <simpara>Versucht die Ausführung einer Dialplan-Applikation.</simpara>

    <synopsis>TryExec(<replaceable>Applikation</replaceable>(<replaceable>Argumente</replaceable>))</synopsis>

    <para>Versucht, wie <code>Exec()</code>, eine Applikation auszuführen,
    aber ohne den Anruf abzubrechen, wenn die Applikation nicht gefunden wird
    oder einen Fehler zurückgibt. Stattdessen wird die Variable
    <code>TRYSTATUS</code> auf einen der folgenden Werte gesetzt:<variablelist
        termlength="9">
        <varlistentry>
          <term><code>SUCCESS</code></term>

          <listitem>
            <simpara>Die Applikation hat 0 zurückgegeben.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>FAILED</code></term>

          <listitem>
            <simpara>Die Applikation hat einen Fehler zurückgegeben (Wert
            ungleich 0).</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>NOAPP</code></term>

          <listitem>
            <simpara>Die Applikation wurde nicht gefunden.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Für weitere Informationen siehe <xref
    linkend="applikationen-exec" />.</simpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-exec" />, <xref
      linkend="applikationen-execif" />, <xref
      linkend="applikationen-trysystem" /></para>
    </formalpara>
  </section>

  <section id="applikationen-trysystem">
    <title><code>TrySystem()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>TrySystem()</code></secondary>
    </indexterm>

    <simpara>Versucht die Ausführung eines Shell-Befehls.</simpara>

    <synopsis>TrySystem(<replaceable>Befehl</replaceable>)</synopsis>

    <simpara>Führt wie <code>System()</code> einen Befehl auf der Shell
    <command>sh</command> aus, liefert aber stets 0 zurück, wohingegen
    <code>System()</code> bei einem Fehler -1 zurückgibt.</simpara>

    <simpara>Setzt die Channelvariable <code>SYSTEMSTATUS</code> auf
    <code>SUCCESS</code> (erfolgreich ausgeführt), <code>FAILURE</code>
    (konnte nicht ausgeführt werden) oder <code>APPERROR</code> (Befehl
    ausgeführt aber mit Exit-Code ungleich 0).</simpara>

    <programlisting>exten =&gt; 123,1,TrySystem(echo 'Hallo Welt' &gt; /tmp/hallo.txt)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'TrySystem' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Try executing a system commandyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  TrySystem(command): Executes a command  by  using  system().yyy123yyysw
on any situation.yyy123yyysw
Result of execution is returned in the SYSTEMSTATUS channel variable:yyy123yyysw
   FAILURE  Could not execute the specified commandyyy123yyysw
   SUCCESS  Specified command successfully executedyyy123yyysw
   APPERROR Specified command successfully executed, but returned error codeyyy123yyysw
yyy123yyysw
Old behaviour:yyy123yyysw
If  the command itself executes but is in error, and ifyyy123yyysw
there exists a priority n + 101, where 'n' is the priority of the currentyyy123yyysw
instance, then  the  channel  will  be  setup  to continue at thatyyy123yyysw
priority level.  Otherwise, System will terminate.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-system" /></para>
    </formalpara>
  </section>

  <section id="applikationen-unpausequeuemember">
    <title><code>UnpauseQueueMember()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>UnpauseQueueMember()</code></secondary>
    </indexterm>

    <simpara>Hebt die Pausierung eines Warteschlangenmitglieds auf.</simpara>

    <synopsis>UnpauseQueueMember([<replaceable>Schlange</replaceable>,]<replaceable>Interface</replaceable>[,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Hebt die Pausierung für ein Mitglied einer Warteschlange auf,
    d.h. es kann wieder Anrufe entgegennehmen. Dies ist das Gegenstück zu
    <code>PauseQueueMember()</code> - siehe Beispiel dort. Die Arbeitsweise
    ist die gleiche, außer dass das gegebene Interface nicht pausiert, sondern
    wieder aktiviert wird.</simpara>

    <simpara>Setzt die Channel-Variable <code>UPQMSTATUS</code> auf
    <code>UNPAUSED</code> (ent-pausiert) oder <code>NOTFOUND</code> (nicht
    gefunden).</simpara>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'UnpauseQueueMember' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Unpauses a queue memberyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
   UnpauseQueueMember([queuename]|interface[|options]):yyy123yyysw
Unpauses (resumes calls to) a queue member.yyy123yyysw
This is the counterpart to PauseQueueMember and operates exactly theyyy123yyysw
same way, except it unpauses instead of pausing the given interface.yyy123yyysw
The option string may contain zero or more of the following characters:yyy123yyysw
       'j' -- jump to +101 priority when appropriate.yyy123yyysw
  This application sets the following channel variable upon completion:yyy123yyysw
     UPQMSTATUS       The status of the attempt to unpause a queue yyy123yyysw
                      member as a text string, one ofyyy123yyysw
            UNPAUSED | NOTFOUNDyyy123yyysw
Example: UnpauseQueueMember(|SIP/3000)yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-pausequeuemember" /></para>
    </formalpara>
  </section>

  <section id="applikationen-userevent">
    <title><code>UserEvent()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>UserEvent()</code></secondary>
    </indexterm>

    <simpara>Sendet ein beliebiges Event an das Manager-Interface.</simpara>

    <synopsis>UserEvent(<replaceable>Eventname</replaceable>[,<replaceable>Inhalt</replaceable>])</synopsis>

    <para>Sendet ein beliebiges Event an das Manager-Interface. Das
    resultierende Event-Paket hat folgendes Format:<programlisting>Event: UserEvent <replaceable>Eventname</replaceable>yyy123yyysw
Channel: <replaceable>Channelname</replaceable>yyy123yyysw
Uniqueid: <replaceable>Anruf-ID</replaceable>yyy123yyysw
[<replaceable>Inhalt</replaceable>]yyy123yyysw</programlisting></para>

    <simpara>Als Inhalt können weitere Zeilen in der Form <code>Feldname:
    Wert</code> angegeben werden. Mehrere Zeilen werden durch <code>|</code>
    (in älteren Asterisk-Versionen durch <code>,</code> oder <code>^</code>)
    getrennt.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,UserEvent(Test,Hinweis: Ich rufe jetzt ${XY} an.)yyy123yyysw
exten =&gt; 123,n,Dial(${XY})yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'UserEvent' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Send an arbitrary event to the manager interfaceyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  UserEvent(eventname[|body]): Sends an arbitrary event to the manageryyy123yyysw
interface, with an optional body representing additional arguments.  Theyyy123yyysw
body may be specified as a | delimeted list of headers. Each additionalyyy123yyysw
argument will be placed on a new line in the event. The format of theyyy123yyysw
event will be:yyy123yyysw
    Event: UserEventyyy123yyysw
    UserEvent: &lt;specified event name&gt;yyy123yyysw
    [body]yyy123yyysw
If no body is specified, only Event and UserEvent headers will be present.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>8,14c8,13yyy123yyysw
&lt;   UserEvent(eventname[|body]): Sends an arbitrary event to the manageryyy123yyysw
&lt; interface, with an optional body representing additional arguments.  Theyyy123yyysw
&lt; body may be specified as a | delimeted list of headers. Each additionalyyy123yyysw
&lt; argument will be placed on a new line in the event. The format of theyyy123yyysw
&lt; event will be:yyy123yyysw
&lt;     Event: UserEventyyy123yyysw
&lt;     UserEvent: &lt;specified event name&gt;yyy123yyysw
---yyy123yyysw
&gt;   UserEvent(eventname[|body]): Sends an arbitrary event to theyyy123yyysw
&gt; manager interface, with an optional body representing additionalyyy123yyysw
&gt; arguments.  The format of the event will be:yyy123yyysw
&gt;     Event: UserEvent&lt;specified event name&gt;yyy123yyysw
&gt;     Channel: &lt;channel name&gt;yyy123yyysw
&gt;     Uniqueid: &lt;call uniqueid&gt;yyy123yyysw
16,17c15,16yyy123yyysw
&lt; If no body is specified, only Event and UserEvent headers will be present.yyy123yyysw
&lt; yyy123yyysw
---yyy123yyysw
&gt; If the body is not specified, only Event, Channel, and Uniqueid fieldsyyy123yyysw
&gt; will be present.  Returns 0.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><filename>manager.conf</filename>, Asterisk Manager
      interface</para>
    </formalpara>
  </section>

  <section id="applikationen-verbose">
    <title><code>Verbose()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Verbose()</code></secondary>
    </indexterm>

    <simpara>Sendet beliebigen Text zum <quote>verbose output</quote> (Ausgabe
    im CLI).</simpara>

    <synopsis>Verbose([<replaceable>Level</replaceable>,]<replaceable>Nachricht</replaceable>)</synopsis>

    <simpara>Sendet die angegebene Nachricht an das CLI. Die Stufe
    <code>Level</code> kann als ganzzahliger Wert angegeben werden, um die
    Nachricht nur bei mindestens diesem Verbosity-Level anzuzeigen<footnote>
        <simpara>z.B. <command>asterisk -vvvr</command> für Level 3 - oder
        <command>set verbose 3</command> im CLI</simpara>
      </footnote>. Ist <code>Level</code> nicht angegeben, wird 0
    angenommen.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Verbose(1,Jemand ruft Extension 123 an.)yyy123yyysw
exten =&gt; 123,n,Playback(extension)yyy123yyysw
exten =&gt; 123,n,SayDigits(${EXTEN})yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Verbose' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Send arbitrary text to verbose outputyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Verbose([&lt;level&gt;|]&lt;message&gt;)yyy123yyysw
  level must be an integer value.  If not specified, defaults to 0.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-vmauthenticate">
    <title><code>VMAuthenticate()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>VMAuthenticate()</code></secondary>
    </indexterm>

    <simpara>Authentifiziert den Anrufer über ein
    Voicemail-Passwort.</simpara>

    <synopsis>VMAuthenticate([<replaceable>Mailbox</replaceable>][@<replaceable>Kontext</replaceable>][,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Verhält sich wie die <code>Authenticate()</code>-Anwendung, mit
    dem Unterschied, dass die Passwörter aus
    <filename>voicemail.conf</filename> (im optionalen VM-Kontext
    <code>Kontext</code>) gelesen werden.</simpara>

    <simpara>Ist eine Mailbox angegeben, wird nur das Passwort dieser Mailbox
    als gültig betrachtet. Ohne Angabe kann sich der Anrufer mit jedem(!)
    VM-Passwort authentifizieren; die Channelvariable
    <code>${AUTH_MAILBOX}</code> wird dann mit der authentifizierten Mailbox
    belegt.</simpara>

    <simpara>Mit der Option <code>s</code> wird die Ansage der Aufforderung
    unterdrückt.</simpara>

    <programlisting>; als Mailbox die Extension annehmen und authentifizieren:yyy123yyysw
exten =&gt; 123,1,VMAuthenticate(${EXTEN}@verkauf)yyy123yyysw
exten =&gt; 123,n,SayDigits(${AUTH_MAILBOX})yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'VMAuthenticate' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Authenticate with Voicemail passwordsyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  VMAuthenticate([mailbox][@context][|options]): This application behaves theyyy123yyysw
same way as the Authenticate application, but the passwords are taken fromyyy123yyysw
voicemail.conf.yyy123yyysw
  If the mailbox is specified, only that mailbox's password will be consideredyyy123yyysw
valid. If the mailbox is not specified, the channel variable AUTH_MAILBOX willyyy123yyysw
be set with the authenticated mailbox.yyy123yyysw
yyy123yyysw
  Options:yyy123yyysw
    s - Skip playing the initial prompts.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-authenticate" />,
      <filename>voicemail.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-voicemail">
    <title><code>VoiceMail()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>VoiceMail()</code></secondary>
    </indexterm>

    <simpara>Hinterlässt eine Voicemail-Nachricht in der angegebenen
    Mailbox.</simpara>

    <synopsis>VoiceMail(<replaceable>Mailbox</replaceable>[@<replaceable>Kontext</replaceable>][&amp;<replaceable>Mailbox</replaceable>[@<replaceable>Kontext</replaceable>][&amp;<replaceable>...</replaceable>]],<replaceable>Optionen</replaceable>)</synopsis>

    <para>alte Syntax:<synopsis>VoiceMail([s|u|b]<replaceable>Mailbox</replaceable>[@<replaceable>Kontext</replaceable>][&amp;<replaceable>Mailbox</replaceable>[@<replaceable>Kontext</replaceable>][&amp;<replaceable>...</replaceable>]])</synopsis></para>

    <simpara>Erlaubt dem Anrufer, in der angegebenen Mailbox eine
    Voicemail-Nachricht zu hinterlassen. Die Mailbox muss in
    <filename>voicemail.conf</filename> konfiguriert sein. Sind mehrere
    Mailboxen aufgelistet, wird die Begrüßung der ersten gespielt. Wenn die
    Mailbox nicht existiert, wird die Ausführung des Dialplans
    abgebrochen.</simpara>

    <simpara>Mit der Option <code>s</code> (silent) werden die Anweisungen zum
    Hinterlassen der Nachricht übersprungen. Mit <code>u</code> (unavailable)
    wird die Nicht-verfügbar-Nachricht abgespielt, falls vorhanden. Bei
    <code>b</code> (busy) wird die Besetzt-Nachricht gespielt (Datei
    <filename>busy</filename> statt <filename>unavail</filename>).</simpara>

    <simpara>Mit <code>j</code> wird bei einem Fehler zur Extension n+101
    gesprungen, wenn vorhanden.</simpara>

    <simpara>Drückt der Teilnehmer während der Eingabeaufforderung
    <code>0</code> (Null), geht der Anruf zur Extension <code>o</code>
    (kleiner Buchstabe o, Operator) im aktuellen Kontext über.</simpara>

    <simpara>Drückt der Teilnehmer während der Eingabeaufforderung
    <code>*</code>, geht der Anruf zur Extension <code>a</code> (Assistant) im
    aktuellen Kontext über.</simpara>

    <simpara>Gibt im Falle eines Fehlers, falls die Mailbox nicht gefunden
    wird oder der Teilnehmer auflegt -1 zurück, sonst 0. Setzt die
    Channelvariable <code>VMSTATUS</code> auf <code>SUCCESS</code> (Erfolg),
    <code>USEREXIT</code> (Abbruch durch Anrufer) oder <code>FAILED</code>
    (Fehler).</simpara>

    <programlisting>; den Anrufer zur Mailbox 123 leiten, mit Nicht-erreichbar-Nachricht:yyy123yyysw
exten =&gt; 123,1,VoiceMail(123,u)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'VoiceMail' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Leave a Voicemail messageyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  VoiceMail(mailbox[@context][&amp;mailbox[@context]][...][|options]): Thisyyy123yyysw
application allows the calling party to leave a message for the specifiedyyy123yyysw
list of mailboxes. When multiple mailboxes are specified, the greeting willyyy123yyysw
be taken from the first mailbox specified. Dialplan execution will stop if theyyy123yyysw
specified mailbox does not exist.yyy123yyysw
  The Voicemail application will exit if any of the following DTMF digits areyyy123yyysw
received:yyy123yyysw
    0 - Jump to the 'o' extension in the current dialplan context.yyy123yyysw
    * - Jump to the 'a' extension in the current dialplan context.yyy123yyysw
  This application will set the following channel variable upon completion:yyy123yyysw
    VMSTATUS - This indicates the status of the execution of the VoiceMailyyy123yyysw
               application. The possible values are:yyy123yyysw
               SUCCESS | USEREXIT | FAILEDyyy123yyysw
yyy123yyysw
  Options:yyy123yyysw
    b    - Play the 'busy' greeting to the calling party.yyy123yyysw
    g(#) - Use the specified amount of gain when recording the voicemailyyy123yyysw
           message. The units are whole-number decibels (dB).yyy123yyysw
    s    - Skip the playback of instructions for leaving a message to theyyy123yyysw
           calling party.yyy123yyysw
    u    - Play the 'unavailble greeting.yyy123yyysw
    j    - Jump to priority n+101 if the mailbox is not found or some otheryyy123yyysw
           error occurs.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>28c28yyy123yyysw
&lt;     u    - Play the 'unavailble greeting.yyy123yyysw
---yyy123yyysw
&gt;     u    - Play the 'unavailable greeting.yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-voicemailmain" />,
      <filename>voicemail.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-voicemailmain">
    <title><code>VoiceMailMain()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>VoiceMailMain()</code></secondary>
    </indexterm>

    <simpara>Betritt das Voicemailsystem.</simpara>

    <synopsis>VoiceMailMain([<replaceable>Mailbox</replaceable>][@<replaceable>Kontext</replaceable>][,<replaceable>Optionen</replaceable>])</synopsis>

    <para>alte Syntax:<synopsis>VoiceMailMain([[s|p]<replaceable>Mailbox</replaceable>][@<replaceable>Kontext</replaceable>])</synopsis></para>

    <simpara>Tritt zum Abrufen von Voicemail-Nachrichten in das
    Voicemail-System ein. Ohne Angabe der Mailbox wird der Anrufer zur Eingabe
    der Mailboxnummer aufgefordert.</simpara>

    <simpara>Mit der Option <code>s</code> wird die Überprüfung des Passworts
    übersprungen. Mit der Option <code>p</code> wird der Benutzer zur Eingabe
    einer Mailboxnummer aufgefordert, die angegebene Nummer der Eingabe
    vorangestellt und der daraus resultierende String als Mailboxnummer
    verwendet. Das ist nützlich bei der Bereitstellung virtueller
    Voicemailboxen (Virtual Hosting). Mit
    <code>a(<replaceable>Ordner</replaceable>)</code> wird direkt zum
    angegebenen Ordner (Default: <code>INBOX</code>) gesprungen.</simpara>

    <simpara>Ist ein Kontext spezifiziert, werden nur Mailboxen in diesem
    Voicemail-Kontext berücksichtigt.</simpara>

    <simpara>Liefert -1 zurück, wenn der Benutzer auflegt, sonst 0.</simpara>

    <programlisting>; zum Voicemail-Menü der Mailbox 123 im Voicemail-Kontext default gehen:yyy123yyysw
exten =&gt; 123,1,VoiceMailMain(123@default)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'VoiceMailMain' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Check Voicemail messagesyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  VoiceMailMain([mailbox][@context][|options]): This application allows theyyy123yyysw
calling party to check voicemail messages. A specific mailbox, and optionalyyy123yyysw
corresponding context, may be specified. If a mailbox is not provided, theyyy123yyysw
calling party will be prompted to enter one. If a context is not specified,yyy123yyysw
the 'default' context will be used.yyy123yyysw
yyy123yyysw
  Options:yyy123yyysw
    p    - Consider the mailbox parameter as a prefix to the mailbox thatyyy123yyysw
           is entered by the caller.yyy123yyysw
    g(#) - Use the specified amount of gain when recording a voicemailyyy123yyysw
           message. The units are whole-number decibels (dB).yyy123yyysw
    s    - Skip checking the passcode for the mailbox.yyy123yyysw
    a(#) - Skip folder prompt and go directly to folder specified.yyy123yyysw
           Defaults to INBOXyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>20,21d19yyy123yyysw
&lt;     a(#) - Skip folder prompt and go directly to folder specified.yyy123yyysw
&lt;            Defaults to INBOXyyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-voicemail" />,
      <filename>voicemail.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-wait">
    <title><code>Wait()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Wait()</code></secondary>
    </indexterm>

    <simpara>Wartet für eine in Sekunden vorgegebene Dauer.</simpara>

    <synopsis>Wait(<replaceable>Sekunden</replaceable>)</synopsis>

    <simpara>Wartet die angegebene Anzahl Sekunden und liefert dann 0 zurück.
    Es können auch Sekundenbruchteile übergeben werden (z.B. <code>1.5</code>
    für 1,5 Sekunden).</simpara>

    <programlisting>exten =&gt; s,1,Answer()yyy123yyysw
exten =&gt; s,n,Wait(1.5)                        ; 1,5 Sekunden wartenyyy123yyysw
exten =&gt; s,n,Background(enter-ext-of-person)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Wait' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Waits for some timeyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Wait(seconds): This application waits for a specified number of seconds.yyy123yyysw
Then, dialplan execution will continue at the next priority.yyy123yyysw
  Note that the seconds can be passed with fractions of a second. For example,yyy123yyysw
'1.5' will ask the application to wait for 1.5 seconds.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-waitexten" /></para>
    </formalpara>
  </section>

  <section id="applikationen-waitexten">
    <title><code>WaitExten()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>WaitExten()</code></secondary>
    </indexterm>

    <simpara>Wartet auf die Eingabe einer Extension.</simpara>

    <synopsis>WaitExten([<replaceable>Sekunden</replaceable>][,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Wartet die angegebene Anzahl Sekunden auf die Eingabe einer neuen
    Extension durch den Teilnehmer und liefert dann 0 zurück. Es können auch
    Sekundenbruchteile übergeben werden (z.B. <code>1.5</code> für 1,5
    Sekunden). Falls keine Zeitdauer spezifiziert wird, wird die Standardfrist
    (Default Extension-Timeout) gewartet.</simpara>

    <simpara>Als Option ist <code>m</code> möglich, was dem Anrufer während
    auf eine Eingabe gewartet wird, Wartemusik vorspielt. Dabei kann optional
    in runden Klammern die Musikklasse angegeben werden, z.B.
    <code>m(rock)</code>.</simpara>

    <programlisting>; 10 Sekunden auf die Eingabe einer Extension warten:yyy123yyysw
exten =&gt; s,1,Answer()yyy123yyysw
exten =&gt; s,n,Playback(enter-ext-of-person)yyy123yyysw
exten =&gt; s,n,WaitExten(10)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'WaitExten' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Waits for an extension to be enteredyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  WaitExten([seconds][|options]): This application waits for the user to enteryyy123yyysw
a new extension for a specified number of seconds.yyy123yyysw
  Note that the seconds can be passed with fractions of a second. For example,yyy123yyysw
'1.5' will ask the application to wait for 1.5 seconds.yyy123yyysw
  Options:yyy123yyysw
    m[(x)] - Provide music on hold to the caller while waiting for an extension.yyy123yyysw
               Optionally, specify the class for music on hold within parenthesis.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-wait" /></para>
    </formalpara>
  </section>

  <section id="applikationen-waitforring">
    <title><code>WaitForRing()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>WaitForRing()</code></secondary>
    </indexterm>

    <simpara>Wartet die in Sekunden vorgegebene Dauer auf ein
    Klingelzeichen.</simpara>

    <synopsis>WaitForRing(<replaceable>Timeout</replaceable>)</synopsis>

    <simpara>Wartet nach dem Abschluss des nächsten Klingelns
    <code>Timeout</code> Sekunden auf ein Klingelzeichen.</simpara>

    <simpara>Liefert bei Erfolg 0, falls aufgelegt wurde, -1 zurück.</simpara>

    <programlisting>; 5 Sekunden auf Klingeln warten, dann ein paar DTMF-Töne senden:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,WaitForRing(5)yyy123yyysw
exten =&gt; 123,n,SendDTMF(1234)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'WaitForRing' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Wait for Ring Applicationyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  WaitForRing(timeout)yyy123yyysw
Returns 0 after waiting at least timeout seconds. andyyy123yyysw
only after the next ring has completed.  Returns 0 onyyy123yyysw
success or -1 on hangupyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-waitforsilence">
    <title><code>WaitForSilence()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>WaitForSilence()</code></secondary>
    </indexterm>

    <simpara>Wartet auf eine festgelegte Dauer von Stille.</simpara>

    <synopsis>WaitForSilence(<replaceable>Dauer</replaceable>[,<replaceable>Wiederholungen</replaceable>])</synopsis>

    <simpara>Wartet auf <code>Dauer</code> Millisekunden Stille. Mit der
    Angabe von <code>Wiederholungen</code> wird auf soviele Auftreten von
    Stille gewartet, sonst auf das einmalige Auftreten.</simpara>

    <programlisting>; auf 2 Vorkommen von Stille von jeweils 500 ms warten:yyy123yyysw
exten =&gt; 123,1,WaitForSilence(500,2)yyy123yyysw
exten =&gt; 123,n,Playback(tt-weasels)yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'WaitForSilence' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Waits for a specified amount of silenceyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  WaitForSilence(silencerequired[|iterations][|timeout]) yyy123yyysw
Wait for Silence: Waits for up to 'silencerequired' yyy123yyysw
milliseconds of silence, 'iterations' times or once if omitted.yyy123yyysw
An optional timeout specified the number of seconds to returnyyy123yyysw
after, even if we do not receive the specified amount of silence.yyy123yyysw
Use 'timeout' with caution, as it may defeat the purpose of thisyyy123yyysw
application, which is to wait indefinitely until silence is detectedyyy123yyysw
on the line.  This is particularly useful for reverse-911-typeyyy123yyysw
call broadcast applications where you need to wait for an answeringyyy123yyysw
machine to complete its spiel before playing a message.yyy123yyysw
The timeout parameter is specified only to avoid an infinite loop inyyy123yyysw
cases where silence is never achieved.  Typically you will want toyyy123yyysw
include two or more calls to WaitForSilence when dealing with an answeringyyy123yyysw
machine; first waiting for the spiel to finish, then waiting for the beep, etc.yyy123yyysw
yyy123yyysw
Examples:yyy123yyysw
  - WaitForSilence(500|2) will wait for 1/2 second of silence, twiceyyy123yyysw
  - WaitForSilence(1000) will wait for 1 second of silence, onceyyy123yyysw
  - WaitForSilence(300|3|10) will wait for 300ms silence, 3 times,yyy123yyysw
     and returns after 10 sec, even if silence is not detectedyyy123yyysw
yyy123yyysw
Sets the channel variable WAITSTATUS with to one of these values:yyy123yyysw
SILENCE - if exited with silence detectedyyy123yyysw
TIMEOUT - if exited without silence detected after timeoutyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>8,23c8,10yyy123yyysw
&lt;   WaitForSilence(silencerequired[|iterations][|timeout]) yyy123yyysw
&lt; Wait for Silence: Waits for up to 'silencerequired' yyy123yyysw
&lt; milliseconds of silence, 'iterations' times or once if omitted.yyy123yyysw
&lt; An optional timeout specified the number of seconds to returnyyy123yyysw
&lt; after, even if we do not receive the specified amount of silence.yyy123yyysw
&lt; Use 'timeout' with caution, as it may defeat the purpose of thisyyy123yyysw
&lt; application, which is to wait indefinitely until silence is detectedyyy123yyysw
&lt; on the line.  This is particularly useful for reverse-911-typeyyy123yyysw
&lt; call broadcast applications where you need to wait for an answeringyyy123yyysw
&lt; machine to complete its spiel before playing a message.yyy123yyysw
&lt; The timeout parameter is specified only to avoid an infinite loop inyyy123yyysw
&lt; cases where silence is never achieved.  Typically you will want toyyy123yyysw
&lt; include two or more calls to WaitForSilence when dealing with an answeringyyy123yyysw
&lt; machine; first waiting for the spiel to finish, then waiting for the beep, etc.yyy123yyysw
&lt; yyy123yyysw
&lt; Examples:yyy123yyysw
---yyy123yyysw
&gt;   WaitForSilence(x[|y]) Wait for Silence: Waits for up to 'x' yyy123yyysw
&gt; milliseconds of silence, 'y' times or 1 if omittedyyy123yyysw
&gt; Set the channel variable WAITSTATUS with to one of these values:SILENCE - if silence of x ms was detectedTIMEOUT - if silence of x ms was not detected.Examples:yyy123yyysw
26,31d12yyy123yyysw
&lt;   - WaitForSilence(300|3|10) will wait for 300ms silence, 3 times,yyy123yyysw
&lt;      and returns after 10 sec, even if silence is not detectedyyy123yyysw
&lt; yyy123yyysw
&lt; Sets the channel variable WAITSTATUS with to one of these values:yyy123yyysw
&lt; SILENCE - if exited with silence detectedyyy123yyysw
&lt; TIMEOUT - if exited without silence detected after timeoutyyy123yyysw</screen></para>
      </formalpara>
    </note>
  </section>

  <section id="applikationen-waitmusiconhold">
    <title><code>WaitMusicOnHold()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>WaitMusicOnHold()</code></secondary>
    </indexterm>

    <simpara>Wartet für eine in Sekunden vorgegebene Dauer, wobei Wartemusik
    abgespielt wird.</simpara>

    <synopsis>WaitMusicOnHold(<replaceable>Dauer</replaceable>)</synopsis>

    <simpara>Spielt die in Sekunden angegebene Dauer Wartemusik. Ist keine
    Wartemusik vorhanden, wird die Verzögerung dennoch ausgeführt, jedoch ohne
    Musik.</simpara>

    <simpara>Liefert nach Abschluss 0, oder -1, falls aufgelegt
    wurde.</simpara>

    <programlisting>; 5 Minuten Wartemusik:yyy123yyysw
exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,WaitMusicOnHold(300)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'WaitMusicOnHold' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Wait, playing Music On Holdyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
WaitMusicOnHold(delay): Plays hold music specified number of seconds.  Returns 0 whenyyy123yyysw
done, or -1 on hangup.  If no hold music is available, the delay willyyy123yyysw
still occur with no sound.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><filename>musiconhold.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-while">
    <title><code>While()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>While()</code></secondary>
    </indexterm>

    <simpara>Beginnt eine While-Schleife.</simpara>

    <synopsis>While(<replaceable>Ausdruck</replaceable>)</synopsis>

    <simpara>Beginnt eine While-Schleife. Die Ausführung kehrt zu diesem Punkt
    zurück, wenn <code>EndWhile()</code> aufgerufen wird, solange bis der
    Ausdruck nicht länger wahr ist. Danach wird die Ausführung nach
    <code>EndWhile()</code> fortgesetzt.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,Set(i=1)yyy123yyysw
exten =&gt; 123,n,While($[${i} &lt; 5])yyy123yyysw
exten =&gt; 123,n,SayNumber(${i})yyy123yyysw
exten =&gt; 123,n,Set(i=$[${i} + 1])yyy123yyysw
exten =&gt; 123,n,EndWhile()yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'While' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Start a while loopyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
Usage:  While(&lt;expr&gt;)yyy123yyysw
Start a While Loop.  Execution will return to this point whenyyy123yyysw
EndWhile is called until expr is no longer true.yyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>5c5yyy123yyysw
&lt; Start a while loopyyy123yyysw
---yyy123yyysw
&gt; Start A While Loopyyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-endwhile" />, <xref
      linkend="applikationen-gotoif" /></para>
    </formalpara>
  </section>

  <section id="applikationen-zapateller">
    <title><code>Zapateller()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Zapateller()</code></secondary>
    </indexterm>

    <simpara>Verwendet einen speziellen Informationston, um automatisierte
    Werbeanrufe abzublocken.</simpara>

    <synopsis>Zapateller(<replaceable>Optionen</replaceable>)</synopsis>

    <simpara>Generiert einen speziellen Informationston (SIT, special
    information tone, "Kein Anschluss unter dieser Nummer"), um
    Telefonverkäufer und andere maschinengewählte Anrufe davon abzuhalten, Sie
    zu belästigen.</simpara>

    <para>Die folgenden Optionen sind verfügbar (ggf. durch <code>|</code>
    getrennt):<variablelist termlength="12">
        <varlistentry>
          <term><code>answer</code></term>

          <listitem>
            <simpara>Bewirkt, dass die Leitung beantwortet wird, bevor der Ton
            abgespielt wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>nocallerid</code></term>

          <listitem>
            <simpara>Bewirkt, dass Zapateller den Ton nur abspielt, wenn keine
            Caller-ID-Information verfügbar ist.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>[incoming]yyy123yyysw
; im Kontext incoming die SIT-Töne spielen, wenn keine Caller-ID vorhanden ist:yyy123yyysw
exten =&gt; s,1,Zapateller(nocallerid)yyy123yyysw
exten =&gt; s,n,Wait(3)yyy123yyysw
exten =&gt; s,n,Answer()yyy123yyysw</programlisting>

    <note>
      <formalpara>
        <title>Interner Hilfetext zu dieser Applikation in Asterisk
        1.4:</title>

        <para><screen>  -= Info about application 'Zapateller' =- yyy123yyysw
yyy123yyysw
[Synopsis]yyy123yyysw
Block telemarketers with SITyyy123yyysw
yyy123yyysw
[Description]yyy123yyysw
  Zapateller(options):  Generates special information tone to blockyyy123yyysw
telemarketers from calling you.  Options is a pipe-delimited list ofyyy123yyysw
options.  The following options are available:yyy123yyysw
'answer' causes the line to be answered before playing the tone,yyy123yyysw
'nocallerid' causes Zapateller to only play the tone if thereyyy123yyysw
is no callerid information available.  Options should be separated by |yyy123yyysw
charactersyyy123yyysw</screen></para>
      </formalpara>

      <formalpara>
        <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

        <para><screen>- keine - yyy123yyysw</screen></para>
      </formalpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-privacymanager" /></para>
    </formalpara>
  </section>

  <section id="applikationen-zapbarge">
    <title><code>ZapBarge()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ZapBarge()</code></secondary>
    </indexterm>

    <simpara>Tritt in einen Zap-Channel ein und überwacht ihn.</simpara>

    <synopsis>ZapBarge([<replaceable>Channel</replaceable>])</synopsis>

    <simpara>Tritt in den angegebenen Zap-Channel ein. Die anderen Teilnehmer
    auf dem Channel können Sie dabei nicht hören und werden auch sonst keine
    Anzeichen wahrnehmen, dass ihr Anruf überwacht wird.</simpara>

    <simpara>Ist der Channel nicht angegeben, werden Sie zunächst zur Eingabe
    einer Channelnummer aufgefordert. Geben Sie z.B. <code>4#</code> für Zap/4
    ein.</simpara>

    <simpara>Liefert -1, wenn der Anrufer auflegt. Ist unabhängig von dem
    Zustand, dass der Channel überwacht wird.</simpara>

    <programlisting>exten =&gt; 123,1,ZapBarge(Zap/2)yyy123yyysw
exten =&gt; 123,n,Hangup()yyy123yyysw</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-zapscan" />, <xref
      linkend="applikationen-chanspy" /></para>
    </formalpara>
  </section>

  <section id="applikationen-zapras">
    <title><code>ZapRAS()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ZapRAS()</code></secondary>
    </indexterm>

    <simpara>Führt den Zaptel ISDN Remote Access Server aus.</simpara>

    <synopsis>ZapRAS(<replaceable>args</replaceable>)</synopsis>

    <simpara>Startet über <command>pppd</command> einen ISDN-RAS-Server auf
    dem aktuellen Channel. Der Channel muss ein freier Channel (z.B. PRI
    Source) und ein Zaptel-Channel sein, um diese Funktion durchführen zu
    können. (Eine Modem-Emulation ist nicht enthalten.)</simpara>

    <simpara>Um Zaptel zu kennen, muss <command>pppd</command> entsprechend
    vorbereitet sein. <code>Argumente</code> ist eine Liste von durch das
    <code>|</code>-Symbol getrennten Argumenten<footnote>
        <simpara>deren Erklärung hier zu weit führen würde; siehe <ulink
        url="http://www.voip-info.org/wiki/view/Asterisk+cmd+ZapRAS">http://www.voip-info.org/wiki/view/Asterisk+cmd+ZapRAS</ulink></simpara>
      </footnote>.</simpara>

    <simpara>Liefert stets -1 zurück.</simpara>

    <simpara>Diese Anwendungen ist nur für die Benutzung mit ISDN-Leitungen
    ausgelegt, und Ihr Kernel muss mit einem Patch für die Unterstützung von
    <code>ZapRAS()</code> versehen sein. Außerdem muss Ihr Kernel
    ppp-Unterstützung bereitstellen.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()yyy123yyysw
exten =&gt; 123,n,ZapRAS(debug|64000|noauth|netmask|255.255.255.0|10.0.0.1:10.0.0.2)yyy123yyysw</programlisting>
  </section>

  <section id="applikationen-zapscan">
    <title><code>ZapScan()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ZapScan()</code></secondary>
    </indexterm>

    <simpara>Durchsucht Zap-Kanäle, um Anrufe zu überwachen.</simpara>

    <synopsis>ZapScan([<replaceable>Gruppe</replaceable>])</synopsis>

    <simpara>Erlaubt einem Call-Center-Manager, Zap-Kanäle auf bequeme Art zu
    überwachen. Benutzen Sie <code>#</code> um den nächsten Channel
    auszuwählen, oder <code>*</code> zum Beenden. Sie können die Abfrage auf
    eine bestimmte Channelgruppe begrenzen, indem Sie den Parameter
    <code>Gruppe</code> verwenden.</simpara>

    <programlisting>exten =&gt; 123,1,ZapScan()yyy123yyysw</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-zapbarge" />, <xref
      linkend="applikationen-chanspy" /></para>
    </formalpara>
  </section>
</section>
