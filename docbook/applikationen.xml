<?xml version="1.0" encoding="ISO-8859-1"?>
<section id="applikationen" lang="de" revision="$Revision: 1.33 $">
  <!--% Copyright (c) 2006 - Stefan Wintermeyer <sw@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title>Applikationen im Dialplan</title>

  <simpara>Im Folgenden werden die Applikationen beschrieben, die im Dialplan
  (also in der <filename>/etc/asterisk/extensions.conf</filename>) verwendet
  werden können. Beachten Sie bitte, dass nur solche Applikationen in Ihrer
  Installation verfügbar sind, die in der
  <filename>/etc/asterisk/modules.conf</filename> im Abschnitt
  <code>[modules]</code> durch <code>autoload=yes</code> oder explizites
  <code>load =&gt; app_<replaceable>applikationsname</replaceable>.so</code>
  geladen wurden. Welche in Ihrer Asterisk-Version vorhanden sind, erfahren
  Sie, indem Sie im Asterisk-CLI <userinput>show applications</userinput> oder
  <userinput>show application
  <replaceable>Applikationsname</replaceable></userinput> eingeben.</simpara>

  <simpara>Der Begriff <quote>Applikationen</quote> (oder
  <quote>Befehle</quote>) darf nicht mit <quote>Funktionen</quote> verwechselt
  werden, die ggf. innerhalb eines Befehlsaufrufs stehen.
  <quote>Applikationen</quote> (applications) ist vielleicht irreführend, aber
  der gängige Ausdruck. Einige Applikationen älterer Asterisk-Versionen wurden
  mittlerweile durch Funktionen ersetzt und werden hier nicht mehr erwähnt (da
  sie nicht mehr verwendet werden sollen).</simpara>

  <sidebar>
    <simpara>Ein Hinweis am Rande: Die Konfigurationsdateien von Asterisk
    verwenden leider ein recht schwammiges Format (als INI bekannt), für das
    nie eine offizielle <emphasis>Grammatik</emphasis> veröffentlicht wurde.
    Der Parser geht auch nicht den üblichen Weg von lexikalischer Analyse,
    Tokenizing und syntaktischer Analyse. Aus diesem Grund steigt übrigens der
    Asterisk-Ableger <ulink
    url="http://www.openpbx.org/"><citetitle>OpenPBX</citetitle></ulink> auf
    die von Mac OS X bekannten aber auch auf anderen Plattformen verfügbaren
    <quote>Property Lists</quote> (<filename>.plist</filename>) als Format für
    Konfigurationsdateien um.</simpara>

    <simpara>Hier sei nur gesagt, dass es aufgrund mangelnder Spezifikation
    nicht immer klar ist, an welcher Stelle z.B. Leerzeichen erlaubt sind oder
    wo Anführungszeichen erwartet werden. Meist werden mehrere Schreibweisen
    erkannt. Im Zweifelsfall hilft nur Ausprobieren, wenn eine Schreibweise in
    Ihrer Asterisk-Version nicht funktioniert. Sollten Sie Fehler entdecken,
    wird um Rückmeldung gebeten.</simpara>
  </sidebar>

  <para>Es ist oft möglich, Parameter auszulassen. Wenn ausgelassene Parameter
  nicht am Ende stehen, müssen Sie trotzdem ein Komma angeben, um anzuzeigen,
  dass der Parameter leer ist (also der Default-Wert verwendet wird), z.B.
  so:<programlisting>exten =&gt; s,1,Dial(IAX2/User:Passwort@example.com/123,,flags)</programlisting></para>

  <para>Im Allgemeinen kann gesagt werden, dass Fehler beim Ausführen einer
  Applikation durch Rückgabe des Wertes -1 ausgedrückt werden.</para>

  <important>
    <para>Bitte beachten Sie, dass, abhängig von der eingesetzten
    Asterisk-Version die Parameter durch <code>,</code> (Komma) oder
    <code>|</code> (Pipe) getrennt werden. In diesem Buch wird hauptsächlich
    das <code>,</code> (Komma) benutzt.</para>
  </important>

  <simpara>Wer Asterisk schon länger kennt, wird sich vielleicht wundern,
  warum hier die eine oder andere Applikation nicht aufgeführt ist. Das hat
  den einfachen Grund, dass bereits in Asterisk 1.2 etliche Applikationen als
  <quote>deprecated</quote> (= veraltet, soll nicht mehr verwendet werden)
  gekennzeichnet sind und in 1.4 nicht mehr existieren. Solche Befehle werden
  hier nicht mehr beschrieben, Sie finden die entsprechenden Funktionen in
  <xref linkend="funktionen" />.</simpara>

  <simpara>In den Beispielen wird oft die willkürlich gewählte Extension
  <code>123</code> und die Priorität <code>1</code> verwendet, was in der
  Praxis natürlich nicht immer sinnvoll ist.</simpara>

  <simpara>Um leichtere Verwendung als Nachschlagewerk zu ermöšglichen, sind
  die Applikationen in alphabetischer Reihenfolge aufgeführt. Da sie sich aber
  auch sinnvoll gruppieren lassen, finden Sie hier einen entsprechenden
  Index:</simpara>

  <para><emphasis role="bold">Anruf-Verwaltung</emphasis> (abheben,
  durchstellen, auflegen, ...)<simplelist type="vert">
      <member><xref linkend="applikationen-answer" /> - Abheben</member>

      <member><xref linkend="applikationen-busy" /> - Besetztzeichen
      signalisieren</member>

      <member><xref linkend="applikationen-chanisavail" /> - Prüfen, ob ein
      Chanel verfügbar ist</member>

      <member><xref linkend="applikationen-congestion" /> - Stau
      signalisieren</member>

      <member><xref linkend="applikationen-dial" /> - Einen Anruf durchstellen
      / mit einem Chanel verbinden</member>

      <member><xref linkend="applikationen-disa" /> - DISA (Direct Inward
      System Access)</member>

      <member><xref linkend="applikationen-hangup" /> - Auflegen</member>

      <member><xref linkend="applikationen-retrydial" /> - <code>Dial()</code>
      mit <quote>Wahlwiederholung</quote></member>

      <member><xref linkend="applikationen-ringing" /> - Klingeln
      signalisieren</member>
    </simplelist></para>

  <para><emphasis role="bold">Flusskontrolle und
  Timeouts</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-endwhile" /> - Ende einer
      While-Schleife</member>

      <member><xref linkend="applikationen-execif" /> - Bedingtes
      Ausführen</member>

      <member><xref linkend="applikationen-gosub" /> - Zu einer Unterroutine
      springen</member>

      <member><xref linkend="applikationen-gosubif" /> - Bedingtes
      <code>Gosub()</code></member>

      <member><xref linkend="applikationen-goto" /> - Zu einer Priorität,
      Extension oder anderem Kontext springen</member>

      <member><xref linkend="applikationen-gotoif" /> - Bedingtes
      <code>Goto()</code></member>

      <member><xref linkend="applikationen-gotoiftime" /> - Bedingtes
      <code>Gosub()</code> je nach Datum/Uhrzeit</member>

      <member><xref linkend="applikationen-macro" /> - Macro aufrufen</member>

      <member><xref linkend="applikationen-random" /> - Zufällig im Dial-Plan
      springen</member>

      <member><xref linkend="applikationen-responsetimeout" /> - Maximale
      Antwortzeit festlegen</member>

      <member><xref linkend="applikationen-return" /> - Aus einem
      <code>Gosub()</code> oder <code>GosubIf()</code> zurückkehren</member>

      <member><xref linkend="applikationen-stackpop" /> - Eine Adresse vom
      Gosub-Stack entfernen und zurückgeben ohne dahin zurückzukehren</member>

      <member><xref linkend="applikationen-while" /> - Anfang einer
      While-Schleife</member>
    </simplelist></para>

  <para><emphasis role="bold">Anrufer-Kennung (Caller-ID, Name,
  ...)</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-callingpres" /> - Anzeige der
      Caller-ID verändern</member>

      <member><xref linkend="applikationen-lookupblacklist" /> - Caller-ID in
      Blacklist nachschlagen</member>

      <member><xref linkend="applikationen-lookupcidname" /> - Caller-ID-Name
      in Datenbank nachschlagen</member>

      <member><xref linkend="applikationen-privacymanager" /> - Eingabe einer
      Telefonnummer verlangen (falls ohne Caller-ID)</member>

      <member><xref linkend="applikationen-setcallerpres" /> - Caller-ID
      setzen, unanhängig vom Chanel</member>

      <member><xref linkend="applikationen-softhangup" /> - Auflegen
      verlangen</member>

      <member><xref linkend="applikationen-zapateller" /> - Werbeanrufe
      blockieren</member>
    </simplelist></para>

  <para><emphasis role="bold">Gesprächsprotokolle (CDRs)</emphasis><simplelist
      type="vert">
      <member><xref linkend="applikationen-appendcdruserfield" /> - Daten ans
      CDR-User-Feld anhängen</member>

      <member><xref linkend="applikationen-forkcdr" /> - Den CDR in zwei
      getrennte Einträge aufspalten</member>

      <member><xref linkend="applikationen-nocdr" /> - CDR für diesen Anruf
      deaktivieren</member>

      <member><xref linkend="applikationen-resetcdr" /> - CDR-Eintrag
      zurücksetzen</member>

      <member><xref linkend="applikationen-setaccount" /> - Die
      CDR-Kontonummer setzen</member>

      <member><xref linkend="applikationen-setamaflags" /> - AMA-Flags
      setzen</member>

      <member><xref linkend="applikationen-setcdruserfield" /> - Das
      CDR-User-Feld setzen</member>
    </simplelist></para>

  <para><emphasis role="bold">Voicemail</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-directory" /> -
      Dial-by-name-Telefonbuch anbieten</member>

      <member><xref linkend="applikationen-mailboxexists" /> - Prüft, ob
      Mailbox existiert</member>

      <member><xref linkend="applikationen-voicemail" /> -
      Anrufbeantworter</member>

      <member><xref linkend="applikationen-voicemailmain" /> -
      Anrufbeantworter abhören</member>

      <member><xref linkend="applikationen-vmauthenticate" /> - User anhand
      der <filename>voicemail.conf</filename> authentifizieren</member>
    </simplelist></para>

  <para><emphasis role="bold">Konferenzen</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-meetme" /> -
      MeetMe-Konferenz</member>

      <member><xref linkend="applikationen-meetmeadmin" /> - MeetMe-Konferenz
      verwalten</member>

      <member><xref linkend="applikationen-meetmecount" /> - Anzahl der
      Teilnehmer einer MeetMe-Konferenz</member>
    </simplelist></para>

  <para><emphasis role="bold">Variablen verändern</emphasis><simplelist
      type="vert">
      <member><xref linkend="applikationen-importvar" /> - Variable von einem
      Chanel importieren</member>

      <member><xref linkend="applikationen-read" /> - Eine Variable (Ziffern)
      vom User einlesen</member>

      <member><xref linkend="applikationen-set" /> - Eine Chanel-Variable
      setzen</member>
    </simplelist></para>

  <para><emphasis role="bold">Musik-/Sprachausgabe</emphasis><simplelist
      type="vert">
      <member><xref linkend="applikationen-background" /> - Im Hintergrund
      eine Sound-Datei spielen</member>

      <member><xref linkend="applikationen-backgrounddetect" /> -
      <code>Background()</code> mit Spracherkennung</member>

      <member><xref linkend="applikationen-controlplayback" /> -
      <code>Playback()</code> mit Vor-/Zurückspulen und Abbrechen</member>

      <member><xref linkend="applikationen-echo" /> - Audio-Eingabe
      widergeben</member>

      <member><xref linkend="applikationen-festival" /> - Text mit dem
      Festival-Synthesizer sprechen</member>

      <member><xref linkend="applikationen-flite" /> - Text mit dem
      Festival-Lite-Synthesizer sprechen</member>

      <member><xref linkend="applikationen-milliwatt" /> - Einen konstanten
      1000-Hz-Ton mit 0 dbm erzeugen</member>

      <member><xref linkend="applikationen-mp3player" /> - MP3-Datei oder
      -Stream spielen</member>

      <member><xref linkend="applikationen-musiconhold" /> - Wartemusik
      spielen</member>

      <member><xref linkend="applikationen-playback" /> - Eine Sound-Datei
      spielen</member>

      <member><xref linkend="applikationen-playtones" /> - Töne
      spielen</member>

      <member><xref linkend="applikationen-progress" /> - Audio vor dem
      Abheben spielen</member>

      <member><xref linkend="applikationen-sayalpha" /> - Buchstabieren
      (alphanumerisch)</member>

      <member><xref linkend="applikationen-saydigits" /> - Ziffern
      ansagen</member>

      <member><xref linkend="applikationen-saynumber" /> - Nummer
      ansagen</member>

      <member><xref linkend="applikationen-sayphonetic" /> - Buchstabieren
      (mit
      <filename>sounds/phonetic/<replaceable>Zeichen</replaceable>_p.gsm</filename>)</member>

      <member><xref linkend="applikationen-sayunixtime" /> - Datum/Uhrzeit
      ansagen</member>

      <member><xref linkend="applikationen-stopplaytones" /> -
      <code>Playtones()</code> beenden</member>
    </simplelist></para>

  <para><emphasis role="bold">Aufzeichnen</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-agentmonitoroutgoing" /> -
      Ausgehende Anrufe eines Agenten aufzeichnen</member>

      <member><xref linkend="applikationen-alsamonitor" /> - Die ALSA-Konsole
      überwachen</member>

      <member><xref linkend="applikationen-changemonitor" /> - Die Datei für
      <code>Monitor()</code> verändern</member>

      <member><xref linkend="applikationen-chanspy" /> - Ein Gespräch
      mithören</member>

      <member><xref linkend="applikationen-dial" /> - Mit der Option
      <code>w</code> oder <code>W</code> im Gespräch aufzeichnen</member>

      <member><xref linkend="applikationen-dictate" /> - Diktat aufnehmen und
      widergeben</member>

      <member><xref linkend="applikationen-mixmonitor" /> - Ähnlich
      <code>Monitor()</code>, aber nur eine Datei</member>

      <member><xref linkend="applikationen-monitor" /> - Ein Gespräch
      mitschneiden</member>

      <member><xref linkend="applikationen-record" /> - Eingehendes Audio
      mitschneiden</member>

      <member><xref linkend="applikationen-stopmonitor" /> -
      <code>Monitor()</code> beenden</member>

      <member><xref linkend="applikationen-zapbarge" /> - Einen ZAP-Chanel
      belauschen</member>

      <member><xref linkend="applikationen-zapscan" /> - Zwecks Mithören durch
      ZAP-Kanäle schalten</member>
    </simplelist></para>

  <para><emphasis role="bold">Datenbank-Zugriffe</emphasis><simplelist
      type="vert">
      <member><xref linkend="applikationen-dbdel" /> - Einen Datenbankeintrag
      löschen</member>

      <member><xref linkend="applikationen-dbdeltree" /> - Einen
      Datenbank-Zweig löschen</member>

      <member><xref linkend="applikationen-mysql" /> - MySQL-Abfragen</member>
    </simplelist></para>

  <para><emphasis role="bold">Allgemeines</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-authenticate" /> - Einen User
      authentifizieren</member>

      <member><xref linkend="applikationen-page" /> - Ausgabe z.B. auf einem
      Intercom</member>

      <member><xref linkend="applikationen-senddtmf" /> - DTMF-Töne
      senden</member>

      <member><xref linkend="applikationen-sendimage" /> - Ein Bild
      senden</member>

      <member><xref linkend="applikationen-sendtext" /> - Einen Text
      senden</member>

      <member><xref linkend="applikationen-sendurl" /> - Eine URL
      senden</member>

      <member><xref linkend="applikationen-transfer" /> - Anruf
      weiterleiten</member>

      <member><xref linkend="applikationen-vmauthenticate" /> - User anhand
      der <filename>voicemail.conf</filename> authentifizieren</member>

      <member><xref linkend="applikationen-wait" /> - Eine bestimmte Zeit
      warten</member>

      <member><xref linkend="applikationen-waitexten" /> - Auf Eingabe einer
      Extension warten</member>

      <member><xref linkend="applikationen-waitforring" /> - Auf Klingeln
      warten</member>

      <member><xref linkend="applikationen-waitmusiconhold" /> - Warten mit
      Musik</member>
    </simplelist></para>

  <para><emphasis role="bold">Externe Skripte</emphasis><simplelist
      type="vert">
      <member><xref linkend="applikationen-agi" /> - Eine AGI-Anwendung
      ausführen</member>

      <member><xref linkend="applikationen-deadagi" /> - <code>AGI()</code>
      auf einem aufgelegten Chanel</member>

      <member><xref linkend="applikationen-eagi" /> - Siehe
      <code>AGI()</code></member>

      <member><xref linkend="applikationen-externalivr" /> - Einen externen
      IVR-Generator ausführen</member>

      <member><xref linkend="applikationen-fastagi" /> - <code>AGI()</code>
      auf einem entfernten Rechner</member>

      <member><xref linkend="applikationen-macro" /> - Ein Makro
      ausführen</member>

      <member><xref linkend="applikationen-noop" /> - Nichts tun. Schreibt
      Debugging-Informationen</member>

      <member><xref linkend="applikationen-perl" /> - <code>res_perl</code> is
      the <code>mod_perl</code> of Apache, only for Asterisk</member>

      <member><xref linkend="applikationen-php" /> - <code>res_php</code> is
      the <code>mod_php</code> of Apache, only for Asterisk</member>

      <member><xref linkend="applikationen-read" /> - Eine Variable (Ziffern)
      vom User einlesen</member>

      <member><xref linkend="applikationen-txtcidname" /> - Anrufernummer per
      DNS (txt!) nachschlagen (Deprecated in favor of TXTCID)</member>

      <member><xref linkend="applikationen-system" /> - Einen Shell-Befehl
      ausführen</member>

      <member><xref linkend="applikationen-trysystem" /> - Wie
      <code>System()</code>, gibt aber immer 0 zurück</member>

      <member><xref linkend="applikationen-userevent" /> - Dem
      Manager-Interface ein Event schicken</member>
    </simplelist></para>

  <para><emphasis role="bold">SIP</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-sipdtmfmode" /> - DTMF-Modus
      während SIP-Verbindung ändern</member>

      <member><xref linkend="applikationen-sipaddheader" /> - Einem
      ausgehenden Anruf einen SIP-Header hinzufügen</member>
    </simplelist></para>

  <para><emphasis role="bold">ZAP</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-flash" /> - Einen Switchhook-Flash
      (auch <quote>Link</quote>) auf einem ZAP-Trunk senden</member>

      <member><xref linkend="applikationen-zapbarge" /> - Einen ZAP-Chanel
      belauschen</member>

      <member><xref linkend="applikationen-zapras" /> - RAS (Remote Access
      Server) auf einem ZAP-ISDN-Chanel bereitstellen</member>

      <member><xref linkend="applikationen-zapscan" /> - Zwecks Mithören durch
      ZAP-Kanäle schalten</member>

      <member><xref linkend="applikationen-zapsendkeypadfacility" /> - Ziffern
      <quote>out of band</quote> auf einem ZAP-PRI-Chanel senden</member>
    </simplelist></para>

  <para><emphasis role="bold">Warteschlangen,
  Call-Center</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-addqueuemember" /> - Interface
      dynamisch in Warteschleife einreihen</member>

      <member><xref linkend="applikationen-agentcallbacklogin" /> -
      Call-Center-Agenten einloggen (mit Rückruf)</member>

      <member><xref linkend="applikationen-agentlogin" /> -
      Call-Center-Agenten einloggen</member>

      <member><xref linkend="applikationen-agentmonitoroutgoing" /> -
      Ausgehende Anrufe eines Agenten aufzeichen (nur mit
      <code>AgentCallbackLogin()</code>)</member>

      <member><xref linkend="applikationen-parkandannounce" /> - Anruf parken
      und ankündigen</member>

      <member><xref linkend="applikationen-parkedcall" /> - Einen geparkten
      Anruf annehmen</member>

      <member><xref linkend="applikationen-pausequeuemember" /> - Einen
      Agenten pausieren</member>

      <member><xref linkend="applikationen-queue" /> - Eingehenden Anruf in
      Warteschleife einreihen</member>

      <member><xref linkend="applikationen-removequeuemember" /> - Interface
      aus Warteschleife entfernen</member>

      <member><xref linkend="applikationen-unpausequeuemember" /> - Einen
      pausierenden Agenten wieder aktivieren</member>
    </simplelist></para>

  <para><emphasis role="bold">ADSI</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-adsiprog" /> - Ein ADSI-Skript in
      ein Telefon laden</member>

      <member><xref linkend="applikationen-getcpeid" /> - ADSI-CPE-ID
      abfragen</member>
    </simplelist></para>

  <para><emphasis role="bold">Verschiedenes</emphasis><simplelist type="vert">
      <member><xref linkend="applikationen-alarmreceiver" /> - Einen
      Contact-ID-Alarm-Empfänger von Ademco emulieren</member>
    </simplelist></para>

  <beginpage />

  <section id="applikationen-addqueuemember">
    <title><code>AddQueueMember()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AddQueueMember()</code></secondary>
    </indexterm>

    <simpara>Reiht Interfaces dynamisch in eine Anruf-Warteschleife
    ein.</simpara>

    <synopsis>AddQueueMember(<replaceable>Warteschleife</replaceable>[,<replaceable>Interface</replaceable>[,<replaceable>Malus</replaceable>[|,<replaceable>Optionen</replaceable>]]])</synopsis>

    <simpara>Reiht das angegebene Interface dynamisch als Agent in eine
    vorhandene Warteschleife (Queue) ein, die in
    <filename>queues.conf</filename> definiert wurde. Die Malus-Punkte
    beeinflussen ggf. die Position bei der Abarbeitung. Agenten mit
    niedrigerem Malus werden vor Einträgen mit höherem Malus
    aufgerufen.</simpara>

    <simpara>Falls das angegebene Interface bereits in die Warteschlange
    eingereiht ist und eine n+101 Priorität existiert (n ist die aktuelle
    Priorität), wird die Abarbeitung bei dieser Priorität fortgesetzt,
    andernfalls wird ein Fehler (d.h. -1) zurückgeliefert. (Je nach
    Asterisk-Version muss für das Springen zu n+101 die Option <code>j</code>
    (jump) angegeben werden.)</simpara>

    <simpara>Wird <code>AddQueueMember()</code> ohne den Interface-Parameter
    aufgerufen, findet das Interface, das vom Teilnehmer zu diesem Zeitpunkt
    benutzt wird, Verwendung.</simpara>

    <simpara>In manchen Asterisk-Versionen kann man statt der Pipe-Zeichen
    (<code>|</code>) auch Kommas verwenden.</simpara>

    <simpara>Die Applikation setzt auch die Chanel-Variable
    <code>${AQMSTATUS}</code> auf <code>ADDED</code> (hinzugefügt),
    <code>MEMBERALREADY</code> (ist bereits Mitglied) oder
    <code>NOSUCHQUEUE</code> (Warteschlange nicht vorhanden).</simpara>

    <programlisting>; SIP/3000 zur supportschlange hinzufügen:
exten =&gt; 123,1,AddQueueMember(supportschlange,SIP/3000)

; das aktuelle Interface mit Malus 2 hinzufügen:
exten =&gt; 123,1,AddQueueMember(supportschlange,,2)</programlisting>

    <formalpara>
      <title>Interner Hilfetext zu dieser Applikation in Asterisk 1.4:</title>

      <para><screen>  -= Info about application 'AddQueueMember' =- 

[Synopsis]
Dynamically adds queue members

[Description]
   AddQueueMember(queuename[|interface[|penalty[|options]]]):
Dynamically adds interface to an existing queue.
If the interface is already in the queue and there exists an n+101 priority
then it will then jump to this priority.  Otherwise it will return an error
The option string may contain zero or more of the following characters:
       'j' -- jump to +101 priority when appropriate.
  This application sets the following channel variable upon completion:
     AQMSTATUS    The status of the attempt to add a queue member as a 
                     text string, one of
           ADDED | MEMBERALREADY | NOSUCHQUEUE 
Example: AddQueueMember(techsupport|SIP/3000)</screen></para>
    </formalpara>

    <formalpara>
      <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

      <para><screen>- keine -</screen></para>
    </formalpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-queue" />, <xref
      linkend="applikationen-removequeuemember" />,
      <filename>queues.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-adsiprog">
    <title><code>ADSIProg()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ADSIProg()</code></secondary>
    </indexterm>

    <simpara>Lädt ein ADSI-Skript in ein ADSI-fähiges Telefon</simpara>

    <synopsis>ADSIProg([<replaceable>Script</replaceable>])</synopsis>

    <simpara>Programmiert ein ADSI-Telefon (ADSI: Analog Display Services
    Interface) mit einem vorhandenen Skript. Wird kein Skript angegeben, wird
    das Default-Skript <filename>asterisk.adsi</filename> verwendet. Die
    Pfadangabe zum <code>Script</code> versteht sich relativ zum
    Asterisk-Konfigurationsverzeichnis, i.d.R.
    <filename>/etc/asterisk/</filename>, es kann aber ebenso ein vollständiger
    (absoluter) Pfad zu der Skript-Datei angegeben werden.</simpara>

    <simpara>Benutzen Sie die <code>GetCPEID()</code>-Anwendung, um die CPE-ID
    und weitere Informationen über das ADSI-fähige Telefon zu
    erfahren.</simpara>

    <programlisting>; das ADSI-Telefon mit dem Skript telcordia-1.adsi programmieren:
exten =&gt; 123,1,ADSIProg(telcordia-1.adsi)</programlisting>

    <formalpara>
      <title>Interner Hilfetext zu dieser Applikation in Asterisk 1.4:</title>

      <para><screen>
  -= Info about application 'ADSIProg' =- 

[Synopsis]
Load Asterisk ADSI Scripts into phone

[Description]
  ADSIProg(script): This application programs an ADSI Phone with the given
script. If nothing is specified, the default script (asterisk.adsi) is used.

</screen></para>
    </formalpara>

    <formalpara>
      <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

      <para><screen>- keine - </screen></para>
    </formalpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-getcpeid" />,
      <filename>adsi.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-agentcallbacklogin">
    <title><code>AgentCallbackLogin()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AgentCallbackLogin()</code></secondary>
    </indexterm>

    <simpara>Ermöglicht Login eines Call-Center-Agenten mit Rückruf</simpara>

    <synopsis>AgentCallbackLogin([<replaceable>Agenten-Nr</replaceable>][,<replaceable>Optionen</replaceable>[,<replaceable>Extension</replaceable>@<replaceable>Context</replaceable>]])</synopsis>

    <simpara>Ermöglicht einem Anruf-Agenten, identifiziert durch die
    <code>Agenten-Nummer</code>, sich in das Anruf-Warteschlangen-System
    einzuloggen, um bei einem eingehenden Anruf für ihn zurückgerufen zu
    werden.</simpara>

    <simpara>Bei einem eingehenden Anruf für diesen Agenten wird Asterisk die
    spezifizierte zugehörige <code>Extension</code> (gegebenenfalls mit dem
    optional angegebenem Kontext <code>Context</code>) aufrufen.</simpara>

    <simpara>Der <code>Optionen</code>-Parameter kann den Wert <code>s</code>
    enthalten, der ein Silent Login (stille Anmeldung) bewirkt.</simpara>

    <programlisting>; still als Agent 33 (wie in agents.conf definiert) einloggen. Asterisk
; wird SIP/300 anrufen, sobald für diesen Agenten ein Anruf eingeht:
exten =&gt; 123,1,AgentCallbackLogin(33,s,${CALLERID(num)})

; wenn wir davon ausgehen, dass die Agentennummer mit der Anrufer-
; Extension übereinstimmt:
exten =&gt; 123,1,AgentCallbackLogin(${CALLERID(num)},s,${CALLERID(num)})</programlisting>

    <simpara>Auf <ulink
    url="http://www.voip-info.org/wiki/index.php?page=Asterisk+cmd+AgentCallbackLogin">http://www.voip-info.org/wiki/index.php?page=Asterisk+cmd+AgentCallbackLogin</ulink>
    sind viele Beispiele zu finden.</simpara>

    <formalpara>
      <title>Interner Hilfetext zu dieser Applikation in Asterisk 1.4:</title>

      <para><screen>
  -= Info about application 'AgentCallbackLogin' =- 

[Synopsis]
Call agent callback login

[Description]
  AgentCallbackLogin([AgentNo][|[options][|[exten]@context]]):
Asks the agent to login to the system with callback.
The agent's callback extension is called (optionally with the specified
context).
The option string may contain zero or more of the following characters:
      's' -- silent login - do not announce the login ok segment agent logged in/off

</screen></para>
    </formalpara>

    <formalpara>
      <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

      <para><screen>- keine - </screen></para>
    </formalpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-agentlogin" /></para>
    </formalpara>
  </section>

  <section id="applikationen-agentlogin">
    <title><code>AgentLogin()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AgentLogin()</code></secondary>
    </indexterm>

    <simpara>Erlaubt es einem Anruf-Agenten, sich in das System
    einzuloggen/sich am System anzumelden</simpara>

    <synopsis>AgentLogin([<replaceable>Agenten-Nr</replaceable>][,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Meldet den gegenwärtigen Anrufer als Call Agent (optional durch
    <code>Agenten-Nr</code> zu identifizieren) im Anruf-Warteschlangen-System
    an. Solange er als Agent angemeldet ist, kann er Anrufe entgegennehmen und
    hört bei neuen eingehenden Anrufen einen Piepton auf der Leitung. Der
    Agent kann den Anruf durch Betätigen der Stern-Taste (<code>*</code>)
    beenden.</simpara>

    <simpara>Der <code>Optionen</code>-Parameter kann den Wert <code>s</code>
    enthalten, der ein Silent Login (stille Anmeldung) bewirkt.</simpara>

    <programlisting>; still als Agent 33 (wie in agents.conf definiert) einloggen
exten =&gt; 123,1,AgentLogin(33,s)</programlisting>

    <formalpara>
      <title>Interner Hilfetext zu dieser Applikation in Asterisk 1.4:</title>

      <para><screen>
  -= Info about application 'AgentLogin' =- 

[Synopsis]
Call agent login

[Description]
  AgentLogin([AgentNo][|options]):
Asks the agent to login to the system.  Always returns -1.  While
logged in, the agent can receive calls and will hear a 'beep'
when a new call comes in. The agent can dump the call by pressing
the star key.
The option string may contain zero or more of the following characters:
      's' -- silent login - do not announce the login ok segment after agent logged in/off

</screen></para>
    </formalpara>

    <formalpara>
      <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

      <para><screen>- keine - </screen></para>
    </formalpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-agentcallbacklogin" /></para>
    </formalpara>
  </section>

  <section id="applikationen-agentmonitoroutgoing">
    <title><code>AgentMonitorOutgoing()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AgentMonitorOutgoing()</code></secondary>
    </indexterm>

    <simpara>Speichert die ausgehenden Anrufe eines Agenten</simpara>

    <synopsis>AgentMonitorOutgoing([<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Zeichnet alle ausgehenden Anrufe eines Agenten auf.</simpara>

    <simpara>Diese Anwendung versucht, die ID eines Agenten, der einen
    ausgehenden Anruf tätigt, herauszufinden, indem er die ID des Anrufers
    (Caller ID) des gegenwärtigen Interfaces mit einer von der
    <code>AgentCallbackLogin()</code>-Anwendung gesetzten globalen Variablen
    vergleicht. Daher wird dringend empfohlen, diese Anwendung nur in
    Verbindung mit der <code>AgentCallbackLogin()</code>-Anwendung (und zwar
    nach dieser!) zu verwenden. Um die Anrufe aufzuzeichnen, werden anstelle
    der <code><link
    linkend="applikationen-monitor">Monitor()</link></code>-Anwendung die
    Überwachungsfunktionen des <code>chan_agent</code>-Moduls benutzt. Deshalb
    muss das Aufzeichnen der Anrufe in der
    <filename>agents.conf</filename>-Datei korrekt konfiguriert
    sein.</simpara>

    <simpara>Standardmäßig werden aufgezeichnete Anrufe im Verzeichnis
    <filename>/var/spool/asterisk/monitor/</filename> abgelegt. Diese
    Einstellung kann durch Anpassung des Parameters <code>savecallsin</code>
    in der Datei <filename>agents.conf</filename> überschrieben
    werden.</simpara>

    <simpara>Können die ID des Anrufers (Caller-ID) und/oder die ID des
    Agenten (Agent-ID) nicht ermittelt werden, wird diese Anwendung zur
    Priorität n+101 springen, falls diese existiert.</simpara>

    <simpara>Falls keine der folgenden Optionen anderes bewirkt, liefert die
    Anwendung 0 zurück.</simpara>

    <simpara>Der <code>Optionen</code>-Parameter kann aus einem oder mehreren
    der folgenden Optionen zusammengesetzt sein.</simpara>

    <variablelist termlength="2">
      <varlistentry>
        <term><code>d</code></term>

        <listitem>
          <simpara>Zwingt die Anwendung zur Rückgabe von -1, falls ein Fehler
          vorliegt und keine Priorität n+101 existiert.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>c</code></term>

        <listitem>
          <simpara>Ändert den Call Detail Record dahingehend, dass
          <code><replaceable>Agent</replaceable>/<replaceable>AgentenNr</replaceable></code>
          als Chanel, von dem der Anruf ausgeht, gespeichert wird, damit
          festgestellt werden kann, von welchem Agenten der Anruf
          ausging.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>n</code></term>

        <listitem>
          <simpara>Unterdrückt Warnmeldungen im Falle, dass Caller-ID bzw.
          Agent-ID unbekannt sind. Diese Option ist hilfreich, wenn ein
          gemeinsamer Kontext für Agenten- und Nicht-Agenten-Anrufe erwünscht
          ist.</simpara>
        </listitem>
      </varlistentry>
    </variablelist>

    <programlisting>; ausgehende Anrufe dieses Agenten aufzeichnen, und den CDR
; entsprechend anpassen:
exten =&gt; 123,1,AgentMonitorOutgoing(c)</programlisting>

    <formalpara>
      <title>Interner Hilfetext zu dieser Applikation in Asterisk 1.4:</title>

      <para><screen>
  -= Info about application 'AgentMonitorOutgoing' =- 

[Synopsis]
Record agent's outgoing call

[Description]
  AgentMonitorOutgoing([options]):
Tries to figure out the id of the agent who is placing outgoing call based on
comparison of the callerid of the current interface and the global variable 
placed by the AgentCallbackLogin application. That's why it should be used only
with the AgentCallbackLogin app. Uses the monitoring functions in chan_agent 
instead of Monitor application. That have to be configured in the agents.conf file.

Return value:
Normally the app returns 0 unless the options are passed. Also if the callerid or
the agentid are not specified it'll look for n+101 priority.

Options:
	'd' - make the app return -1 if there is an error condition and there is
	      no extension n+101
	'c' - change the CDR so that the source of the call is 'Agent/agent_id'
	'n' - don't generate the warnings when there is no callerid or the
	      agentid is not known.
             It's handy if you want to have one context for agent and non-agent calls.

</screen></para>
    </formalpara>

    <formalpara>
      <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

      <para><screen>- keine - </screen></para>
    </formalpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-agentcallbacklogin" />,
      <filename>agents.conf</filename>, <xref
      linkend="applikationen-monitor" />, <xref
      linkend="applikationen-chanspy" /></para>
    </formalpara>
  </section>

  <section id="applikationen-agi">
    <title><code>AGI()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AGI()</code></secondary>
    </indexterm>

    <simpara>Ruft eine AGI-konforme Anwendung auf</simpara>

    <synopsis>AGI(<replaceable>Programm</replaceable>[,<replaceable>Argumente</replaceable>])</synopsis>

    <simpara>(Analog auch <code>EAGI()</code>, <code>FastAGI()</code>,
    <code>DeadAGI()</code>)</simpara>

    <simpara>Führt ein Astersik-Gateway-Interface-kompatibles Programm
    <code>Programm</code> auf dem aktuellen Chanel aus. Solche externen
    Programme (die in fast jeder beliebigen Sprache vorliegen können - z.B.
    Perl, PHP, ...), können den Telefonkanal steuern, Audiodateien abspielen,
    DTMF-Ziffern auslesen und so weiter. Asterisk kommuniziert dabei mit dem
    AGI-Program über <code>STDIN</code> und <code>STDOUT</code>. Die
    spezifierten <code>Argumente</code> werden an das AGI-Programm
    durchgereicht.</simpara>

    <simpara>Das <code>Programm</code> muss im zugrundeliegenden Dateisystem
    als executable (ausführbar) gekennzeichnet sein. Der Pfad zum Programm ist
    relativ zum Asterisk-AGI-Verzeichnis, standardmäßig
    <filename>/var/lib/asterisk/agi-bin/</filename>.</simpara>

    <simpara>Soll ein AGI-Programm laufen, ohne dass ein Chanel offen ist (wie
    in einer <code>h</code>-Extension, aufgelegt), muss statt dieser die
    <code>DeadAGI()</code>-Anwendung verwendet werden. Falls AGI über ein
    Netzwerk laufen soll, benutzen Sie <code>FastAGI()</code>.</simpara>

    <simpara>Benötigen Sie aus Ihrem AGI-Programm heraus Zugriff auf den
    eingehenden Audiostream, benutzen Sie <code>EAGI()</code> (Extended AGI)
    an Stelle von <code>AGI()</code>. Das eingehende Audio-Signal kann dann
    unter File Descriptor 3<footnote>
        <para>zu Erinnerung: 0: stdin, 1: stdout, 2:stderr. 3 ist ein frei
        definierter File descriptor</para>
      </footnote> eingelesen werden.</simpara>

    <simpara>Liefert -1 mit dem Auflegen oder falls ein Auflegen durch das
    Programm verlangt wurde, oder 0, falls nicht aufgelegt werden
    soll.</simpara>

    <programlisting>; mein AGI-Skript aufrufen:
exten =&gt; 123,1,AGI(agi-skript)
exten =&gt; 123,2,EAGI(eagi-skript)</programlisting>

    <formalpara>
      <title>Interner Hilfetext zu dieser Applikation in Asterisk 1.4:</title>

      <para><screen>
  -= Info about application 'AGI' =- 

[Synopsis]
Executes an AGI compliant application

[Description]
  [E|Dead]AGI(command|args): Executes an Asterisk Gateway Interface compliant
program on a channel. AGI allows Asterisk to launch external programs
written in any language to control a telephony channel, play audio,
read DTMF digits, etc. by communicating with the AGI protocol on stdin
and stdout.
  This channel will stop dialplan execution on hangup inside of this
application, except when using DeadAGI.  Otherwise, dialplan execution
will continue normally.
  A locally executed AGI script will receive SIGHUP on hangup from the channel
except when using DeadAGI. This can be disabled by setting the AGISIGHUP channel
variable to "no" before executing the AGI application.
  Using 'EAGI' provides enhanced AGI, with incoming audio available out of band
on file descriptor 3

  Use the CLI command 'agi show' to list available agi commands
  This application sets the following channel variable upon completion:
     AGISTATUS      The status of the attempt to the run the AGI script
                    text string, one of SUCCESS | FAILED | HANGUP

</screen></para>
    </formalpara>

    <formalpara>
      <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

      <para><screen>13,19c13,15
&lt;   This channel will stop dialplan execution on hangup inside of this
&lt; application, except when using DeadAGI.  Otherwise, dialplan execution
&lt; will continue normally.
&lt;   A locally executed AGI script will receive SIGHUP on hangup from the channel
&lt; except when using DeadAGI. This can be disabled by setting the AGISIGHUP channel
&lt; variable to "no" before executing the AGI application.
&lt;   Using 'EAGI' provides enhanced AGI, with incoming audio available out of band
---
&gt; Returns -1 on hangup (except for DeadAGI) or if application requested
&gt;  hangup, or 0 on non-hangup exit. 
&gt; Using 'EAGI' provides enhanced AGI, with incoming audio available out of band
22,25c18
&lt;   Use the CLI command 'agi show' to list available agi commands
&lt;   This application sets the following channel variable upon completion:
&lt;      AGISTATUS      The status of the attempt to the run the AGI script
&lt;                     text string, one of SUCCESS | FAILED | HANGUP
---
&gt; Use the CLI command 'show agi' to list available agi commands
</screen></para>
    </formalpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-deadagi" />, <xref
      linkend="applikationen-fastagi" /></para>
    </formalpara>
  </section>

  <section id="applikationen-alarmreceiver">
    <title><code>AlarmReceiver()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>AlarmReceiver()</code></secondary>
    </indexterm>

    <simpara>Bietet Unterstützung für den Empfang von Alarm-Reporten von einem
    Einbrecher- oder Feueralarm-Bedienfeld</simpara>

    <synopsis>AlarmReceiver()</synopsis>

    <simpara>Emuliert einen Alarm-Empfänger und ermöglicht Asterisk, spezielle
    Daten von Einbrecher- und/oder Feueralarm-Bedienfeldern zu empfangen und
    zu dekodieren. Zum jetzigen Zeitpunkt wird ausschließlich das Ademco
    Contact ID Format unterstützt.</simpara>

    <simpara>Nachdem <code>AlarmReceiver()</code> aufgerufen worden ist, wird
    ein Handshake mit dem Alarm-Bedienfeld durchgeführt, Events empfangen und
    validiert und anschließend gespeichert, bis das Bedienfeld die Verbindung
    beendet. Nachdem das Bedienfeld die Verbindung beendet hat, wird die in
    der <code>eventsmd</code>-Einstellung der Datei
    <filename>alarmreceiver.conf</filename> spezifizierte Befehlskette von der
    Anwendung ausgeführt, und die Events auf die Standardeingabe der Anwendung
    umgeleitet. Die Datei <filename>alarmreceiver.conf</filename> enthält
    ebenfalls Einstellungen zum DTMF-Timing und für die Lautstärke der
    Meldetöne.</simpara>

    <simpara>Für die zuverlässige Funktion dieser Anwendung kann keine
    Garantie übernommen werden. Verlassen Sie sich also nicht ausschließlich
    auf diese Anwendung, wenn Sie sie nicht bereits ausgiebig getestet
    haben!</simpara>

    <simpara>Diese Applikation gibt immer 0 zurück.</simpara>

    <programlisting>; Asterisk soll Meldungen eines Feueralarm-Knopfes empfangen:
exten =&gt; s,1,AlarmReceiver()</programlisting>


    <formalpara>
      <title>Interner Hilfetext zu dieser Applikation in Asterisk 1.4:</title>

      <para><screen>
  -= Info about application 'AlarmReceiver' =- 

[Synopsis]
Provide support for receiving alarm reports from a burglar or fire alarm panel

[Description]
  AlarmReceiver(): Only 1 signalling format is supported at this time: Ademco
Contact ID. This application should be called whenever there is an alarm
panel calling in to dump its events. The application will handshake with the
alarm panel, and receive events, validate them, handshake them, and store them
until the panel hangs up. Once the panel hangs up, the application will run the
system command specified by the eventcmd setting in alarmreceiver.conf and pipe
the events to the standard input of the application. The configuration file also
contains settings for DTMF timing, and for the loudness of the acknowledgement
tones.

</screen></para>
    </formalpara>

    <formalpara>
      <title>Differenz zum internen Hilfetext in Asterisk 1.2:</title>

      <para><screen>5c5
&lt; Provide support for receiving alarm reports from a burglar or fire alarm panel
---
&gt; Provide support for receving alarm reports from a burglar or fire alarm panel
</screen></para>
    </formalpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><filename>alarmreceiver.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-answer">
    <title><code>Answer()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Answer()</code></secondary>
    </indexterm>

    <simpara>Antwortet auf einen klingelnden Chanel</simpara>

    <synopsis>Answer([<replaceable>Verzögerung</replaceable>])</synopsis>

    <simpara>Veranlasst Asterisk zum Beantworten eines Chanels, wenn er gerade
    klingelt. Falls der aktuelle Chanel nicht klingelt, tut diese Anwendung
    nichts.</simpara>

    <simpara>Es ist generell empfehlenswert, <code>Answer()</code> vor dem
    Aufrufen irgendwelcher anderen Anwendungen auf dem Chanel aufzurufen,
    außer es besteht ein guter Grund, das nicht zu tun. Die meisten
    Anwendungen verlangen, dass der Chanel beantwortet wird, bevor sie
    aufgerufen werden, und werden andernfalls eventuell nicht in der Lage
    sein, korrekt ihre Arbeit zu verrichten.</simpara>

    <simpara>Die optionale <code>Verzögerung</code> weist Asterisk an, soviele
    Millisekunden vor dem Antworten zu warten.</simpara>

    <simpara>Gibt bei Erfolg 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,2,Wait(1)
exten =&gt; 123,3,Playback(hallo)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-hangup" /></para>
    </formalpara>
  </section>

  <section id="applikationen-authenticate">
    <title><code>Authenticate()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Authenticate()</code></secondary>
    </indexterm>

    <simpara>Verlangt zur Fortsetzung eines Vorgangs die Eingabe eines
    Passworts vom Anrufer</simpara>

    <synopsis>Authenticate(<replaceable>Passwort</replaceable>[,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Verlangt, dass der Anrufer ein gegebenes Passwort
    <code>Passwort</code> korrekt eingibt, um dann mit der Ausführung der
    nächsten Priorität im Wählplan (dialplan) fortzufahren.
    <code>Authenticate()</code> gibt dem Anrufer drei Versuche, das Passwort
    korrekt einzugeben. Andernfalls wird die Verbindung beendet.</simpara>

    <simpara>Falls <code>Passwort</code> mit dem <code>/</code>-Zeichen
    beginnt, wird es als Datei interpretiert, die eine Liste gültiger
    Passwörter (genau eins pro Zeile) enthält. Passwörter können auch in der
    Asterisk-Datenbank (AstDB) gespeichert sein, siehe dazu die Option
    <code>d</code> weiter unten.</simpara>

    <simpara>Folgende Optionen sind möglich (auch in Kombination):</simpara>

    <variablelist termlength="2">
      <varlistentry>
        <term><code>a</code></term>

        <listitem>
          <simpara>(accountcode) Setzt den Namen des CDR-Felds
          <code>accountcode</code> und die Variable für den Chanel,
          <code>ACCOUNTCODE</code>, auf das eingegebene Passwort.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>d</code></term>

        <listitem>
          <simpara>(database) Interpretiert <code>Passwort</code> als
          Schlüssel der Asterisk-Datenbank. Wenn ein Datenbankschlüssel
          benutzt wird, kann der mit dem Schlüssel assoziierte Wert beliebig
          sein.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>r</code></term>

        <listitem>
          <simpara>(remove) Entfernt den Datenbankschlüssel nach erfolgreicher
          Verbindung und Eintreten in die Datenbank (nur möglich mit Option
          <code>d</code>)</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>j</code></term>

        <listitem>
          <simpara>(jump) Bei falschem Passwort statt aufzulegen zur Priorität
          n+101 springen, falls diese existiert.</simpara>
        </listitem>
      </varlistentry>
    </variablelist>

    <important>
      <para>Beachten Sie bei der Option <code>d</code>, dass - völlig
      unverständlicherweise! - als Parameter
      <code>/<replaceable>passwoerter</replaceable>/<replaceable>1234</replaceable></code>
      verlangt wird, wobei <code>passwoerter</code> die Familie ist und
      <code>1234</code> das Passwort; der unter diesem Schlüssel gespeicherte
      Wert ist irrelevant. Der gesunde Menschenverstand würde einen
      Datenbank-Eintrag wie /passwoerter/art =&gt; 1234 erwarten.</para>
    </important>

    <simpara>Liefert 0 zurück, falls der Benutzer nach maximal drei Versuchen
    ein gültiges Passwort eingegeben hat, sonst -1 (auch nach
    Auflegen).</simpara>

    <programlisting>; Passwort 1234 verlangen:
exten =&gt; 123,1,Answer()
exten =&gt; 123,2,Authenticate(1234)
exten =&gt; 123,3,Playback(pin-nummer-akzeptiert)
exten =&gt; 123,4,SayDigits(${ACCOUNTCODE})</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-vmauthenticate" /></para>
    </formalpara>
  </section>

  <section id="applikationen-background">
    <title><code>Background()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Background()</code></secondary>
    </indexterm>

    <simpara>Spielt eine Audiodatei, während Touch-Tone-Ziffern (DTMF-Töne)
    akzeptiert werden</simpara>

    <synopsis>Background(<replaceable>Datei1</replaceable>[&amp;<replaceable>Datei2</replaceable>...][,<replaceable>Optionen</replaceable>[,<replaceable>Sprache</replaceable>]])</synopsis>

    <simpara>Spielt die angebene(n) Audiodatei(en), während auf den Start der
    Eingabe einer Extension durch den Benutzer gewartet wird. Sobald der
    Benutzer mit der Eingabe einer Extension begonnen hat, wird die Wiedergabe
    beendet. Der Dateiname sollte ohne Dateiendung angegeben werden, da
    Asterisk dann automatisch das Dateiformat mit den geringsten
    Übersetzungskosten auswählt.</simpara>

    <simpara><code>Optionen</code> ist einer der folgenden Werte (nicht
    kombinierbar):</simpara>

    <variablelist termlength="2">
      <varlistentry>
        <term><code>skip</code></term>

        <listitem>
          <simpara>Die Wiedergabe der Nachricht wird übersprungen, falls sich
          der Chanel gegenwärtig nicht im <code>up</code>-Status befindet
          (z.B., weil er bisher nicht beantwortet wurde). Ist
          <code>skip</code> angegeben, wird die Anwendung unverzüglich
          beendet, falls der Chanel aufgelegt ist.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>noanswer</code></term>

        <listitem>
          <simpara>Der Chanel kann erst beantwortet werden, nachdem die
          angegebene Audiodatei abgespielt wurde. Ist diese Option nicht
          angegeben, wird der Chanel automatisch beantwortet, bevor die
          Audiodatei abgespielt wird. Es gilt zu beachten, dass nicht alle
          Kanäle erlauben, vor ihrer Beantwortung eine Nachricht
          abzuspielen.</simpara>
        </listitem>
      </varlistentry>
    </variablelist>

    <simpara>Der Parameter <code>Sprache</code> kann verwendet werden, um eine
    bestimmte Sprache zu definieren, in der Nachrichten abgespielt werden
    sollen, falls diese nicht der für diesen Chanel aktuell eingestellten
    Sprache entspricht.</simpara>

    <simpara>Liefert -1 zurück wenn aufgelegt wurde, oder falls der angegebene
    Dateiname nicht existiert, sonst 0.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,2,Background(bitte-extension-eingeben);</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-playback" />, <xref
      linkend="applikationen-backgrounddetect" />, der <code>show
      translation</code> Befehl</para>
    </formalpara>
  </section>

  <section id="applikationen-backgrounddetect">
    <title><code>BackgroundDetect()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>BackgroundDetect()</code></secondary>
    </indexterm>

    <simpara>Spielt eine Audiodatei im Hintergrund und erkennt
    Sprechen</simpara>

    <synopsis>BackgroundDetect(<replaceable>SoundDatei</replaceable>[,<replaceable>Stille</replaceable>[,<replaceable>Min</replaceable>[,<replaceable>Max</replaceable>]]])</synopsis>

    <simpara>Ähnlich <code>Background()</code>, versucht jedoch Sprechen zu
    erkennen.</simpara>

    <simpara>Während der Wiedergabe der Datei wird Eingang von Audio in
    Empfangsrichtung überwacht. Wird eine Geräuschphase von mehr als
    <code>Min</code> Millisekunden Dauer und weniger als <code>Max</code>
    Millisekunden registriert, und darauf folgend eine geräuschlose Phase von
    wenigstens <code>Stille</code> Millisekunden, wird die Audio-Wiedergabe
    abgebrochen und die Ausführung an die Extension <code>talk</code>
    delegiert, falls diese existiert ist.</simpara>

    <simpara>Sind <code>Stille</code>, <code>Min</code> und <code>Max</code>
    nicht spezifiziert, werden jeweils die Standardwerte 1000 ms, 100 ms und
    unendlich angenommen.</simpara>

    <simpara>Wenn aufgelegt wird, liefert die Anwendung -1 zurück, nach
    abgeschossener Wiedergabe ohne vorhandene Ausstiegsbedingungen
    0.</simpara>

    <programlisting>exten =&gt; 123,1,BackgroundDetect(sinfonie)
exten =&gt; 123,2,Playback(vm-sorry)
exten =&gt; talk,1,Playback(ja-bitte)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-playback" />, <xref
      linkend="applikationen-background" /></para>
    </formalpara>
  </section>

  <section id="applikationen-busy">
    <title><code>Busy()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Busy()</code></secondary>
    </indexterm>

    <simpara>Zeigt dem Chanel besetzt an</simpara>

    <synopsis>Busy([<replaceable>Timeout</replaceable>])</synopsis>

    <simpara>Fordert den Chanel auf, ein Besetzt-Zeichen zu signalisieren und
    wartet dann, bis der Benutzer auflegt oder auf den Ablauf der optional
    anzugebenden zeitlichen Frist (<code>Timeout</code>, in
    Sekunden).</simpara>

    <simpara>Diese Anwendung signalisiert einen Besetzt-Zustand nur dem
    überbrückten Chanel (bridged channel). Jeder spezielle Chaneltyp hat seine
    eigene Art, dem Anrufer besetzt mitzuteilen. Sie können
    <code>Playtones(busy)</code> verwenden, um dem Anrufer ein Besetztzeichen
    vorzuspielen.</simpara>

    <simpara>Gibt immer -1 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Playback(vm-sorry)
exten =&gt; 123,2,Playtones(busy)
exten =&gt; 123,3,Busy()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-congestion" />, <xref
      linkend="applikationen-progress" />, <xref
      linkend="applikationen-playtones" /></para>
    </formalpara>
  </section>

  <section id="applikationen-callingpres">
    <title><code>CallingPres()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>CallingPres()</code></secondary>
    </indexterm>

    <simpara>Ändert die Präsentation der Anrufer-ID (Caller ID)</simpara>

    <synopsis>CallingPres(<replaceable>presentation</replaceable>)</synopsis>

    <simpara>Ändert die Präsentations-Parameter für die Anrufer ID auf einer
    Q.931 PRI-Verbindung. Diese Parameter sollten gesetzt sein, bevor ein
    ausgehender Anruf getätigt wird. Der Präsentations-Parameter
    <code>presentation</code> bestimmt zum ersten, ob der angerufene
    Teilnehmer die Caller ID-Information angezeigt bekommt oder nicht, und zum
    zweiten, ob die Caller ID-Information von verlässlicher Quelle auf
    verifiziert geprüft wurde oder nicht (engl.: screening).</simpara>

    <simpara>Diese Anwendung wurde durch <code>SetCallerPres()</code> ersetzt,
    welche einfacher handzuhaben und weniger abhängig von Zaptel
    ist.</simpara>

    <simpara>Diese Anwendung generiert aus der Kombination von
    Anrufpräsentations-Einstellungen und Screening-Einstellungen eine Zahl.
    Die Werte selbst sind im ITU Q.931-Standard wie in den folgenden Tabellen
    definiert.</simpara>

    <para>Screening wird durch die Bits 1 und 2 gesteuert: <informaltable
        colsep="0" frame="none" rowsep="0">
        <tgroup cols="3">
          <colspec colnum="1" colwidth="30pt" />

          <colspec colnum="2" colwidth="30pt" />

          <thead>
            <row>
              <entry>Bit1</entry>

              <entry>Bit2</entry>

              <entry>Erläuterung</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>0</entry>

              <entry>0</entry>

              <entry>Die Caller ID Information liefert der Teilnehmer, sie ist
              nicht verifiziert</entry>
            </row>

            <row>
              <entry>0</entry>

              <entry>1</entry>

              <entry>Die Caller ID Information liefert der Teilnehmer, sie ist
              erfolgreich verifiziert</entry>
            </row>

            <row>
              <entry>1</entry>

              <entry>0</entry>

              <entry>Die Caller ID Information liefert der Teilnehmer, die
              Verifizierung war nicht erfolgreich</entry>
            </row>

            <row>
              <entry>1</entry>

              <entry>1</entry>

              <entry>Die Caller ID Information liefert das Netzwerk</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></para>

    <para>Präsentation wird durch die Bits 6 und 7 gesteuert: <informaltable
        colsep="0" frame="none" rowsep="0">
        <tgroup cols="3">
          <colspec colnum="1" colwidth="30pt" />

          <colspec colnum="2" colwidth="30pt" />

          <thead>
            <row>
              <entry>Bit6</entry>

              <entry>Bit7</entry>

              <entry>Erläuterung</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>0</entry>

              <entry>0</entry>

              <entry>Anzeige der Caller ID Information ist erlaubt</entry>
            </row>

            <row>
              <entry>0</entry>

              <entry>1</entry>

              <entry>Anzeige der Caller ID Information ist nicht
              erlaubt</entry>
            </row>

            <row>
              <entry>1</entry>

              <entry>0</entry>

              <entry>Die Nummer ist aufgrund von Zwischenstationen nicht
              verfügbar</entry>
            </row>

            <row>
              <entry>1</entry>

              <entry>1</entry>

              <entry>Reserviert</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></para>

    <simpara>Die Bits 3, 4, 5 und 8 sollten alle auf Null (0) gesetzt werden.
    Beachten Sie, dass die Bits in der Folge vom höchstwertigsten zum
    niederwertigsten nummeriert sind in der Form 87654321.</simpara>

    <programlisting>; presentation setzen auf:
; presentation erlaubt                (00000000)
; Netzwerk angegeben                  (00000011)
; ------------------                  ----------
; Ergebnis: 3 (bitweises UND)         (00000011)
exten =&gt; 123,1,CallingPres(3)
exten =&gt; 123,2,Dial(Zap/g1/1234567)
; presentation setzen auf:
; presentation nicht erlaubt          (00100000)
; vom User, verifiziert               (00000001)
; ------------------                  ----------
; Ergebnis: 33 (bitweises UND)        (00100001)
exten =&gt; 124,1,CallingPres(33)
exten =&gt; 124,2,Dial(Zap/g1/1234568)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-setcallerpres" />, <xref
      linkend="applikationen-setcallerid" /></para>
    </formalpara>
  </section>

  <section id="applikationen-changemonitor">
    <title><code>ChangeMonitor()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ChangeMonitor()</code></secondary>
    </indexterm>

    <simpara>Ändert den Dateinamen der Protokolldatei für einen
    Chanel</simpara>

    <synopsis>ChangeMonitor(<replaceable>Basis-Dateiname</replaceable>)</synopsis>

    <simpara>Ändert den Namen der bei der Überwachung eines Chanels mit
    <code><link linkend="applikationen-monitor">Monitor()</link></code>
    aufgezeichneten Datei. Diese Anwendungen hat keinerlei Auswirkungen, wenn
    der fragliche Chanel nicht überwacht wird.</simpara>

    <programlisting>; Chanel mitschneiden mit Datei-Basisname 'mitschnitt'
exten =&gt; 123,1,Monitor(mitschnitt)
; Datei-Basisnamen auf 'mitschnitt2' ändern
exten =&gt; 123,2,ChangeMonitor(mitschnitt2)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-monitor" />, <xref
      linkend="applikationen-stopmonitor" /></para>
    </formalpara>
  </section>

  <section id="applikationen-chanisavail">
    <title><code>ChanIsAvail()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ChanIsAvail()</code></secondary>
    </indexterm>

    <simpara>Ermittelt, ob ein bestimmter Chanel momentan verfügbar
    ist</simpara>

    <synopsis>ChanIsAvail(<replaceable>Technology1</replaceable>/<replaceable>Resource1</replaceable>[&amp;<replaceable>Technology2</replaceable>/<replaceable>Resource2</replaceable>...][,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Prüft, ob irgendeiner der angeforderten Kanäle verfügbar ist. Ist
    keiner der angeforderten Kanäle verfügbar, wird die neue Priorität auf
    n+101 gesetzt (wobei <code>n</code> die aktuell gültige Priorität ist), es
    sei denn, diese Priorität existiert nicht oder ein Fahler tritt auf. In
    diesem Fall wird <code>ChanIsAvail()</code> den Wert -1
    zurückliefern.</simpara>

    <simpara>Ist einer der angeforderten Kanäle verfügbar, wird die nächste
    Priorität auf <code>n+1</code> gesetzt, und <code>ChanIsAvail()</code>
    liefert den Wert 0 zurück.</simpara>

    <para><code>ChanIsAvail()</code> setzt die folgenden Chanelvariablen:
    <variablelist termlength="18">
        <varlistentry>
          <term><code>${AVAILCHAN}</code></term>

          <listitem>
            <simpara>Der Name des verfügbaren Chanels, inklusive der
            Session-Nummer des Testanrufs.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>${AVAILORIGCHAN}</code></term>

          <listitem>
            <simpara>Der kanonische Chanelname, der benutzt wurde um den
            Chanel zu erstellen, d.h. der Chanelname ohne eine
            Session-Nummer.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>${AVAILSTATUS}</code></term>

          <listitem>
            <para>Der Status-Code des Chanels:<variablelist spacing="compact"
                termlength="24">
                <varlistentry>
                  <term><code>AST_DEVICE_UNKNOWN</code> (0)</term>

                  <listitem>
                    <simpara>Unbekannt. Der Chanel ist gültig, aber in
                    unbekanntem Zustand.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_NOT_INUSE</code> (1)</term>

                  <listitem>
                    <simpara>Chanel wird nicht verwendet.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_IN_USE</code> (2)</term>

                  <listitem>
                    <simpara>Der Chanel ist in Gebrauch.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_BUSY</code> (3)</term>

                  <listitem>
                    <simpara>Besetzt.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_INVALID</code> (4)</term>

                  <listitem>
                    <simpara>Ungültig. Unbekannter Chanel.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_UNAVAILABLE</code> (5)</term>

                  <listitem>
                    <simpara>Nicht verfügbar. Chanel ist nicht
                    registriert.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>AST_DEVICE_RINGING</code> (6)</term>

                  <listitem>
                    <simpara>Chanel klingelt.</simpara>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Ist die Option <code>s</code> (für state) angegeben, wird
    Asterisk den Chanel als nicht verfügbar betrachten, wann immer er in
    Gebrauch ist, sogar falls er weiteren anderen Anruf aufnehmen kann. Mit
    der Option <code>j</code> wird, falls der Chanel nicht verfügbar ist, zur
    Priorität n+101 gesprungen.</simpara>

    <simpara>Diese Anwendung arbeitet auf MGCP-Kanälen nicht
    ordnungsgemäß.</simpara>

    <programlisting>; Zap/1 und Zap/2 auf Verfügbarkeit prüfen:
exten =&gt; 123,1,ChanIsAvail(Zap/1&amp;Zap/2)
; wenn mindestens einer verfügbar ist, geht's bei Priorität 2 weiter:
; In Priorität 2 wählen wir eine Nummer auf dem freien Chanel:
exten =&gt; 123,2,NoOp(${AVAILORIGCHAN})
exten =&gt; 123,3,Dial(${AVAILORIGCHAN}/123456)
; Wenn wir bei Prio. 102 landen ist weder Zap/1 noch Zap/2 verfügbar
exten =&gt; 123,102,Playback(alle-kanaele-belegt)</programlisting>
  </section>

  <section id="applikationen-chanspy">
    <title><code>ChanSpy()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ChanSpy()</code></secondary>
    </indexterm>

    <simpara>Einen Chanel belauschen</simpara>

    <synopsis>ChanSpy([<replaceable>Chanelpräfix</replaceable>[,<replaceable>Optionen</replaceable>]])</synopsis>

    <simpara>Erlaubt es, das Gespräch auf beliebigen Kanälen mitzuhören. (Ist
    also nicht wie <code>ZapBarge()</code>/<code>ZapScan()</code> an
    Zap-Kanäle gebunden.) Für das Verständnis einiger Optionen ist zu
    beachten, dass diese Applikation einzelne Kanäle abhört, aber nicht
    Gespräche im eigentlichen Sinn (min. 2 Teilnehmer), obwohl Sie natürlich
    das ein- und ausgehende Audio auf dem abgehörten Chanel hören
    können.</simpara>

    <simpara>Wenn <code>Chanelpräfix</code> angegeben ist, stehen nur Kanäle,
    die mit diesem String beginnen, zur Auswahl.</simpara>

    <para><code>Optionen</code> (auch in Kombination):<variablelist
        termlength="11">
        <varlistentry>
          <term><code>b</code></term>

          <listitem>
            <simpara>(bridged) Auswahl nur auf verbundene Kanäle
            beschränken.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>g(<replaceable>grp</replaceable>)</code></term>

          <listitem>
            <simpara>(group) Auswahl auf Kanäle beschränken, auf denen
            <code>grp</code> in der durch Doppelpunkt (<code>:</code>)
            getrennten Liste <code>${SPYGROUP}</code> (Chanelvariable)
            enthalten ist.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>q</term>

          <listitem>
            <simpara>(quiet) Keine Piep-Töne beim Umschalten von Kanälen
            spielen und Chanelname nicht ankündigen.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>r[(<replaceable>Name</replaceable>)]</code></term>

          <listitem>
            <para>(record) Die Sitzung in einer Datei im Verzeichnis
            <filename>/var/spool/asterisk/monitor/</filename> aufzeichnen.
            Default-Basis-Dateiname (also ohne Endung) ist
            <filename>chanspy</filename>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>v[(<replaceable>Wert</replaceable>)]</code></term>

          <listitem>
            <para>(volume) Die anfängliche Lautstärkeeinstellung von
            <code>-4</code> (leise) bis <code>4</code> (laut)
            verändern.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>w</code></term>

          <listitem>
            <simpara>(whisper) Flüster-Modus aktivieren. Damit kann der
            lauschende Chanel mit dem belauschten sprechen, wobei dies nur der
            belauschte Chanel hört, nicht dessen Gesprächspartner. (Diese
            Option ist seit Asterisk 1.4 verfügbar.)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>W</code></term>

          <listitem>
            <simpara>(private whisper) Privater Flüster-Modus. Wie
            <code>w</code>, aber der lauschende Chanel kann den belauschten
            nicht hören. (sinnvoll?)</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <para>Während des Abhörens können folgende Tastenbefehle gegeben
    werden:<variablelist termlength="6">
        <varlistentry>
          <term><code>#</code></term>

          <listitem>
            <simpara>Schaltet durch die Lautstärkeeinstellung (-4 bis
            4)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>*</code></term>

          <listitem>
            <simpara>Schaltet zu einem anderen Chanel</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code><replaceable>...</replaceable>#</code></term>

          <listitem>
            <simpara>Eine Reihe von Ziffern, abgeschlossen durch
            <code>#</code>, wird an <code>Chanelpräfix</code> angehängt. Wenn
            Sie z.B. <code>ChanSpy(Agent)</code> ausführen und
            <code>1234#</code> eingeben, werden Sie auf dem Chanel
            <code>Agent/1234</code> lauschen.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>; Agenten belauschen:
exten =&gt; 123,1,Chanspy(Agent)
exten =&gt; 123,n,Hangup()

; Beispiel für die Option g:
; auf Anrufen auf 0... SPYGROUP 10005 setzen:
exten =&gt; _0.,1,Set(SPYGROUP=10005)
;...
; Kanäle der SPYGROUP 10005 belauschen:
exten =&gt; 123,1,ChanSpy(,g(10005))
exten =&gt; 123,n,Hangup()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-zapbarge" />, <xref
      linkend="applikationen-zapscan" />, <xref
      linkend="applikationen-monitor" /></para>
    </formalpara>
  </section>

  <section id="applikationen-congestion">
    <title><code>Congestion()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Congestion()</code></secondary>
    </indexterm>

    <simpara>Zeigt Stau (Überlastung) auf dem Chanel an</simpara>

    <synopsis>Congestion([<replaceable>Timeout</replaceable>])</synopsis>

    <simpara>Zeigt auf dem Chanel Stau an und wartet dann, bis der Teilnehmer
    auflegt, oder bis die optional spezifizierbare Frist
    (<code>Timeout</code>, in Sekunden) abgelaufen ist.</simpara>

    <simpara>Diese Anwendung signalisiert lediglich Stau, sie spielt aber dem
    Teilnehmer keinen Stau-Ton vor. Um einem Anrufer einen Stau-Ton
    vorzuspielen, kann <code>Playtones(congestion)</code> verwendet
    werden.</simpara>

    <simpara>Liefert stets -1 zurück.</simpara>

    <programlisting>; bei Caller ID is 0123-123456 immer Stau-Signal spielen:
exten =&gt; 123,1,GotoIf($[${CALLERID(num)} = 0123123456]?10)
exten =&gt; 123,n,Playtones(congestion)
exten =&gt; 123,n,Congestion(5)
exten =&gt; 123,n,Hangup()
exten =&gt; 123,10,Dial(Zap/1)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-busy" />, <xref
      linkend="applikationen-progress" />, <xref
      linkend="applikationen-playtones" /></para>
    </formalpara>
  </section>

  <section id="applikationen-controlplayback">
    <title><code>ControlPlayback()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ControlPlayback()</code></secondary>
    </indexterm>

    <simpara>Spielt eine Datei ab und kann diese auch schnell vor- und
    zurückspulen</simpara>

    <synopsis>ControlPlayback(<replaceable>Datei</replaceable>[,<replaceable>skipms</replaceable>[,<replaceable>ffchar</replaceable>[,<replaceable>rewchar</replaceable>[,<replaceable>stopchar</replaceable>[,<replaceable>pausechar</replaceable>]]]]])</synopsis>

    <simpara>Spielt die angegebene Datei ab und ermöglicht es dem Anrufer,
    sich, durch Betätigen der Tasten <code>ffchar</code> und
    <code>rewchar</code>, in dieser Datei vorwärts und rückwärts zu bewegen.
    Als Standardeinstellung können die Tasten <code>#</code> und * zum Vor-
    und Zurückspulen der Datei verwendet werden. Ist <code>stopchar</code>
    spezifiziert, hält die Anwendung die Wiedergabe an, wenn die
    stopchar-Taste gedrückt wird. Existiert die Datei nicht, geht die
    Anwendung zu Priorität n+101 über, falls vorhanden.</simpara>

    <simpara>Die <code>skipms</code>-Option gibt an, wie weit mit jedem
    Drücken von <code>ffchar</code> oder <code>rewchar</code> in der Datei
    vor- bzw. zurückgesprungen wird.</simpara>

    <simpara>Die <code>pausechar-Option</code> kann ebenfalls spezifiziert
    werden, sie erlaubt es, die Wiedergabe der Datei vorübergehend anzuhalten
    (Pause). Erneutes Drücken von <code>pausechar</code> setzt die Wiedergabe
    der Datei dann fort.</simpara>

    <simpara>Gibt -1 zurück, falls der Chanel während der Wiedergabe aufgelegt
    wurde.</simpara>

    <programlisting>; dem Anrufer "sinfonie" vorspielen mit Steuerungsmöglichkeit:
exten =&gt; 123,1,ControlPlayback(sinfonie,5000,#,*,5,0)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-playback" />, <xref
      linkend="applikationen-background" /></para>
    </formalpara>
  </section>

  <section id="applikationen-dbdel">
    <title><code>DBdel()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>DBdel()</code></secondary>
    </indexterm>

    <simpara>Löscht einen Schlüssel aus der AstDB</simpara>

    <synopsis>DBdel(<replaceable>Familie/Schlüssel</replaceable>)</synopsis>

    <simpara>Löscht den durch <code>key</code> spezifizierten Schlüssel aus
    der Schlüsselfamilie <code>Familie</code> aus der AstDB.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Set(DB(test/name)=Peter)    ; in AstDB speichern
exten =&gt; 123,2,Set(name=${DB(test/name)})  ; abfragen
exten =&gt; 123,3,DBdel(test/name)            ; löschen</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-dbdeltree" />, <xref
      linkend="funktionen-db" /></para>
    </formalpara>
  </section>

  <section id="applikationen-dbdeltree">
    <title><code>DBdeltree()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>DBdeltree()</code></secondary>
    </indexterm>

    <simpara>Löscht eine Familie oder einen Schlüsselbaum aus der
    AstDB</simpara>

    <synopsis>DBdeltree(<replaceable>Familie</replaceable>[/<replaceable>Schlüsselzweig</replaceable>])</synopsis>

    <simpara>Löscht den angegebenen Schlüsselzweig aus der AstDB.</simpara>

    <simpara>Liefert immer 0 zurück.</simpara>

    <programlisting>; Einträge in der AstDB anlegen:
exten =&gt; 123,1,Set(DB(farben/eins)=rot)
exten =&gt; 123,n,Set(DB(farben/zwei)=blau)
; now delete the key family named test
exten =&gt; 123,n,DBdeltree(farben)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-dbdel" />, <xref
      linkend="funktionen-db" /></para>
    </formalpara>
  </section>

  <section id="applikationen-deadagi">
    <title><code>DeadAGI()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>DeadAGI()</code></secondary>
    </indexterm>

    <simpara>Führt ein AGI-konformes Skript auf einem toten (aufgelegten)
    Chanel aus</simpara>

    <synopsis>DeadAGI(<replaceable>Programm</replaceable>,<replaceable>Argumente</replaceable>)</synopsis>

    <simpara>Führt ein AGI-konformes Skript auf einem toten (aufgelegten)
    Chanel aus. Mit Hilfe von AGI kann Asterisk externe Programme in nahezu
    jeder beliebigen Sprache ausführen (starten), um einen Telefonkanal zu
    steuern, Audio abzuspielen, DTMF-Ziffern auszulesen usw., indem es nach
    dem AGI-Protokoll auf <code>STDIN</code> und <code>STDOUT</code> mit
    diesen kommuniziert. Die übergebenen <code>Argumente</code> werden an das
    AGI-Programm durchgereicht.</simpara>

    <simpara>Diese Anwendung wurde speziell für tote Kanäle entwickelt, weil
    das Standard AGI-Interface nicht funktioniert, nachdem der Chanel
    aufgelegt wurde. Dass der Chanel <quote>tot</quote> ist, ist allerdings
    keine Voraussetzung für den Start eines DeadAGI-Skripts!</simpara>

    <simpara>Benutzten sie den Befehl <code>show agi</code> auf der
    Kommandozeilen-Schnittstelle, um eine Liste aller verfügbaren AGI-Befehle
    zu erhalten.</simpara>

    <simpara>Liefert -1 zurück, falls die Anwendung ein Auflegen angefordert
    hat, oder 0 beim Austritt ohne Auflegen.</simpara>

    <programlisting>exten =&gt; h,1,DeadAGI(agi-test)</programlisting>

    <important>
      <simpara>Der Chanel wird solange als aktiv angesehen wird, bis das
      Skript beendet wird, was z.B. für CDRs von Bedeutung sein
      kann.</simpara>

      <para>Beachten Sie auch, dass auch DeadAGI-Skripte beim Auflegen des
      Chanels ein <code>SIGHUP</code>-Signal erhalten, was ggf. ignoriert
      werden muss:<informaltable colsep="none" rowsep="none">
          <tgroup cols="2">
            <colspec colnum="1" colwidth="50pt" />

            <tbody>
              <row>
                <entry>Perl</entry>

                <entry><programlisting>$SIG{HUP} = "IGNORE";</programlisting></entry>
              </row>

              <row>
                <entry>PHP</entry>

                <entry><programlisting>pcntl_signal(SIGHUP, SIG_IGN);</programlisting>(PHP
                muss mit <code>--enable-pcntl</code> kompiliert worden sein,
                was per Default nicht der Fall ist!)</entry>
              </row>

              <row>
                <entry>Ruby</entry>

                <entry><programlisting>trap('SIGHUP','IGNORE')</programlisting></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable></para>

      <simpara>Es ist auch wichtig, dass Sie nach dem Auflegen nicht mehr mit
      Asterisk kommunizieren, sonst erhält das Skript ein
      <code>SIGPIPE</code>, was das Skript beendet, sofern Sie es nicht
      ignorieren.</simpara>
    </important>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-agi" />, <xref
      linkend="applikationen-fastagi" /></para>
    </formalpara>
  </section>

  <section id="applikationen-dial">
    <title><code>Dial()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Dial()</code></secondary>
    </indexterm>

    <simpara>Verbindet Kanäle</simpara>

    <synopsis>Dial(<replaceable>Tech</replaceable>/<replaceable>Resource</replaceable>,<replaceable>Timeout</replaceable>,<replaceable>Optionen</replaceable>,<replaceable>URL</replaceable>)</synopsis>

    <synopsis>Dial(<replaceable>Tech1</replaceable>/<replaceable>Resource1</replaceable>[&amp;<replaceable>Tech2</replaceable>/<replaceable>Resource2</replaceable>[&amp;<replaceable>...</replaceable>]],<replaceable>Timeout</replaceable>,<replaceable>Optionen</replaceable>,<replaceable>URL</replaceable>)</synopsis>

    <synopsis>Dial(<replaceable>Tech</replaceable>/<replaceable>User</replaceable>:<replaceable>Passwort</replaceable>@<replaceable>Host</replaceable>/<replaceable>Extension</replaceable>,<replaceable>Timeout</replaceable>,<replaceable>Optionen</replaceable>)</synopsis>

    <simpara>Ermöglicht es, zwei Kanäle miteinander zu verbinden.<footnote>
        <simpara>z.B. IAX, SIP, H.323, Skinny, PRI, FXO, FXS, Local
        ...</simpara>
      </footnote> <code>Dial()</code> ist eine der wichtigsten Anwendungen in
    Asterisk, lesen Sie diesen Ausschnitt deshalb bitte aufmerksam und
    eventuell mehrmals durch.</simpara>

    <simpara>Jeder gültige Chaneltyp (wie z.B. SIP, IAX2, H.323, MGCP, Local
    oder Zap) wird von <code>Dial()</code> akzeptiert, aber die Parameter, die
    jedem Chanel übergeben werden müssen, hängen von denjenigen Informationen
    ab, die der entsprechende Chaneltyp benötigt, um seine Arbeit zu
    verrichten. So wird zum Beispiel ein SIP-Chanel eine Netzwerkadresse und
    einen Benutzer benötigen, zu dem die Verbindung hergestellt werden soll,
    während ein ZAP-Chanel irgendeine Art von Telefonnummer
    verlangt.</simpara>

    <simpara>Wenn ein Netzwerk-basierter Chaneltyp spezifiziert wird, können
    Zielhost (Name oder IP-Adresse), Benutzername, Passwort und
    Fernsteuerungs-Extension als Teil der Optionen an <code>Dial()</code>
    übergeben werden, oder man kann auf den Namen eines Chaneleintrags in der
    entsprechenden Konfigurationsdatei (<filename>.conf</filename>-Datei)
    verweisen - alle notwendigen Informationen müssen dann in dieser Datei
    vorhanden sein. Benutzername und Passwort können durch den Namen der
    Chanelkonfigurationsdatei, umgeben von eckigen Klammern (<code>[]</code>)
    ersetzt werden. Die Angabe des Hostnamens ist optional.</simpara>

    <para>Ein Beispiel für einen gültigen Aufruf: <programlisting>exten =&gt; s,1,Dial(SIP/peter:geheim@meier.tld)</programlisting>
    Das gleiche würde auch der folgende Aufruf bewirken: <programlisting>exten =&gt; s,1,Dial(SIP/ein_SIP_friend)</programlisting>
    Letzteres funktioniert nur, wenn in <filename>sip.conf</filename> ein
    entsprechender Chanel definiert ist: <programlisting>[ein_SIP_friend]
fromuser=peter
password=geheim
host=meier.tld</programlisting></para>

    <para>Oft ist eine Extension wie folgt an die Adressinformation angehängt:
    <programlisting>exten =&gt; s,1,Dial(IAX2/benutzer:passwort@host.tld/500)</programlisting>
    Dadurch wird das entfernte Ende aufgefordert, den Anruf mit Extension 500
    zu verbinden, und zwar in dem Kontext, in der der Chanel eingegangen ist.
    Diese Extension wird von <code>Dial()</code> nicht benötigt, weil die in
    der Chanelkonfiguration des entfernten Endes vorliegenden Daten verwendet
    werden oder der Remoteserver den Anruf zur <code>s</code>-Extension in dem
    Kontext, in dem der Anruf eingegangen ist, weiterleitet.</para>

    <simpara>Schlussendlich kontrolliert das entfernte Ende, was mit dem Anruf
    geschehen soll - Sie können lediglich eine spezielle Behandlung
    anfragen.</simpara>

    <para>Wenn kein <code>Timeout</code> spezifiziert ist, wird der Chanel
    unendlich klingeln. Dieses Verhalten muss nicht immer schlecht sein, es
    besteht keine Veranlassung, ihn immer zu setzen - man muss sich nur
    vergegenwärtigen, dass unendlich evtl. eine sehr lange Zeit bedeuten
    kann.<footnote>
        <simpara>:-)</simpara>
      </footnote> <code>Timeout</code> wird in Sekunden angegeben. Der
    Klingel-Timeout folgt immer der Adressinformation, wie folgt:
    <programlisting>exten =&gt; s,1,Dial(IAX2/user:pass@otherend.com/500,20)</programlisting></para>

    <para>Mit <code>Dial()</code> können auch mehrere Channels parallel
    angerufen werden. Dabei gilt das Prinzip <quote>Wer zuerst kommt, mahlt
    zuerst</quote>. Welcher Angerufene als erstes abhebt, bekommt das
    Gespräch:<programlisting>exten =&gt; s,1,Dial(SIP/2000&amp;SIP/2001&amp;SIP/2303)</programlisting></para>

    <para>Ein großer Teil der Mächtigkeit der <code>Dial()</code>-Anwendung
    liegt in den Flags. Diese werden nach der Adress- und Timeout-Information
    angegeben, und zwar so: <programlisting>exten =&gt; s,1,Dial(IAX2/user:pass@otherend.com/500,60,flags)</programlisting></para>

    <para>Wichtig! Es gilt zu beachten, dass, wenn Sie flags hinzufügen
    möchten, aber kein Timeout spezifiert ist, dennoch der Ort für den Timeout
    nicht fehlen darf. D. h., ein zusätzliches Komma muss an der Stelle
    eingefügt werden, an der normalerweise der Wert für den Timeout stehen
    würde, also so: <programlisting>exten =&gt; s,1,Dial(IAX2/user:pass@otherend.com/500,,flags)</programlisting></para>

    <para>Die gültigen Flags, die mit der <code>Dial()</code>-Anwendung
    benutzt werden können, sind: <variablelist>
        <?dbfo list-presentation="blocks"?>

        <?dbhtml list-presentation="list"?>

        <varlistentry>
          <term><code>d</code></term>

          <listitem>
            <simpara>Erlaubt es dem Teilnehmer, während des Wartens auf die
            Beantwortung eines Anrufs eine einziffrige Extension zu wählen.
            Der Anruf wird dann zu dieser Extension umgeleitet (d.h. der Anruf
            wird zugunsten dieser Extension beendet) (entweder im aktuellen
            Kontext oder, falls er spezifiziert wurde, im Kontext
            <code>${EXITCONTEXT}</code>).</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>t</code></term>

          <listitem>
            <simpara>Erlaubt es dem angerufenen Teilnehmer, einen verbundenen
            Anruf durch Drücken der <code>#</code>-Taste zu übertragen. Es
            gilt zu beachten, dass Neueinladungen nicht möglich sind, wenn
            diese Option benutzt wird, weil Asterisk den Anruf überwachen
            muss, um zu erkennen, wenn die angerufene Seite die
            <code>#</code>-Taste drückt.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>T</code></term>

          <listitem>
            <simpara>Erlaubt es dem Anrufer, einen verbundenen Anruf durch
            Drücken der <code>#</code>-Taste zu übertragen. Auch hier beachten
            Sie bitte, dass Neueinladungen bei Benutzung dieser Option nicht
            möglich sind, weil Asterisk den Anruf überwachen muss, um zu
            erkennen, wenn die angerufene Seite die <code>#</code>-Taste
            drückt.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>w</code></term>

          <listitem>
            <simpara>Ermöglicht es dem angerufenen Teilnehmer den Anruf durch
            Eintippen der <code>automon</code>-Sequenz (wie in
            <filename>features.conf</filename> konfiguriert) aufzunehmen
            (Audio to disk). Falls die Variable <code>TOUCH_MONITOR</code>
            gesetzt ist, wird ihr Wert als Parameter der <code><link
            linkend="applikationen-monitor">Monitor()</link></code>-Anwendung
            weitergeleitet, wenn die Aufnahme startet. Ist sie nicht gesetzt,
            wird <code>Monitor()</code> die Vorgabe <code>WAV,,m</code>
            übergeben.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>W</code></term>

          <listitem>
            <simpara>Ermöglicht es dem Anrufer den Anruf durch Eintippen der
            <code>automon</code>-Sequenz (wie in
            <filename>features.conf</filename> konfiguriert) aufzunehmen
            (Audio to disk).</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>f</code></term>

          <listitem>
            <simpara>Durch dieses Flag muss die Caller ID als die Extension
            der Leitung gesetzt werden, die den ausgehenden Anruf erstellt
            oder umleitet. Das wird so gemacht, weil einige
            PSTN-Diensteanbieter es nicht erlauben, die Caller ID auf
            irgendeinen anderen als den Ihnen zugewiesenen Wert zu setzen. Zum
            Beispiel würden Sie, wenn Sie einen PRI hatten, das Flag
            <code>f</code> verwenden um irgendeine lokal im SIP-Telefon
            gespeicherte Caller ID zu überscheiben.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>o</code></term>

          <listitem>
            <simpara>Benutzt die auf der eingehenden Strecke des Anrufs
            empfangene Caller ID als die Caller ID auf der ausgehenden
            Richtung des Anrufs. Das ist nützlich, falls ein Anruf akzeptiert
            und dann zu einem anderen Ziel weitergeleitet wird, wobei die
            Caller ID der eingehenden Richtung des Anrufs weitergeben wird,
            statt diese zunächst mit den lokalen Caller ID-Einstellungen zu
            überschreiben.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>r</code></term>

          <listitem>
            <simpara>Signalisiert dem Anrufer Klingeln, ohne dass Audio
            weitergeleitet wird, bevor der Anruf beantwortet wird. Dieses Flag
            wird für gewöhnlich nicht benötigt um Klingeln zu signalisiern, da
            Asterisk Klingeln signalisiert, wenn ein Chanel angerufen
            wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>m[<replaceable>Klasse</replaceable>]</code></term>

          <listitem>
            <simpara>Beliefert den Anruf mit Musik, bis der Anruf beantwortet
            wird. Optional können Sie auch die Music-on-Hold-Klasse (z.B.
            Musikrichtung) angeben.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>M(<replaceable>x</replaceable>[^<replaceable>arg</replaceable>])</code></term>

          <listitem>
            <para>Führt auf die Verbindung eines Anrufs hin das Makro
            <code>x</code> aus, und leitet dabei optional Parameter, getrennt
            durch <code>^</code>, weiter. Das Makro kann auch die
            <code>MACRO_RESULT</code> Chanelvariable auf einen der folgenden
            Werte setzen:<variablelist termlength="12">
                <varlistentry>
                  <term><code>ABORT</code></term>

                  <listitem>
                    <simpara>Legt bei beiden Enden des Anrufs auf.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>CONGESTION</code></term>

                  <listitem>
                    <simpara>Wirkt, als wäre Stau auf der Leitung.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>BUSY</code></term>

                  <listitem>
                    <simpara>Wirkt, als wäre die Leitung besetzt (geht zur
                    Priorität n+101).</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>CONTINUE</code></term>

                  <listitem>
                    <simpara>Legt die Seite des Angerufenen auf und fährt im
                    Wählplan fort.</simpara>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>GOTO:&lt;<replaceable>Context</replaceable>&gt;^&lt;<replaceable>Extension</replaceable>&gt;^&lt;<replaceable>Priorität</replaceable>&gt;</code></term>

          <listitem>
            <simpara>Springt zu der angegebenen Position im Wählplan</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>h</code></term>

          <listitem>
            <simpara>Erlaubt es dem angerufenen Teilnehmer, die Leitung durch
            Drücken von <code>*</code> aufzulegen.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>H</code></term>

          <listitem>
            <simpara>Erlaubt es dem anrufenden Teilnehmer, die Leitung durch
            Drücken von <code>*</code> aufzulegen.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>C</code></term>

          <listitem>
            <simpara>Setzt das Call Detail Record (Anrufprotokoll) zurück. Da
            die CDR-Zeit zum Zeitpunkt der Beantwortung des Anrufs gesetzt
            wird, ist es sinnvoll, CDR ebenfalls zurückzusetzen, damit dem
            Teilnehmer nicht die Zeit vor dem Aufruf der Call()-Anwendung in
            Rechnung gestellt wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>P[(<replaceable>x</replaceable>)]</code></term>

          <listitem>
            <simpara>Aktiviert den Geheimhaltungs-Modus, wobei optional
            <code>x</code> als Familie/Schlüssel-Wert in der AstDB
            spezifiziert werden kann. Dieser Modus ist beispielsweise
            nützlich, wenn Anrufe aus einer Blacklist (Anrufe von Nummern aus
            der Blacklist werden explizit abgelehnt) oder Whitelist (Anrufe
            von den gelisteten Nummern werden explizit akzeptiert) angenommen
            werden. Siehe auch <code>LookupBlacklist()</code>.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>g</code></term>

          <listitem>
            <simpara>Geht weiter im Kontext, wenn der Zielkanal aufgelegt
            wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>G(<replaceable>context</replaceable>^<replaceable>extension</replaceable>^<replaceable>priority</replaceable>)</code></term>

          <listitem>
            <simpara>Übermittelt beide Seiten zum spezifizierten Ziel, wenn
            der Anruf beantwortet wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>A(<replaceable>x</replaceable>)</code></term>

          <listitem>
            <simpara>Spielt dem angerufenen Teilnehmer eine Ankündigung vor.
            <code>x</code> ist der Dateiname der Audiodatei, die als
            Ankündigung abzuspielen ist.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>D([<replaceable>called</replaceable>][:<replaceable>calling</replaceable>])</code></term>

          <listitem>
            <simpara>Sendet DTMF-Ziffern, nachdem der Anruf beantwortet wurde,
            aber bevor der Anruf überbrückt wird. Der Parameter
            <code>called</code> wird an die angerufene Seite weitergegeben,
            und der Parameter <code>calling</code> an die anrufende Seite.
            Beide Parameter können individuell eingesetzt werden.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>L(<replaceable>x</replaceable>[:<replaceable>y</replaceable>][:<replaceable>z</replaceable>])</code></term>

          <listitem>
            <para>Begrenzt die Dauer des Anrufs auf <code>x</code>
            Millisekunden, wobei <code>y</code> Millisekunden vor Ablauf der
            festgesetzten Dauer und danach wiederholt alle <code>z</code>
            Millisekunden, bis zum Anlauf der Frist, eine Warnung signalisiert
            wird. Der <code>x</code>-Parameter muss angegeben werden,
            <code>y</code> und <code>z</code> sind optional. Die folgenden
            speziellen Variablen können ebenfalls gesetzt werden, und stellen
            zusätzliche Kontrollmöglichkeiten zur Verfügung:<variablelist
                termlength="31">
                <?dbfo list-presentation="blocks"?>

                <?dbhtml list-presentation="list"?>

                <varlistentry>
                  <term><code>LIMIT_PLAYAUDIO_CALLER=<replaceable>yes|no</replaceable></code></term>

                  <listitem>
                    <simpara>Gibt an, ob dem Anrufer Audiodateien vorgespielt
                    werden sollen</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>LIMIT_PLAYAUDIO_CALLEE=<replaceable>yes|no</replaceable></code></term>

                  <listitem>
                    <simpara>Gibt an, ob dem Angerufenen Audiodateien
                    vorgespielt werden sollen</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>LIMIT_TIMEOUT_FILE=<replaceable>filename</replaceable></code></term>

                  <listitem>
                    <simpara>Gibt an, welche Datei abgespielt werden soll,
                    nachdem die Zeit abgelaufen ist</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>LIMIT_CONNECT_FILE=<replaceable>filename</replaceable></code></term>

                  <listitem>
                    <simpara>Gibt an, welche Datei zu Beginn des Anrufs
                    abgespielt werden soll</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>LIMIT_WARNING_FILE=<replaceable>filename</replaceable></code></term>

                  <listitem>
                    <simpara>Gibt an, welche Datei gespielt werden soll, wenn
                    der Parameter <code>y</code> angegeben ist</simpara>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>n</code></term>

          <listitem>
            <simpara>Verhindert, dass zu Priorität n+101 übergegangen wird
            (<code>n</code>: aktuelle Priorität), falls alle Kanäle als
            besetzt erachtet werden.</simpara>

            <simpara>Ein Anruf kann auch geparkt werden, statt übermittelt zu
            werden (was mit <code>t</code> oder <code>T</code>-Flag der Fall
            ist). Anrufe werden gewöhnlich geparkt, indem man sie der
            Extension 700 übermittelt werden, aber dieses Verhalten ist in
            <filename>features.conf</filename> konfigurierbar.</simpara>

            <para>Mit dem Enden der <code>Dial()</code>-Anwendung werden die
            folgenden Variablen gesetzt:<variablelist termlength="13">
                <varlistentry>
                  <term><code>DIALEDTIME</code></term>

                  <listitem>
                    <simpara>Die gesamte Zeit, die von der Ausführung der
                    <code>Dial()</code>-Anwendung an bis zu ihrer Beendigung
                    verstrichen ist.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>ANWEREDTIME</code></term>

                  <listitem>
                    <simpara>Die gesamte Zeit, die während des Anrufs
                    vergangen ist.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>DIALSTATUS</code></term>

                  <listitem>
                    <para>Der Status des Anrufs, ausgedrückt durch einen der
                    folgenden Werte:<variablelist termlength="13">
                        <varlistentry>
                          <term><code>CHANUNAVAIL</code></term>

                          <listitem>
                            <simpara>Der Chanel ist nicht verfügbar.</simpara>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term><code>CONGESTION</code></term>

                          <listitem>
                            <simpara>Der Chanel hat ein Stau-Signal
                            zurückgeliefert, was gewöhnlich die Unfähigkeit der
                            Fertigstellung der Verbindung
                            kennzeichnet.</simpara>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term><code>NOANSWER</code></term>

                          <listitem>
                            <simpara>Der Chanel hat in der durch die
                            Klingel-Timeout Option gesetzten Frist nicht
                            geantwortet.</simpara>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term><code>BUSY</code></term>

                          <listitem>
                            <simpara>Der angerufene Chanel ist momentan
                            belegt.</simpara>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term><code>ANSWER</code></term>

                          <listitem>
                            <simpara>Der Chanel hat den Anruf
                            beantwortet.</simpara>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term><code>CANCEL</code></term>

                          <listitem>
                            <simpara>Der Anruf wurde abgebrochen.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist></para>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>; eine Nummer auf Zap-Chanel 2 wählen, max. 10 Sekunden klingeln:
exten =&gt; 123,1,Dial(Zap/2/1234567,10,tTm)
; sonst weiter im Dialplan:
exten =&gt; 123,n,Playback(tut-uns-leid)
exten =&gt; 123,n,Hangup()

; über IAX die Extension 500 auf dem Host host.tld wählen:
exten =&gt; 123,1,Dial(IAX/username:password@host.tld/500)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-retrydial" /></para>
    </formalpara>
  </section>

  <section id="applikationen-dictate">
    <title><code>Dictate()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Dictate()</code></secondary>
    </indexterm>

    <simpara>Virtuelles Diktiergerät</simpara>

    <synopsis>Dictate([<replaceable>Verzeichnis</replaceable>[,<replaceable>Dateiname</replaceable>]])</synopsis>

    <simpara>Startet ein virtuelles Diktiergerät. Mit den Parametern lassen
    sich das Verzeichnis für die Aufzeichnungen (Default:
    <filename>/var/spool/asterisk/dictate/</filename>) und der Dateiname
    (numerisch!) bestimmen. Aufgezeichnet wird im Format
    <code>raw</code>.</simpara>

    <para>Der User kann das Diktiergerät mit folgenden Tasten
    steuern:<variablelist spacing="compact" termlength="3">
        <varlistentry>
          <term><code>0</code></term>

          <listitem>
            <simpara>Hilfe</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>1</code></term>

          <listitem>
            <simpara>Schaltet zwischen Aufnahme- und Abspielmodus hin und
            her.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>*</code></term>

          <listitem>
            <simpara>Pause / weiter</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>#</code></term>

          <listitem>
            <simpara>Datei wählen / neuen Dateinamen eingeben (z.B.
            <code>1234#</code>)</simpara>
          </listitem>
        </varlistentry>
      </variablelist>Im Abspielmodus:<variablelist spacing="compact"
        termlength="3">
        <varlistentry>
          <term><code>2</code></term>

          <listitem>
            <simpara>Schaltet die Abspielgeschwindigkeit um (1x, 2x, 3x,
            4x)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>7</code></term>

          <listitem>
            <simpara>Ein Stück zurück springen</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>8</code></term>

          <listitem>
            <simpara>Ein Stück weiter springen</simpara>
          </listitem>
        </varlistentry>
      </variablelist>Im Aufnahmemodus:<variablelist spacing="compact"
        termlength="3">
        <varlistentry>
          <term><code>8</code></term>

          <listitem>
            <simpara>Aufnahme löschen und neu anfangen</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>; Diktiergerät starten:
exten =&gt; 123,1,Dictate()</programlisting>

    <simpara>Um jedem User sein eigenes Diktiergerät zu geben, könnte man z.B.
    als Pfad <filename>/var/spool/asterisk/dictate/${EXTEN}</filename>
    angeben.</simpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-record" /></para>
    </formalpara>
  </section>

  <section id="applikationen-directory">
    <title><code>Directory()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Directory()</code></secondary>
    </indexterm>

    <simpara>Stellt ein Verzeichnis anwählbarer (Voicemail-)Extensions bereit
    (internes Telefonbuch, Dial-by-name, siehe <xref
    linkend="voicemail-telefonbuch" />).</simpara>

    <synopsis>Directory(<replaceable>VM-Kontext</replaceable>[,<replaceable>Wähl-Kontext</replaceable>[,<replaceable>Optionen</replaceable>]])</synopsis>

    <simpara>Liefert Benutzern ein Verzeichnis mit Extensionen, aus dem anhand
    des Namens ausgewählt werden kann. Die Liste von Namen und Extensionen
    findet sich in <filename>voicemail.conf</filename>. Der
    <code>VM-Kontext</code> muss angegeben werden, er bestimmt den zu
    benutzenden Kontext aus <filename>voicemail.conf</filename>.</simpara>

    <simpara>Der <code>Wähl-Kontext</code> bestimmt den zum Anrufen der
    Benutzer zu verwendenden Kontext. Falls er nicht angegeben ist, wird
    <code>VM-Kontext</code> angenommen. Momentan ist die einzige mögliche
    Option, die im <code>Optionen</code>-Parameter Verwendung finden kann,
    <code>f</code> (wie first name), welche das Verzeichnis veranlasst, die
    Eingabe anhand des Vornamens statt des Nachnamens abzugleichen.</simpara>

    <simpara>Gibt der Benutzer <code>0</code> (Null) ein, und es existiert
    eine Extension o (kleiner Buchstabe o) im aktuellen Kontext, geht die
    Steuerung des Anrufs an diese Extension über. Durch Drücken der Taste *
    wird analog dazu zur <code>a</code>-Extension übergegangen. Diese
    Verhalten ähnelt dem von <code>VoiceMail()</code>.</simpara>

    <simpara>Gibt 0 zurück, es sei denn der Teilnehmer legt auf.</simpara>

    <programlisting>exten =&gt; *,1,Directory(default,incoming)
exten =&gt; #,1,Directory(default,incoming,f)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><filename>voicemail.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-disa">
    <title><code>DISA()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>DISA()</code></secondary>
    </indexterm>

    <simpara>Direct Inward System Access erlaubt auswärtigen Anrufern Anrufe
    mit internem System-Wählton</simpara>

    <synopsis>DISA(<replaceable>Passwort</replaceable>[,<replaceable>Kontext</replaceable>[,<replaceable>CallerID</replaceable>[,<replaceable>Mailbox</replaceable>[@<replaceable>VM-Kontext</replaceable>]]]])</synopsis>

    <synopsis>DISA(<replaceable>Passwort-Datei</replaceable>[,<replaceable>CallerID</replaceable>[,<replaceable>Mailbox</replaceable>[@<replaceable>VM-Kontext</replaceable>]]])</synopsis>

    <simpara>Erlaubt Anrufern von außen einen internen System-Wählton zu
    erhalten und entsprechend Anrufe zu tätigen, als würden diese von
    innerhalb des Switches aus getätigt. Dem Teilnehmer wird ein Wählton zur
    Verfügung gestellt, nach dem er einen Zugangskode eingeben muss gefolgt
    von der Rautetaste (<code>#</code>). Ist der Zugangskode korrekt, erhält
    er einen System-Wählton auf dem er einen Anruf tätigen kann.</simpara>

    <caution>
      <para>Diese Art von Zugang kann ein ernstes Sicherheitsrisiko sein und
      sollte sorgfältig überlegt werden, damit die Sicherheit Ihres Systems
      nicht gefährdet ist!</para>
    </caution>

    <simpara>Der <code>Passwort</code>-Parameter ist ein numerischer
    Zugangskode, den der Benutzer eingeben muss um Anrufe tätigen zu können.
    Mit dieser Syntax werden alle Benutzer dieser Extension das gleiche
    Passwort benutzen. Möchten Sie Benutzern erlauben, <code>DISA()</code>
    ohne Passwort zu verwenden, übergeben Sie die Zeichenkette
    <code>no-password</code> an der Stelle des Passwortes.</simpara>

    <simpara>Der <code>Kontext</code>-Parameter spezifiziert den Kontext, in
    dem sich ein Benutzer einwählen wird. Wird kein Kontext spezifiziert,
    nimmt die <code>DISA()</code>-Anwendung den Kontext <code>disa</code>
    an.</simpara>

    <simpara>Die <code>CallerID</code> ist die Mailbox-Nummer (und optional
    Voicemail-Kontext <code>VM-Kontext</code>) einer Voicemail-Box. Der
    Anrufer wird einen sogenannten <quote>stuttered dial-tone</quote> (das ist
    ein regelmäßig kurz unterbrochenen, <quote>stotternder</quote> Wählton)
    hören, falls neue Nachrichten in der angegebenen Voicemail-Box
    vorliegen.</simpara>

    <simpara>Außerdem können Sie eine alternative Syntax benutzen und den
    Namen einer global verfügbaren Passwortdatei statt der Parameter
    <code>Passwort</code> und <code>Kontext</code> übergeben. In jeder Zeile
    kann diese Datei entweder einen Zugangskode oder eine Kombination aus
    Zugangskode und Kontext, getrennt durch das Zeichen <code>|</code>,
    enthalten. Ist kein Kontext mit angegeben, wird standardmäßig der Kontext
    <code>disa</code> verwendet.</simpara>

    <simpara>Ist das Einloggen des Teilnehmers erfolgreich, wird die Anwendung
    die gewählte Nummer in dem spezifizierten Kontext
    interpretieren.</simpara>

    <programlisting>; Anrufern von außen erlauben, 0800er-Nummern zu wählen, sofern sie
; das Passwort (1234) wissen. Dabei ihre Caller-ID so setzen, dass
; es aussieht, als riefen sie von innerhalb der Firma an:
[incoming]
exten =&gt; 123,1,DISA(1234,disa,Apfelmus GmbH &lt;(0261) 1234567&gt;)
[disa]
exten =&gt; _0800XXXXXXXX,1,Dial(Zap/4/${EXTEN})</programlisting>
  </section>

  <section id="applikationen-dumpchan">
    <title><code>DumpChan()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>DumpChan()</code></secondary>
    </indexterm>

    <simpara>Gibt Informationen über den anrufenden Chanel auf der Konsole
    aus</simpara>

    <synopsis>DumpChan([<replaceable>min_verbose_level</replaceable>])</synopsis>

    <simpara>Zeigt Informationen über den anrufen Chanel an, als auch eine
    Auflistung aller Chanelvariablen. Falls <code>min_verbose_level</code>
    angegeben ist, werden Ausgaben nur im Falle eines aktuell gleich hoch oder
    höher gesetzten Verbosity-Levels angezeigt.</simpara>

    <simpara>Gibt stets 0 zurück.</simpara>

    <programlisting>exten =&gt; s,1,Answer()
exten =&gt; s,2,DumpChan()
exten =&gt; s,3,Background(enter-ext-of-person)</programlisting>
  </section>

  <section id="applikationen-eagi">
    <title><code>EAGI()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>EAGI()</code></secondary>
    </indexterm>

    <formalpara>
      <title>Siehe</title>

      <para><xref linkend="applikationen-agi" />.</para>
    </formalpara>
  </section>

  <section id="applikationen-echo">
    <title><code>Echo()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Echo()</code></secondary>
    </indexterm>

    <simpara>Wiederholt inwärtiges Audio für den Anrufer</simpara>

    <synopsis>Echo()</synopsis>

    <simpara>Wiederholt vom Chanel gelesenes Audio wieder auf diesem Chanel
    aus. Diese Anwendung findet häufig zum Testen der Verzögerung und
    Sprachqualität einer VoIP-Verbindung Verwendung. Der Anrufer kann zum
    beenden die <code>#</code>-Taste drücken.</simpara>

    <simpara>Gibt 0 zurück, falls der Benutzer durch die <code>#</code>-Taste
    beendet, oder -1, falls der Benutzer auflegt.</simpara>

    <programlisting>exten =&gt; 123,1,Echo()
exten =&gt; 123,2,Playback(vm-goodbye)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-milliwatt" /></para>
    </formalpara>
  </section>

  <section id="applikationen-endwhile">
    <title><code>EndWhile()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>EndWhile()</code></secondary>
    </indexterm>

    <simpara>Beendet eine While-Schleife</simpara>

    <synopsis>EndWhile()</synopsis>

    <simpara>Kehrt zur vorangehend aufgerufenen <code>While()</code>-Anwendung
    zurück. Für eine vollständige Beschreibung zur Benutzung einer
    While-Schleife siehe <xref linkend="applikationen-while" />.</simpara>

    <programlisting>exten =&gt; 123,1,Set(COUNT=1)
exten =&gt; 123,2,While($[ ${COUNT} &lt; 5 ])
exten =&gt; 123,3,SayNumber(${COUNT})
exten =&gt; 123,4,EndWhile()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-while" />, <xref
      linkend="applikationen-gotoif" /></para>
    </formalpara>
  </section>

  <section id="applikationen-exec">
    <title><code>Exec()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Exec()</code></secondary>
    </indexterm>

    <simpara>Führt eine Asterisk-Anwendung dynamisch aus</simpara>

    <synopsis>Exec(<replaceable>Applikationsname</replaceable>(<replaceable>Argumente</replaceable>))</synopsis>

    <simpara>Erlaubt den Aufruf einer beliebigen Anwendung, selbst wenn er
    nicht fest im Wählplan einprogrammiert ist. Liefert den Wert zurück, den
    diese Asterisk-Anwendung zurückliefert, oder -2, wenn die aufgerufene
    Anwendung nicht gefunden werden kann. Die Parameter <code>arguments</code>
    werden an die aufgerufene Anwendung durchgereicht.</simpara>

    <simpara>Diese Anwendung erlaubt den dynamischen Aufruf von Anwendungen,
    die aus einer Datenbank oder externen Quelle gelesen werden.</simpara>

    <programlisting>exten =&gt; 123,1,Set(app=SayDigits(12345))
exten =&gt; 123,2,Exec(${app})</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-execif" />, <xref
      linkend="applikationen-system" /></para>
    </formalpara>
  </section>

  <section id="applikationen-execif">
    <title><code>ExecIf()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ExecIf()</code></secondary>
    </indexterm>

    <simpara>Führt eine Asterisk-Anwendung unter bestimmten Bedingungen
    aus</simpara>

    <synopsis>ExecIf(<replaceable>Ausdruck</replaceable>,<replaceable>Applikation</replaceable>,<replaceable>Argumente</replaceable>)</synopsis>

    <simpara>Ist <code>Ausdruck</code> wahr, wird die angegebene
    <code>Applikation</code> mit den Parametern <code>Argumente</code>
    ausgeführt, und deren Ergebnis zurückgeliefert. Siehe
    <filename>doc/README.variables</filename> (1.2) /
    <filename>doc/channelvariables.txt</filename> (1.4) für weiterführende
    Informationen über Standard-Asterisk-Ausdrücke.</simpara>

    <simpara>Ist der <code>Ausdruck</code> nicht wahr (also false), wird die
    Ausführung mit der nächsten Priorität forgesetzt.</simpara>

    <programlisting>exten =&gt; 123,1,ExecIf($[ ${CALLERID(num)} = 101],SayDigits,12345)
exten =&gt; 123,2,SayDigits(6789)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-exec" />, <xref
      linkend="applikationen-eval" /></para>
    </formalpara>
  </section>

  <section id="applikationen-fastagi">
    <title><code>FastAGI()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>FastAGI()</code></secondary>
    </indexterm>

    <simpara>Führt ein AGI-konformes Skript über eine Netzwerkverbindung
    aus</simpara>

    <synopsis>FastAGI(agi://<replaceable>hostname</replaceable>[:<replaceable>Port</replaceable>][/<replaceable>script</replaceable>],<replaceable>Argumente</replaceable>)</synopsis>

    <simpara>Führt ein AGI-konformes Skript über das Netzwerk aus. Diese
    Anwendung ist <code>AGI()</code> sehr ähnlich, außer dass sie ein
    FastAGI-Skript über eine Netzwerkverbindung ausführt. Der wichtigste
    Verwendungszweck ist, rechenintensive AGI-Skripte von Remote-Servern
    ausführen zu lassen und die Startzeiten von AGI-Skripten zu reduzieren
    (ein FastAGI Skript läuft bereits bevor Asterisk sich mit ihm verbindet,
    ähnlich FastCGI bei Web-Servern).</simpara>

    <simpara><code>FastAGI()</code> versucht sich direkt zu einem laufenden
    FastAGI-Programm zu verbinden, welches auf einem spezifizierten
    <code>Port</code> des Servers <code>hostname</code> bereits auf
    Verbindungen wartet. Als Standardport wird 4573 benutzt, falls kein
    anderer angegeben ist. Ist <code>script</code> angegeben, wird es als
    <code>agi_network_script</code>-Variable an das FastAGI-Programm
    übergeben. Die in <code>Argumente</code> angegebenen Parameter werden an
    das Programm weitergegeben.</simpara>

    <simpara>Im Verzeichnis <filename>agi/fastagi-test</filename> befindet
    sich ein Beispiel-FastAGI-Skript. Verwenden Sie es als Ansatzpunkt für
    Ihre eigenen FastAGI-Programme.</simpara>

    <simpara>Liefert -1, falls die Anwendung ein Auflegen verlangt, oder 0 bei
    Beendigung ohne Auflegen.</simpara>

    <programlisting>; mit dem Beispiel-FastAGI-Programm "fastagi-test" verbinden, das
; bereits auf dem lokalen Rechner laufen muss:
exten =&gt; 123,1,Answer()
exten =&gt; 123,n,FastAGI(agi://localhost/fastagi-test)

; mit dem FastAGI-Script "test" auf einem Host namens "testbox" auf
; Port 9000 verbinden und als Parameter "123" übergeben:
exten =&gt; 124,1,Answer()
exten =&gt; 124,n,FastAGI(agi://testbox:9000/test,123)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-agi" />, <xref
      linkend="applikationen-deadagi" /></para>
    </formalpara>
  </section>

  <section id="applikationen-festival">
    <title><code>Festival()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Festival()</code></secondary>
    </indexterm>

    <simpara>Verwendet das Sprachsynthese-System (Text-to-speech) Festival um
    dem Anrufer Text vorzulesen</simpara>

    <synopsis>Festival(<replaceable>Text</replaceable>[,<replaceable>Tasten</replaceable>])</synopsis>

    <simpara>Verbindet sich zum lokal laufenden Festival-Server (muss
    installiert sein), sendet ihm den angegebenen <code>Text</code> und spielt
    dem Teilnehmer die resultierende Audiodatei vor. Wenn <code>Tasten</code>
    angegeben wurden und der Anrufer während des Abspielens eine davon drückt,
    wird der Abspielvorgang beendet und die entsprechende Taste zurückgegeben.
    Falls als <code>Tasten</code> der Wert <code>any</code> angegeben ist,
    wird jede Taste erkannt (und an die entsprechende Extension
    weitergeleitet).</simpara>

    <simpara>Sie müssen den Festival-Server <emphasis>vor</emphasis> Asterisk
    starten und die <code>Answer()</code>-Anwendung zum Beantworten des
    Chanels verwenden, bevor sie <code>Festival()</code> aufrufen.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,n,Festival('Hallo Welt',#)</programlisting>

    <para>Alternativ zu der Applikation <code>Festival()</code> kann man auch
    mit dem <code>System()</code>-Befehl Festivals Programm
    <command>text2wave</command> aufrufen und die resultierende Audio-Datei
    mit <code>Background()</code> oder <code>Playback()</code> abspielen, etwa
    so (nur als Beispiel, Verzeichnisse beachten!):<programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,n,System(echo 'Hallo Welt' | text2wave -o sound.wav -otype wav -)
exten =&gt; 123,n,Background(sound)</programlisting></para>

    <formalpara>
      <title>Siehe auch</title>

      <para><filename>contrib/README.festival</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-flash">
    <title><code>Flash()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Flash()</code></secondary>
    </indexterm>

    <simpara>Flasht einen Zap-Chanel</simpara>

    <synopsis>Flash()</synopsis>

    <simpara>Sendet ein Flash auf einen Zap-Chanel. Dies ist nichts weiter als
    ein Hack für Leute, die Übermittlungen und andere Aktionen, die einen
    Flash durch ein AGI-Skript benötigen, durchführen möchten.</simpara>

    <sidebar>
      <simpara>Ein Flash (auch Switch-Hook-Flash oder Link genannt) entspricht
      dem ganz kurzen Drücken der Gabel für 80 - 500 Millisekunden (je nach
      Anbieter) an einem analogen Telefon (manche Apparate haben dafür eine
      Taste), wodurch z.B. Rückfrage-Gespräche o.ä. eingeleitet werden, ohne
      den aktuellen Anruf aufzulegen.</simpara>
    </sidebar>

    <simpara>Liefert bei Erfolg 0 zurück, oder -1, falls der Chanel kein
    Zap-Chanel ist.</simpara>

    <programlisting>exten =&gt; 123,1,Flash()</programlisting>

    <para>Falls Ihnen auf Ihrer Leitung Link-Transfer bereitgestellt wird
    (typischerweise ein Zusatzdienst), könnten Sie so einen Anruf auf eine
    andere externe Nummer umleiten:<programlisting>[macro-link-umleitung]
exten =&gt; s,1,Playback(transfer)
exten =&gt; s,n,Flash()
exten =&gt; s,n,Wait(1)
exten =&gt; s,n,SendDTMF(${ARG1})
exten =&gt; s,n,Wait(1)
exten =&gt; s,n,Hangup()

[externe-apparate]
; eingehende Anrufe auf 6001 auf die externe Nummer 0261123456 umleiten:
exten =&gt; 6001,1,Macro(link-umleitung,0261123456)</programlisting>Es kann
    dazu nötig sein, die Flash-Dauer (Einstellung <code>flash</code>) in der
    <filename>zapata.conf</filename> auf die Vorgabe Ihres Anbieters zu
    setzen, z.B. <code>flash=200</code>.</para>
  </section>

  <section id="applikationen-forkcdr">
    <title><code>ForkCDR()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ForkCDR()</code></secondary>
    </indexterm>

    <simpara>Erstellt ein zusätzliches CDR aus dem aktuellen Anruf.</simpara>

    <synopsis>ForkCDR()</synopsis>

    <simpara>Erstellt für den Rest des aktuellen Anrufs einen zusätzlichen
    Call Detail Record, um die in Rechnung zu stellende Gesprächszeit von der
    Gesamtdauer des Anrufs zu unterscheiden.</simpara>

    <programlisting>exten =&gt; 123,n,ForkCDR()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-appendcdruserfield" />, <xref
      linkend="applikationen-nocdr" />, <xref
      linkend="applikationen-resetcdr" />, <xref
      linkend="applikationen-setcdruserfield" /></para>
    </formalpara>
  </section>

  <section id="applikationen-getcpeid">
    <title><code>GetCPEID()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>GetCPEID()</code></secondary>
    </indexterm>

    <simpara>Holt die CPE-ID eines ADSI-fähigen Telefons</simpara>

    <synopsis>GetCPEID()</synopsis>

    <simpara>Holt die CPE-ID und weitere Informationen und zeigt sie auf der
    Asterisk-Konsole an. Diese Informationen werden häufig benötigt, um die
    Datei <filename>zapata.conf</filename> für Operationen bei ADSI-fähigen
    Telefonen einzurichten.</simpara>

    <simpara>Liefert zur beim Auflegen -1 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,GetCPEID()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-adsiprog" />,
      <filename>adsi.conf</filename>, <filename>zapata.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-gosub">
    <title><code>Gosub()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Gosub()</code></secondary>
    </indexterm>

    <simpara>Springt zu einer bestimmten Priorität, Extension und den Kontext
    (mit der Möglichkeit der Rückkehr).</simpara>

    <synopsis>Gosub([[<replaceable>Kontext</replaceable>,]<replaceable>Extension</replaceable>,]<replaceable>Priorität</replaceable>)</synopsis>

    <synopsis>Gosub(<replaceable>benannte_Priorität</replaceable>)</synopsis>

    <simpara>Springt wie <code>Goto()</code> im Dialplan, erlaubt es dem
    Unterprogramm aber, mit <code>Return()</code> zurückzukehren.</simpara>

    <simpara>Gibt 0 zurück, oder -1, wenn das Sprungziel ungültig
    ist.</simpara>

    <programlisting>exten =&gt; 123,1,Gosub(cid-setzen)
exten =&gt; 123,n,Dial(Zap/g0/${EXTEN})
exten =&gt; 123,n,Congestion()

exten =&gt; 123,10(cid-setzen),Set(CALLERID(all)=Apfelmus &lt;012345678&gt;)
exten =&gt; 123,n,Return()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-gosubif" />, <xref
      linkend="applikationen-goto" />, <xref
      linkend="applikationen-gotoif" />, <xref
      linkend="applikationen-return" />, <xref
      linkend="applikationen-macro" /></para>
    </formalpara>
  </section>

  <section id="applikationen-gosubif">
    <title><code>GosubIf()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>GosubIf()</code></secondary>
    </indexterm>

    <simpara>Springt bedingt zu der angegebenen Priorität (mit der Möglichkeit
    der Rückkehr).</simpara>

    <synopsis>GosubIf(<replaceable>Bedingung</replaceable>?<replaceable>PrioWahr</replaceable>:<replaceable>PrioFalsch</replaceable>)</synopsis>

    <simpara>Springt wie <code>GotoIf()</code> unter einer bestimmten
    Bedingung im Dialplan, erlaubt es dem Unterprogramm aber, mit
    <code>Return()</code> zurückzukehren.</simpara>

    <simpara>Gibt 0 zurück, oder -1, wenn das Sprungziel ungültig
    ist.</simpara>

    <programlisting>exten =&gt; telcid,1,Set(CALLERID(all)=Apfelmus &lt;0123456780&gt;)
exten =&gt; telcid,n,Return()
exten =&gt; faxcid,1,Set(CALLERID(all)=Apfelmus &lt;0123456785&gt;)
exten =&gt; faxcid,n,Return()

exten =&gt; _0.,1,GosubIf($[${CHANNEL:4:2} = 43]?faxcid,1:telcid,1)
exten =&gt; _0.,n,Dial(${TRUNK}/${EXTEN:1},,T)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-gosub" />, <xref
      linkend="applikationen-goto" />, <xref
      linkend="applikationen-gotoif" />, <xref
      linkend="applikationen-return" />, <xref
      linkend="applikationen-macro" /></para>
    </formalpara>
  </section>

  <section id="applikationen-goto">
    <title><code>Goto()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Goto()</code></secondary>
    </indexterm>

    <simpara>Springt zu einer bestimmten Priorität, Extension und den
    Kontext.</simpara>

    <synopsis>Goto([[<replaceable>Kontext</replaceable>,]<replaceable>Extension</replaceable>,]<replaceable>Priorität</replaceable>)</synopsis>

    <synopsis>Goto(<replaceable>benannte_Priorität</replaceable>)</synopsis>

    <simpara>Übergibt die Kontrolle des aktuellen Chanels ohne Möglichkeit der
    Rückkehr an die spezifizierte Priorität, und setzt optional Extension und
    Kontext des Ziels.</simpara>

    <simpara>Optional können Sie die Anwendung dazu benutzen, zu der durch den
    Parameter <code>benannte_Priorität</code> angegebenen Priorität (also
    Priorität mit Label) zu gelangen. Benannte Prioritäten funktionieren
    ausschließlich in der aktuellen Extension.</simpara>

    <simpara>Liefert immer 0 zurück, auch falls der gegebene Kontext, die geg.
    Extension oder Priorität nicht gültig sind.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,2,Set(COUNT=1)
exten =&gt; 123,3,SayNumber(${COUNT})
exten =&gt; 123,4,Set(COUNT=$[ ${COUNT} + 1 ])
exten =&gt; 123,5,Goto(3)

; das gleiche mit einer benannten Priorität:
exten =&gt; 124,1,Answer()
exten =&gt; 124,2,Set(COUNT=1)
exten =&gt; 124,3(wdh),SayNumber(${COUNT})
exten =&gt; 124,4,Set(COUNT=$[ ${COUNT} + 1 ])
exten =&gt; 124,5,Goto(wdh)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-gotoif" />, <xref
      linkend="applikationen-gotoiftime" />, <xref
      linkend="applikationen-gosub" />, <xref
      linkend="applikationen-gosubif" />, <xref
      linkend="applikationen-macro" /></para>
    </formalpara>
  </section>

  <section id="applikationen-gotoif">
    <title><code>GotoIf()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>GotoIf()</code></secondary>
    </indexterm>

    <simpara>Springt bedingt zu der angegebenen Priorität</simpara>

    <synopsis>GotoIf(<replaceable>Bedingung</replaceable>?<replaceable>PrioWahr</replaceable>:<replaceable>PrioFalsch</replaceable>)</synopsis>

    <simpara>Schickt den Anruf ohne Möglichkeit der Rückkehr an die Priorität
    <code>PrioWahr</code>, falls die <code>Bedingung</code> wahr ist oder zu
    <code>PrioFalsch</code>, falls sie falsch ist. Entweder
    <code>PrioWahr</code> oder <code>PrioFalsch</code> können ausgelassen
    werden (dann wird ggf. mit der nächsten Priorität weitergemacht), aber
    nicht beide (und nicht der Doppelpunkt!).</simpara>

    <para>Eine Priorität ist in hier eines der Folgenden:<itemizedlist
        spacing="compact">
        <listitem>
          <simpara>eine Priorität, z.B. <code>10</code></simpara>
        </listitem>

        <listitem>
          <simpara>eine Extension und eine Priorität, z.B.
          <code>123,10</code></simpara>
        </listitem>

        <listitem>
          <simpara>Kontext, Extension und Priorität, z.B.
          <code>incoming,123,10</code></simpara>
        </listitem>

        <listitem>
          <simpara>eine benannte Priorität innerhalb der gleichen Extension,
          z.B. <code>ok</code></simpara>
        </listitem>
      </itemizedlist></para>

    <programlisting>exten =&gt; 123,1,GotoIf($[ ${test} = 5 ]?ok:nein)
exten =&gt; 123,10(ok),Playback(tt-monkeys)
exten =&gt; 123,20(nein),Playback(tt-weasels)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-goto" />, <xref
      linkend="applikationen-gotoiftime" />, <xref
      linkend="applikationen-gosub" />, <xref
      linkend="applikationen-gosubif" />, <xref
      linkend="applikationen-macro" /></para>
    </formalpara>
  </section>

  <section id="applikationen-gotoiftime">
    <title><code>GotoIfTime()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>GotoIfTime()</code></secondary>
    </indexterm>

    <simpara>Verzweigt bedingt, abhängig von Zeit und Tag</simpara>

    <synopsis>GotoIfTime(<replaceable>Zeit</replaceable>,<replaceable>Wochentag</replaceable>,<replaceable>Monatstag</replaceable>,<replaceable>Monat</replaceable>?[[<replaceable>Kontext</replaceable>,]<replaceable>Extension</replaceable>,]<replaceable>Pri</replaceable>o)</synopsis>

    <simpara>Verzweigt zu der angegebenen Priorität, falls die aktuelle Zeit
    in das angegebene Muster fällt. Jedes Element kann auch als * (für immer)
    oder als Spanne (mit <code>-</code>) definiert werden.</simpara>

    <para>Die Parameter zu dieser Anwendung sind: <variablelist
        spacing="compact" termlength="15">
        <varlistentry>
          <term><code>Uhrzeit-Spanne</code></term>

          <listitem>
            <simpara>Zeitintervall, im 24-Stunden-Format mit Minuten, z.B.
            <code>9:00-17:00</code></simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>Wochentag</code></term>

          <listitem>
            <simpara>Wochentage (<code>mon</code>, <code>tue</code>,
            <code>wed</code>, <code>thu</code>, <code>fri</code>,
            <code>sat</code>, <code>sun</code>), z.B.
            <code>mon-fri</code></simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>Monatstag</code></term>

          <listitem>
            <simpara>Tag des Monats (1-31), z.B. <code>1-15</code></simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>Monat</code></term>

          <listitem>
            <simpara>Monate (<code>jan</code>, <code>feb</code>,
            <code>mar</code>, <code>apr</code>, <code>mai</code>,
            <code>jun</code>, <code>jul</code>, <code>aug</code>,
            <code>sep</code>, <code>oct</code>, <code>nov</code>,
            <code>dec</code>), z.B. <code>apr-oct</code></simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>; Während der Öffnungszeiten zum Kontext incoming-geoeffnet springen.
; Wir haben montags-freitags von 9 bis 18 Uhr geöffnet:
exten =&gt; s,1,GotoIfTime(09:00-17:59,mon-fri,*,*?incoming-geoeffnet,s,1)
; außerdem samstags von 9 bis 12:
exten =&gt; s,n,GotoIfTime(09:00-11:59,sat,*,*?incoming-geoeffnet,s,1)
; Außerhalb der Öffnungszeiten zum Kontext incoming-geschlossen:
exten =&gt; s,n,Goto(incoming-geschlossen,s,1)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-gotoif" />, <xref
      linkend="funktionen-iftime" /></para>
    </formalpara>
  </section>

  <section id="applikationen-hangup">
    <title><code>Hangup()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Hangup()</code></secondary>
    </indexterm>

    <simpara>Legt den aktuellen Chanel auf.</simpara>

    <synopsis>Hangup()</synopsis>

    <simpara>Legt den aktuellen Chanel bedingungslos auf.</simpara>

    <simpara>Liefert stets -1 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,n,Playback(vm-goodbye)
exten =&gt; 123,n,Hangup()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-answer" /></para>
    </formalpara>
  </section>

  <section id="applikationen-iax2provision">
    <title><code>IAX2Provision()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>IAX2Provision()</code></secondary>
    </indexterm>

    <simpara>Versorgt eine anrufende IAXy-Einheit</simpara>

    <synopsis>IAX2Provision([<replaceable>Template</replaceable>])</synopsis>

    <simpara>Stellt einer anrufende IAXy-Einheit die Vorlage
    <code>Template</code> bereit. Ist keine Vorlage angegeben, wird die
    Standard-Vorlage benutzt. IAXy-Versorgungsvorlagen sind in der
    Konfigurationsdatei <filename>iaxprov.conf</filename> definiert.</simpara>

    <simpara>Liefert 0 bei Erfolg oder -1 bei einem Fehler.</simpara>

    <programlisting>exten =&gt; 123,1,IAX2Provision(default)</programlisting>
  </section>

  <section id="applikationen-importvar">
    <title><code>ImportVar()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ImportVar()</code></secondary>
    </indexterm>

    <simpara>Setzt eine Variable basierend auf einer Chanelvariable eines
    anderen Chanels</simpara>

    <synopsis>ImportVar(<replaceable>NeueVariable</replaceable>=<replaceable>Chanel</replaceable>,<replaceable>Variable</replaceable>)</synopsis>

    <simpara>Setzt die Variable <code>NeueVariable</code> auf den Wert von
    <code>Variable</code> des anegegebenen Chanels. Falls
    <code>NeueVariable</code> mit dem Zeichen <code>_</code> beginnt, wird
    einfache Vererbung angenommen. Falls es <code>newvar</code> mit
    <code>__</code> beginnt, wird unbeschränkte Vererbung
    angenommen.</simpara>

    <programlisting>; Caller-ID vom Chanel Zap/1 importieren:
exten =&gt; 123,1,Answer()
exten =&gt; 123,n,ImportVar(cid=Zap/1,CALLERID)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-set" /></para>
    </formalpara>
  </section>

  <section id="applikationen-lookupblacklist">
    <title><code>LookupBlacklist()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>LookupBlacklist()</code></secondary>
    </indexterm>

    <simpara>Schlägt die Caller-ID-Nummer in der lokalen Blacklist-Datenbank
    in der AstDB nach</simpara>

    <synopsis>LookupBlacklist([<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Sucht die CallerID-Nummer (/-Name) des aktiven Chanels in der
    AstDB (Familie <code>blacklist</code>). Wenn die Option j (jump) angegeben
    ist, die Nummer gefunden wird und eine Priorität n+101 existiert, geht die
    Ausführung bei dieser Priorität weiter. Wird auf dem Chanel keine CallerID
    empfangen, tut die Anwendung nichts.</simpara>

    <simpara>Die Applikation setzt auch die Chanel-Variable
    <code>LOOKUPBLSTATUS</code> auf <code>FOUND</code> (gefunden) oder
    <code>NOTFOUND</code> (nicht gefunden).</simpara>

    <simpara>Um der Blacklist Einträge hinzuzufügen, geben Sie im CLI
    <code>database put blacklist "<replaceable>Nummer</replaceable>"
    "1"</code>, bzw. <code>database del blacklist
    "<replaceable>Nummer</replaceable>"</code> zum Löschen oder <code>database
    show blacklist</code> für eine Auflistung ein.</simpara>

    <programlisting>; Nummern aus der Schwarzen Liste in eine Endlosschleife schicken,
; andernfalls die Nummer in der Variablen ${PETER} wählen:
exten =&gt; 123,1,Answer()
exten =&gt; 123,2,LookupBlacklist(j)
exten =&gt; 123,3,Dial(${PETER},30)
exten =&gt; 123,103,Playback(tt-allbusy)
exten =&gt; 123,104,Wait(10)
exten =&gt; 123,105,Goto(103)</programlisting>

    <para>Die Applikation <code>LookupBlacklist()</code> ist offenbar ab
    Asterisk 1.4 deprecated und kann folgendermaßen ersetzt
    werden:<programlisting>exten =&gt; 123,1,Macro(blacklist,${CALLERID(num)})
exten =&gt; 123,n,Dial(IAX2/benutzer:passwort@beispiel.de/500)

[macro-blacklist]
; Aufruf: Macro(blacklist,${CALLERID(num)})
exten =&gt; s,1,GotoIf(${DB_EXISTS(blacklist/${ARG1})}?black)
exten =&gt; s,10(black),NoOp(Nummer ${ARG1} ist auf der Blacklist)
exten =&gt; s,n,Busy(5)
exten =&gt; s,n,Hangup()</programlisting></para>
  </section>

  <section id="applikationen-lookupcidname">
    <title><code>LookupCIDName()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>LookupCIDName()</code></secondary>
    </indexterm>

    <simpara>Sucht einen Caller ID Namen in der AstDB</simpara>

    <synopsis>LookupCIDName()</synopsis>

    <simpara>Schlägt die CallerID-Nummer des aktiven Chanels in der AstDB
    (Familie <code>cidname</code>) nach und setzt den CallerID-Namen - wenn
    vorhanden - auf den gespeicherten Wert. Diese Anwendung tut nichts, wenn
    auf dem Chanel keine CallerID empfangen wird. <code>LookupCIDName()</code>
    kann nützlich sein, wenn Sie nur eine CallerID-Nummer aber keinen -Namen
    empfangen, oder wenn Sie den CallerID-Namen für einige eingehende Anrufe
    ändern möchten.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <simpara>Um der Liste Einträge hinzuzufügen, geben Sie im CLI
    <code>database put cidname "<replaceable>Nummer</replaceable>"
    "<replaceable>Name</replaceable>"</code>, bzw. <code>database del cidname
    "<replaceable>Nummer</replaceable>"</code> zum Löschen oder <code>database
    show cidname</code> für eine Auflistung ein.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,n,LookupCIDName()</programlisting>
  </section>

  <section id="applikationen-macro">
    <title><code>Macro()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Macro()</code></secondary>
    </indexterm>

    <simpara>Ruft ein zuvor definiertes Makro auf</simpara>

    <synopsis>Macro(<replaceable>macroname</replaceable>[,<replaceable>Arg1</replaceable>[,<replaceable>Arg2</replaceable>[,<replaceable>...</replaceable>]]])</synopsis>

    <simpara>Führt ein im Kontext
    <code>macro-<replaceable>macroname</replaceable></code> definiertes Makro
    aus, in dem es zur <code>s</code>-Extension dieses Kontextes springt und
    nach der Ausführung des Macros zurückkehrt.</simpara>

    <simpara>Die angerufene Extension, Kontext und Priorität sind innerhalb
    des Macros in<code> ${MACRO_EXTEN}</code>, <code>${MACRO_CONTEXT}</code>
    und <code>${MACRO_PRIORITY}</code> verfügbar. Die Parameter
    <code>Arg1</code>, <code>Arg2</code> ... werden im Makrokontext zu
    <code>${ARG1}</code>, <code>${ARG2}</code> usw.</simpara>

    <simpara><code>Macro()</code> liefert -1 zurück, falls irgendein Schritt
    des Makros -1 zurückliefert, sonst 0. Falls bei Beendigung des Ablaufs
    <code>${MACRO_OFFSET}</code> gesetzt ist, versucht die Anwendung bei
    Priorität n+1+<code>MACRO_OFFSET</code> fortzufahren, falls ein solcher
    Schritt existiert, sonst bei n+1.</simpara>

    <simpara>Falls die <code>Goto()</code>-Anwendung aus dem Makro heraus
    aufgerufen wird, wird das Makro enden und die Kontrolle an das Ziel von
    <code>Goto()</code> gehen.</simpara>

    <programlisting>; ein Macro definieren, das vom übergebenen Wert runterzählt:
[macro-countdown]
exten =&gt; s,1,Set(COUNT=${ARG1})
exten =&gt; s,n,While($[ ${COUNT} &gt; 0])
exten =&gt; s,n,SayNumber(${COUNT})
exten =&gt; s,n,Set(COUNT=$[ ${COUNT} - 1 ])
exten =&gt; s,n,EndWhile()
; das Macro aufrufen:
[default]
exten =&gt; 123,1,Macro(countdown,3)
exten =&gt; 124,1,Macro(countdown,5)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-goto" />, <xref
      linkend="applikationen-gosub" /></para>
    </formalpara>
  </section>

  <section id="applikationen-mailboxexists">
    <title><code>MailboxExists()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MailboxExists()</code></secondary>
    </indexterm>

    <simpara>Verzweigt bedingt, falls die angegebene Voicemail-Box
    existiert</simpara>

    <synopsis>MailboxExists(<replaceable>Mailbox</replaceable>[@<replaceable>Kontext</replaceable>][,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Prüft, ob die durch <code>Mailbox</code> angegebene Voicemail-Box
    existiert. Sie können zusätzlich einen Voicemail-Kontext
    <code>Kontext</code> übergeben, wenn die Mailbox nicht zum
    Standard-Voicemail-Kontext gehört.</simpara>

    <simpara>Setzt die Chanel-Variable <code>VMBOXEXISTSSTATUS</code> auf
    <code>SUCCESS</code> (Erfolg, Mailbox vorhanden) oder <code>FAILED</code>
    (fehlgeschlagen, Mailbox nicht vorhanden).</simpara>

    <simpara>Mit der Option <code>j</code> wird bei vorhandener Mailbox zur
    Priorität n+101 gesprungen.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,n,MailboxExists(123@default)
exten =&gt; 123,n,Goto(box-${VMBOXEXISTSSTATUS})
exten =&gt; 123,10(box-SUCCESS),VoiceMail(123,u)
exten =&gt; 123,20(box-FAILED),Playback(tut-uns-leid)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="funktionen-vmcount" /></para>
    </formalpara>
  </section>

  <section id="applikationen-meetme">
    <title><code>MeetMe()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MeetMe()</code></secondary>
    </indexterm>

    <simpara>Nimmt den Anrufer in eine MeetMe-Konferenz auf</simpara>

    <synopsis>MeetMe([<replaceable>KonferenzNr</replaceable>][,<replaceable>Optionen</replaceable>[,<replaceable>PIN</replaceable>]])</synopsis>

    <simpara>Verbindet den Anrufer auf dem aktuellen Chanel zu einer
    MeetMe-Konferenz, angegeben durch den Parameter <code>KonferenzNr</code>.
    Ohne Angabe der Konferenznummer wird der Teilnehmer zur Eingabe derselben
    aufgefordert.</simpara>

    <simpara>Wird als <code>PIN</code>-Parameter die PIN-Nummer der Konferenz
    (statisch in <filename>meetme.conf</filename> oder dynamisch vom Ersteller
    festgelegt) übergeben, so wir der Anrufer direkt in die Konferenz
    geleitet. Ansonsten muss der Anrufer die PIN eingeben um beitreten zu
    können.</simpara>

    <important>
      <simpara>Damit MeetMe-Konferenzen funktionieren, muss ein passendes
      Zaptel-Interface installiert sein. Alternativ kann auch der
      <code>ztdummy</code>-Treiber für Timing-Zwecke verwendet
      werden.</simpara>

      <simpara>MeetMe-Konferenzen benutzen offenbar intern immer den
      uLaw-Codec, je mehr Teilnehmer in einer Konferenz andere Codecs wie GSM
      verwenden, desto mehr Rechenleistung wird für die Umkodierung
      benötigt.</simpara>
    </important>

    <simpara>Die <code>Optionen</code> können sich aus folgenden Zeichen
    zusammensetzen:</simpara>

    <variablelist termlength="3">
      <varlistentry>
        <term><code>a</code></term>

        <listitem>
          <simpara>Aktiviert den Administrator-Modus.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>A</code></term>

        <listitem>
          <simpara>Markiert den eintretenden User als besonderen Teilnehmer
          (siehe <code>w</code> und <code>x</code>).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>b</code></term>

        <listitem>
          <simpara>Startet das in <code>${MEETME_AGI_BACKGROUND}</code>
          spezifizierte AGI-Skript, standardmäßig
          <filename>conf-background.agi</filename>. (Funktioniert nur dann
          korrekt, wenn alle Kanäle in einer Konferenz Zap-Kanäle sind.) Das
          Skript erhält alle DTMF-Tanstendrücke, wodurch die Kombination mit
          Optionen, die auch das Abfangen von Tasten zur Folge haben
          (<code>p</code>) nicht möglich ist.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>c</code></term>

        <listitem>
          <simpara>Kündigt beim Betreten die Zahl der Teilnehmer an.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>d</code></term>

        <listitem>
          <simpara>Legt dynamisch einen neuen Konferenzraum an.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>D</code></term>

        <listitem>
          <simpara>Legt dynamisch einen neuen Konferenzraum an, wobei die
          Festlegung der PIN verlangt wird. (Wenn der User keine PIN will,
          muss er <code>#</code> drücken.)</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>e</code></term>

        <listitem>
          <simpara>Wählt eine leere Konferenz aus.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>E</code></term>

        <listitem>
          <simpara>Wählt eine leere Konferenz aus, die keine PIN
          verlangt.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>i</code></term>

        <listitem>
          <simpara>Kündigt Betreten oder Verlassen eines Teilnehmers an (nur
          mit Zap-Kanälen).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>m</code></term>

        <listitem>
          <simpara>Aktiviert den Monitor-Modus (nur hören, nicht
          sprechen).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>M</code></term>

        <listitem>
          <simpara>Aktiviert Wartemusik (Music on Hold), wenn nur ein
          Teilnehmer in der Konferenz ist.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>p</code></term>

        <listitem>
          <simpara>Ermöglicht es dem Teilnehmer, die Konferenz durch Drücken
          von <code>#</code> zu verlassen.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>P</code></term>

        <listitem>
          <simpara>Fragt immer nach der PIN, auch wenn sie hier im Befehl
          angegeben ist.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>q</code></term>

        <listitem>
          <simpara>Aktiviert den ruhigen Modus (spielt keine
          Eintritts-/Austrittsklänge ab).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>r</code></term>

        <listitem>
          <simpara>Zeichnet eine Konferenz als auf. Datei:
          <code>${MEETME_RECORDINGFILE}</code>, Format:
          <code>${MEETME_RECORDINGFORMAT}</code>. Der Standard-Dateiname
          lautet
          <code>meetme-conf-rec-${<replaceable>KonferenzNr</replaceable>}-${<replaceable>UniqueID</replaceable>}</code>,
          wobei <code>UniqueID</code> eine einmalige ID ist. Das
          Standardformat ist <code>wav</code>. (Funktioniert nur mit
          Zap-Kanälen)</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>s</code></term>

        <listitem>
          <simpara>Wechselt beim Drücken von <code>*</code> ins (Teilnehmer-
          oder Administrator-)Menü.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>t</code></term>

        <listitem>
          <simpara>Aktiviert den Nur-Sprechen-Modus (nur reden, nicht
          hören).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>T</code></term>

        <listitem>
          <simpara>Aktiviert die Sprecher-Erkennung (wird zum Manager-Inferace
          gesendet und in der MeetMe-Liste im CLI angezeigt).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>v</code></term>

        <listitem>
          <simpara>Aktiviert den Video-Modus (bisher ohne Funktion).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>w</code></term>

        <listitem>
          <simpara>Wartet, bis ein gekennzeichneter Teilnehmer (siehe
          <code>A</code>) die Konferenz betritt. Bis dahin hören alle
          Teilnehmer Wartemusik.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>x</code></term>

        <listitem>
          <simpara>Schließt die Konferenz, wenn sie vom letzten
          gekennzeichneten Teilnehmer (siehe <code>A</code>) verlassen
          wird.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>X</code></term>

        <listitem>
          <simpara>Ermöglicht es dem Teilnehmer, die Konferenz durch Eingabe
          einer einziffrigen Extension im Kontext
          <code>${MEETME_EXIT_CONTEXT}</code> zu verlassen, oder durch Eingabe
          der Nummer einer Extension des aktuellen Kontexts, falls diese
          Variable nicht definiert ist.</simpara>
        </listitem>
      </varlistentry>
    </variablelist>

    <simpara>Die Option <code>X</code> funktioniert nicht zusammen mit
    <code>p</code> oder <code>s</code>.</simpara>

    <simpara>Verwenden Sie <code>e</code> (oder <code>E</code>) zusammen mit
    <code>d</code> (oder <code>D</code>), um dynamisch einen neuen
    Konferenzraum zu eröffnen, wobei Asterisk automatisch die
    <code>KonferenzNr</code> festlegt. Sie müssen dann natürlich den anderen
    Teilnehmern die Nummer mitteilen oder entsprechende Dialplan-Logik
    einsetzen.</simpara>

    <note>
      <para>Mit <code>d</code> oder <code>D</code> werden
      <emphasis>dynamisch</emphasis> Konferenzräume angelegt, in der
      <filename>meetme.conf</filename> können sie
      <emphasis>statisch</emphasis> definiert werden.</para>
    </note>

    <programlisting>exten =&gt; 123,1,Answer()
; den Anrufer in Konferenzraum 333 schicken (mit der PIN 1234):
exten =&gt; 123,n,MeetMe(333,DpM,1234)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-meetmeadmin" />, <xref
      linkend="applikationen-meetmecount" /></para>
    </formalpara>

    <formalpara>
      <title>Befehle im CLI</title>

      <para>Diese Befehle stehen im CLI zur Verfügung, um MeetMe-Konferenzen
      zu verwalten (Dabei ist die <code>TeilnehmerNr</code> die in der Liste
      angezeigte Nummer des Teilnehmers):<variablelist spacing="compact">
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><code>MeetMe</code></term>

            <listitem>
              <simpara>Listet alle Konferenzen auf.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe list
            <replaceable>KonferenzNr</replaceable></code></term>

            <listitem>
              <simpara>Listet die Teilnehmer einer Konferenz auf.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe kick <replaceable>KonferenzNr</replaceable>
            <replaceable>TeilnehmerNr</replaceable></code></term>

            <listitem>
              <simpara>Wirft einen Teilnehmer aus der Konferenz.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe kick
            <replaceable>KonferenzNr</replaceable></code></term>

            <listitem>
              <simpara>Wirft alle Teilnehmer aus der Konferenz.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe lock
            <replaceable>KonferenzNr</replaceable></code></term>

            <listitem>
              <simpara>Sperrt eine Konferenz, so dass keine Teilnehmer mehr
              aufgenommen werden.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe unlock
            <replaceable>KonferenzNr</replaceable></code></term>

            <listitem>
              <simpara>Hebt eine Konferenz-Sperre (s.o.) wieder auf.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe mute <replaceable>KonferenzNr</replaceable>
            <replaceable>TeilnehmerNr</replaceable></code></term>

            <listitem>
              <simpara>Schaltet einen Teilnehmer stumm.</simpara>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><code>MeetMe unmute <replaceable>KonferenzNr</replaceable>
            <replaceable>TeilnehmerNr</replaceable></code></term>

            <listitem>
              <simpara>Hebt die Stummschaltung eines Teilnehmers (s.o.) wieder
              auf.</simpara>
            </listitem>
          </varlistentry>
        </variablelist></para>
    </formalpara>
  </section>

  <section id="applikationen-meetmeadmin">
    <title><code>MeetMeAdmin()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MeetMeAdmin()</code></secondary>
    </indexterm>

    <simpara>Administration von MeetMe-Konferenzen</simpara>

    <synopsis>MeetMeAdmin(<replaceable>KonferenzNr</replaceable>,<replaceable>Befehl</replaceable>[,<replaceable>TeilnehmerNr</replaceable>])</synopsis>

    <para>Führt den angegebenen MeetMe-Administrationsbefehl in der
    angegebenen Konferenz aus. Der Befehl kann einer der folgenden sein (Die
    <code>TeilnehmerNr</code> wird nur für den Befehl <code>k</code>
    benötigt.): <variablelist spacing="compact" termlength="3">
        <varlistentry>
          <term><code>K</code></term>

          <listitem>
            <simpara>Wirft alle Teilnehmer aus der Konferenz</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>k</code></term>

          <listitem>
            <simpara>Wirft den Teilnehmer mit der angegebenen
            <code>TeilnehmerNr</code> aus der Konferenz</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>e</code></term>

          <listitem>
            <simpara>Wirft den letzten Teilnehmer, der sich zu der Konferenz
            verbunden hat, raus</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>L</code></term>

          <listitem>
            <simpara>Sperrt die Konferenz (d.h. keine neuen
            Teilnehmer)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>l</code></term>

          <listitem>
            <simpara>Entsperrt die Konferenz</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>M</code></term>

          <listitem>
            <simpara>Schaltet die Konferenz stumm</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>m</code></term>

          <listitem>
            <simpara>Hebt die Stummschaltung (durch <code>M</code>)
            auf</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>N</code></term>

          <listitem>
            <simpara>Schaltet alle Teilnehmer außer dem Administrator
            stumm</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>n</code></term>

          <listitem>
            <simpara>Hebt die Stummschaltung (durch <code>N</code>)
            auf</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>; Konferenz 333 stummschalten:
exten =&gt; 123,1,MeetMeAdmin(333,M)

; Teilnehmer 3 aus der Konferenz 333 kicken:
exten =&gt; 123,1,MeetMeAdmin(333,k,3)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-meetme" />, <xref
      linkend="applikationen-meetmecount" /></para>
    </formalpara>
  </section>

  <section id="applikationen-meetmecount">
    <title><code>MeetMeCount()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MeetMeCount()</code></secondary>
    </indexterm>

    <simpara>Zählt die Teilnehmer einer MeetMe-Konferenz</simpara>

    <synopsis>MeetMeCount(<replaceable>KonferenzNr</replaceable>[,<replaceable>Variablenname</replaceable>])</synopsis>

    <simpara>Spielt die Anzahl der Teilnehmer in der MeetMe-Konferenz ab.
    Falls eine Variable angegeben ist, wird der Abspielvorgang übersprungen
    und die Anzahl in diese Variable geschrieben.</simpara>

    <simpara>Liefert bei Erfolg 0 zurück, bei einem Fehler -1</simpara>

    <simpara>Zähl die Teilnehmer in Konferenz 501, und weist diese Zahl
    <code>${COUNT}</code> zu</simpara>

    <programlisting>; die Teilnehmerzahl der Konferenz 333 in ${anzahl} speichern:
exten =&gt; 333,1,MeetMeCount(123,anzahl)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-meetme" />, <xref
      linkend="applikationen-meetmeadmin" /></para>
    </formalpara>
  </section>

  <section id="applikationen-milliwatt">
    <title><code>Milliwatt()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Milliwatt()</code></secondary>
    </indexterm>

    <simpara>Erzeugt einen 1000-Hz-Ton</simpara>

    <synopsis>Milliwatt()</synopsis>

    <simpara>Erzeugt einen konstanten 1000-Hz-Ton bei 0 dbm (u-law). Diese
    Anwendung wird häufig verwendet, um die Audioeigenschaften eines
    bestimmten Chanels zu testen. Allerdings ist die Bezeichnung etwas
    irreführend, sinnvoller schiene <quote>Kilohertz()</quote>.</simpara>

    <programlisting>; einen 1000-Hz-Ton erzeugen:
exten =&gt; 123,1,Milliwatt()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-echo" /></para>
    </formalpara>
  </section>

  <section id="applikationen-mixmonitor">
    <title><code>MixMonitor()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MixMonitor()</code></secondary>
    </indexterm>

    <synopsis>MixMonitor(&lt;Dateiname&gt;.&lt;Format&gt;[,&lt;Optionen&gt;[,&lt;Command&gt;]])</synopsis>

    <simpara>Startet die Audio-Aufzeichnung des aktuellen Chanels. Dabei
    werden im im Gegensatz zu <link
    linkend="applikationen-monitor">Monitor()</link> direkt beide Kanäle zu
    einer Datei gemischt.</simpara>

    <simpara>Optionen:</simpara>

    <variablelist termlength="3">
      <varlistentry>
        <term><code>a</code></term>

        <listitem>
          <simpara>Fügt den Audio-Stream an eine bestehende Datei
          an.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>b</code></term>

        <listitem>
          <simpara>Startet die Aufnahme erst, nachdem ein Anruf zu einem
          anderen Chanel verbunden wurde, also nachdem z.B. durch
          <code>Dial()</code> tatsächlich ein Gespräch zustande
          kommt.</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>v(&lt;x&gt;)</code></term>

        <listitem>
          <simpara>Passt die gehörte Lautstärke um Faktor x an (x kann -4 bis
          4 betragen).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>V(&lt;x&gt;)</code></term>

        <listitem>
          <simpara>Passt die gesprochene Lautstärke um Faktor x an (x kann -4
          bis 4 betragen).</simpara>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><code>W(&lt;x&gt;)</code></term>

        <listitem>
          <simpara>Passt die gehörte und gesprochene Lautstärke um Faktor x an
          (x kann -4 bis 4 betragen).</simpara>
        </listitem>
      </varlistentry>
    </variablelist>

    <simpara><parameter>&lt;command&gt;</parameter> wird (falls angegeben)
    nach dem Aufnehmen ausgeführt.</simpara>

    <simpara>Die Variable <code>${MIXMONITOR_FILENAME}</code> enthält den
    Namen der aufgezeichneten Datei.</simpara>

    <simpara>Beachten Sie auch die Hinweise bei <link
    linkend="applikationen-monitor"><code>Monitor()</code></link>.</simpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-monitor" /></para>
    </formalpara>
  </section>

  <section id="applikationen-monitor">
    <title><code>Monitor()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Monitor()</code></secondary>
    </indexterm>

    <simpara>Schneidet das Gespräch auf dem aktuellen Chanel mit</simpara>

    <synopsis>Monitor([<replaceable>Format</replaceable>[,<replaceable>Basisname</replaceable>[,<replaceable>Optionen</replaceable>]]])</synopsis>

    <simpara>Startet die Audio-Aufzeichnung des aktuellen Chanels. Die auf dem
    Chanel eingehenden und ausgehenden Sprachpakete werden in seperaten
    Dateien aufgezeichnet, bis der Chanel aufgelegt oder die Überwachung durch
    die <code>StopMonitor()</code>-Anwendung beendet wird.</simpara>

    <simpara><code>Format</code> gibt das Dateiformat (= Dateiendung) an. Ohne
    Angabe wird <code>wav</code> verwendet.</simpara>

    <simpara><code>Basisname</code> gibt den Basis-Dateinamen an (also ohne
    Dateiendung). Ohne Angabe wird der Name aus dem Chanelnamen und einer
    Nummer zusammengesetzt, z.B. <code>IAX2[foo@bar]-3</code>. Das eingehende
    Audio wird in
    <filename><replaceable>Basisname</replaceable>-in.<replaceable>Format</replaceable></filename>,
    das ausgehende in
    <filename><replaceable>Basisname</replaceable>-out.<replaceable>Format</replaceable></filename>
    im Verzeichnis <filename>/var/spool/asterisk/monitor/</filename>
    gespeichert.</simpara>

    <para>Eine der beiden Optionen kann angegeben werden: <variablelist
        termlength="3">
        <varlistentry>
          <term><code>m</code></term>

          <listitem>
            <simpara>Nach dem Beenden der Aufnahme werden die Dateien für In
            und Out in eine gemischt und die ursprünglichen Dateien gelöscht.
            Dazu muss das Programm <command>soxmix</command> aus dem Paket
            <command>sox</command> installiert sein<footnote>
                <simpara><ulink
                url="http://sox.sourceforge.net/">http://sox.sourceforge.net/</ulink>,
                siehe Beschreibung in <xref linkend="musiconhold.conf" />,
                mindestens Version 12.17.7, Ihre installierte Version erfahren
                Sie mit <command>soxmix -help</command></simpara>
              </footnote>. Falls die Variable <code>${MONITOR_EXEC}</code>
            definiert ist, wird statt <command>soxmix</command> die angegebene
            Anwendung ausgeführt, und die ursprünglichen Dateien für beide
            Richtungen nicht automatisch gelöscht<footnote>
                <para>abhängig von der Asterisk-Version; ältere Versionen
                löschen nicht automatisch</para>
              </footnote>. <command>soxmix</command> (bzw.
            <command>${MONITOR_EXEC}</command>) werden drei Parameter
            übergeben, die beiden Aufzeichnungsdateien und der Dateiname für
            die zu erstellende gemischte Datei, welcher dem Basisnamen ohne
            <code>-in</code>/<code>-out</code> entspricht. Ist
            <code>${MONITOR_EXEC_ARGS}</code> gesetzt, werd der Inhalt als
            zusätzliche Argumente an <code>${MONITOR_EXEC}</code>
            übergeben.</simpara>

            <important>
              <para>Bei der Verwendung von <command>soxmix</command> ist zu
              beachten, dass <command>soxmix</command> ohne explizite Angabe
              der Dateitypen diese aus den Endungen erkennt. <code>gsm</code>
              und <code>wav</code> bereiten z.B. keine Probleme, aber für die
              Formate <code>alaw</code> und <code>ulaw</code> werden als
              Endungen <code>al</code> bzw. <code>ul</code> erwartet. Lesen
              Sie also ggf. die Anleitung von sox (/soxmix) und verwenden Sie
              <code>${MONITOR_EXEC_ARGS}</code> oder benutzen Sie ein kleines
              Wrapper-Skript als <code>${MONITOR_EXEC}</code>, das die
              Datei-Parameter liest und soxmix mit Angabe der Typen
              aufruft.</para>
            </important>

            <note>
              <simpara>Wenn Sie eine kombinierte Aufzeichnung wollen, ist
              meist <code>MixMonitor()</code> die bessere Alternative, da es
              die Kanäle direkt während der Aufnahme mischt und dadurch
              Lastspitzen am Ende der Aufzeichnung vermeidet.</simpara>
            </note>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>b</code></term>

          <listitem>
            <simpara>Startet die Aufnahme erst, nachdem ein Anruf zu einem
            anderen Chanel verbunden wurde, also nachdem z.B. durch
            <code>Dial()</code> tatsächlich ein Gespräch zustande
            kommt.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Gibt 0 bei Erfolg zurück oder -1 bei einem Fehler
    (Überwachungsdateien konnten nicht geöffnet werden, Chanel wir bereits
    aufgezeichnet, etc.)</simpara>

    <programlisting>; das Gespräch aufzeichnen und hinterher die Audio-Kanäle mixen:
exten =&gt; 123,1,Answer()
exten =&gt; 123,n,Monitor(gsm,,mb)
exten =&gt; 123,n,SayDigits(123456789)
exten =&gt; 123,n,Hangup()

; wie oben aber mit einem eigenen Wrapper, der soxmix aufruft:
exten =&gt; 123,1,Answer()
exten =&gt; 123,n,Set(MONITOR_EXEC=/pfad/zu/mein-soxmix-wrapper.sh)
exten =&gt; 123,n,Monitor(gsm,,mb)
exten =&gt; 123,n,SayDigits(123456789)
exten =&gt; 123,n,Hangup()</programlisting>

    <important>
      <para>Stellen Sie vor dem Mitschneiden von Gesprächen sicher, dass die
      rechtlichen Voraussetzungen erfüllt sind. Meist müssen beide Teilnehmer
      von der Aufzeichnung informiert sein.<footnote>
          <simpara>siehe auch <ulink
          url="http://www.voip-info.org/wiki/view/Monitor+Recording+Legal+Issues">http://www.voip-info.org/wiki/view/Monitor+Recording+Legal+Issues</ulink></simpara>
        </footnote></para>
    </important>

    <note>
      <simpara>Einige Anwender, die viele (50-500) Gespräche gleichzeitig
      aufnehmen, berichten von <emphasis>stark</emphasis> verbesserter
      Performance, wenn man auf eine RAM-Disk aufzeichnet (weniger
      Such-Operationen) und die Dateien erst nach Gesprächsende auf die
      Festplatte (lokal oder gemountet) kopiert.</simpara>
    </note>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-changemonitor" />, <xref
      linkend="applikationen-stopmonitor" />, <xref
      linkend="applikationen-mixmonitor" />, <xref
      linkend="applikationen-record" /></para>
    </formalpara>
  </section>

  <section id="applikationen-mp3player">
    <title><code>MP3Player()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MP3Player()</code></secondary>
    </indexterm>

    <simpara>Gibt eine MP3 Datei oder einen MP3-Stream wieder</simpara>

    <synopsis>MP3Player(<replaceable>location</replaceable>)</synopsis>

    <simpara>Verwendet das Programm <code>mpg123</code><footnote>
        <simpara><ulink url="http://mpg123.org/">http://mpg123.org/</ulink>,
        <ulink
        url="http://sourceforge.net/projects/mpg123/">http://sourceforge.net/projects/mpg123/</ulink>,
        für MacOS X siehe auch <ulink
        url="http://sourceforge.net/projects/mosx-mpg123/">http://sourceforge.net/projects/mosx-mpg123/</ulink></simpara>
      </footnote>, um dem Anrufer <code>location</code> vorzuspielen. Die
    angegebene <code>location</code> kann entweder ein Dateiname oder eine URL
    sein. Der Anrufer kann die Wiedergabe durch Betätigung einer beliebigen
    Taste stoppen.</simpara>

    <simpara>Die richtige Version von <code>mpg123</code> muss installiert
    sein, damit diese Anwendung ordnungsgemäß funktioniert. Asterisk arbeitet
    momentan mit der Version 0.59r ideal.</simpara>

    <note>
      <simpara>Das häufig als Alternative installierte und auf
      <filename>mpg123</filename> verlinkte Programm <command>mpg321</command>
      funktioniert <emphasis>nicht</emphasis> einwandfrei.</simpara>
    </note>

    <simpara>Liefert -1, falls aufgelegt wird, sonst 0.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,2,MP3Player(test.mp3)

exten =&gt; 123,1,Answer()
exten =&gt; 123,2,MP3Player(http://server.tld/test.mp3)</programlisting>
  </section>

  <section id="applikationen-musiconhold">
    <title><code>MusicOnHold()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>MusicOnHold()</code></secondary>
    </indexterm>

    <simpara>Spielt endlos Wartemusik</simpara>

    <synopsis>MusicOnHold(<replaceable>class</replaceable>)</synopsis>

    <simpara>Spielt die durch class spezifizierte Wartemusik, wie in
    <filename>musiconhold.conf</filename> konfiguriert. Wird
    <code>class</code> nicht angegeben, wird die Standardmusik-Klasse für
    dieses Chanel verwendet. Um die Standardmusik-Klasse für einen Chanel
    einzustellen, können Sie die Funktion <code>MUSICCLASS()</code>
    verwenden.</simpara>

    <simpara>Liefert -1, falls aufgelegt wird, ansonsten wird sie endlos
    ausgeführt.</simpara>

    <programlisting>; transfer telemarketers to this extension to keep them busy
exten =&gt; 123,1,Answer()
exten =&gt; 123,2,Playback(tt-allbusy)
exten =&gt; 123,3,MusicOnHold(default)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-waitmusiconhold" />, <xref
      linkend="funktionen-musicclass" /></para>
    </formalpara>
  </section>

  <section id="applikationen-nbscat">
    <title><code>NBScat()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>NBScat()</code></secondary>
    </indexterm>

    <simpara>Wiedergabe eines lokalen NBS-Streams</simpara>

    <synopsis>NBScat()</synopsis>

    <simpara>Verwendet das <code>nbscat8k</code>-Programm um den lokalen NBS
    (Network Broadcast Sound)-Stream zu hören. (Schauen Sie sich das
    <filename>nbs</filename>-Modul in Digiums CVS-Server an, um weitere
    Informationen zu erhalten.) Der Anrufer kann durch Drücken einer
    beliebigen Taste aussteigen.</simpara>

    <simpara>Die Anwendung liefert -1, falls aufgelegt wird, ansonsten wird
    sie endlos ausgeführt.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,2,NBScat()</programlisting>
  </section>

  <section id="applikationen-nocdr">
    <title><code>NoCDR()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>NoCDR()</code></secondary>
    </indexterm>

    <simpara>Unterdrückt Anrufprotokolle (Call Detail Records) für den
    aktuellen Anruf</simpara>

    <synopsis>NoCDR()</synopsis>

    <simpara>Für den aktuellen Anruf ist die Erstellung von CDRs nicht
    möglich.</simpara>

    <programlisting>; don't log calls to 555-1212
exten =&gt; 5551212,1,Answer()
exten =&gt; 5551212,2,NoCDR()
exten =&gt; 5551212,3,Dial(Zap/4/5551212)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-appendcdruserfield" />, <xref
      linkend="applikationen-forkcdr" />, <xref
      linkend="applikationen-setcdruserfield" /></para>
    </formalpara>
  </section>

  <section id="applikationen-noop">
    <title><code>NoOp()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>NoOp()</code></secondary>
    </indexterm>

    <simpara>Tut nichts (no operation)</simpara>

    <synopsis>NoOp(<replaceable>text</replaceable>)</synopsis>

    <simpara>Diese Anwendung tut nichts - sie ist lediglich als Platzhalter
    gedacht. Als Nebeneffekt evaluiert diese Anwendung Text und gibt ihn als
    Ergebnis auf dem Asterisk-Kommandozeileninterface aus - eine zum Debugging
    nützliche Eigenschaft.</simpara>

    <simpara>Sie müssen den Text nicht in Anführungszeichen betten. Stehen
    Anführungszeichen innerhalb der Klammern, werden diese auf der Konsole
    ausgegeben.</simpara>

    <programlisting>exten =&gt; 123,1,NoOp(CallerID is ${CALLERID})</programlisting>
  </section>

  <section id="applikationen-park">
    <title><code>Park()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Park()</code></secondary>
    </indexterm>

    <simpara>Parkt den aktuellen Anruf</simpara>

    <synopsis>Park(<replaceable>exten</replaceable>)</synopsis>

    <simpara>Parkt den aktuellen Anruf (typischerweise in Kombination mit
    einer beaufsichtigten Übertragung, um die Parkplatznummer zu bestimmen).
    Diese Anwendung ist intern stets registriert und muss nicht explizit im
    Wählplan eingefügt werden, jedoch sollten sie den
    <code>parkedcalls</code>-Kontext einbinden. Die Parkkonfiguration wird in
    <filename>features.conf</filename> vorgenommen.</simpara>

    <programlisting>; park the caller in parking space 701
include =&gt; parkedcalls
exten =&gt; 123,1,Answer()
exten =&gt; 123,2,Park(701)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-parkandannounce" />, <xref
      linkend="applikationen-parkedcall" /></para>
    </formalpara>
  </section>

  <section id="applikationen-parkandannounce">
    <title><code>ParkAndAnnounce()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ParkAndAnnounce()</code></secondary>
    </indexterm>

    <simpara>Parkt den aktuellen Anruf und macht ihn über den spezifizierten
    Chanel bekannt</simpara>

    <synopsis>ParkAndAnnounce(<replaceable>template</replaceable>,<replaceable>timeout</replaceable>,<replaceable>channel</replaceable>[,<replaceable>return_context</replaceable>])</synopsis>

    <simpara>Parkt den aktuellen Anruf in dem dafür vorgesehenen Bereich (auf
    dem Parkplatz) und meldet ihn über den spezifizierten Chanel.
    <code>template</code> bezeichnet eine Liste von durch Kommas voneinander
    getrennten Dateien, die anzukündigen sind; das Wort <code>PARKED</code>
    wird durch die Parkplatznummer des Anrufs ersetzt. Der Parameter
    <code>timeout</code> bestimmt die Zeit, in Sekunden, nach deren Ablauf der
    Anruf zum <code>return_context</code> zurückkehrt. Der Parameter
    <code>channel</code> bezeichnet den Chanel, der anzurufen ist und die
    Ankündigung zu machen. <code>Console/dsp</code> ruft die Konsole auf. Der
    <code>return_context</code>-Parameter ist ein Label im
    <code>GoTo()</code>-Stil, um den Anruf nach der Beendigung
    zurückzubringen. Standardeinstellung hierfür ist <code>n+1</code> (mit
    <code>n</code>: aktuelle Priorität) im Kontext
    <code>return_context</code>.</simpara>

    <programlisting>include =&gt; parkedcalls
exten =&gt; 123,1,Answer()
exten =&gt; 123,2,ParkAndAnnounce(vm-youhave:a:pbx-transfer:at:vm-extension:
PARKED,120,Console/dsp)
exten =&gt; 123,3,Playback(vm-nobodyavail)
exten =&gt; 123,4,Playback(vm-goodbye)
exten =&gt; 123,5,Hangup()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-park" />, <xref
      linkend="applikationen-parkedcall" /></para>
    </formalpara>
  </section>

  <section id="applikationen-parkedcall">
    <title><code>ParkedCall()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ParkedCall()</code></secondary>
    </indexterm>

    <simpara>Beantwortet einen geparkten Anruf</simpara>

    <synopsis>ParkedCall(<replaceable>exten</replaceable>)</synopsis>

    <simpara>Verbindet den Anrufer mit dem, auf dem durch exten
    identifizierten Parkplatz, geparkten Anruf. Diese Anwendung ist intern
    ständig registriert und muss daher dem Wählplan nicht explizit hinzugefügt
    werden. Sie sollten jedoch den <code>parkedcalls</code>-Kontext
    einbeziehen.</simpara>

    <programlisting>; pick up the call parked in parking space 701
exten =&gt; 123,1,Answer()
exten =&gt; 123,2,ParkedCall(701)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-park" />, <xref
      linkend="applikationen-parkandannounce" /></para>
    </formalpara>
  </section>

  <section id="applikationen-pausequeuemember">
    <title><code>PauseQueueMember()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>PauseQueueMember()</code></secondary>
    </indexterm>

    <simpara>Blockiert ein Warteschlangenmitglied temporär, so dass es keine
    Anrufe empfangen kann</simpara>

    <synopsis>PauseQueueMember([<replaceable>queuename</replaceable>],<replaceable>interface</replaceable>)</synopsis>

    <simpara>Blockiert Anrufe für ein Warteschlangenmitglied. Das
    spezifizierte Interface wird in der gegebenen Warteschlange zeitweilig
    angehalten. Dadurch wird verhindert, dass irgendwelche Anrufe aus der
    Warteschlange zu diesem Interface gesendet werden, bis es nicht durch
    wieder freigegeben wurde/bis die Blockade nicht wieder aufgehoben wurde
    durch die <code>UnpauseQueueMember()</code>-Anwendung oder das
    Manager-Interface. Wenn kein Warteschlangenname <code>queuename</code>
    angegeben ist, wird das Interface in jeder Warteschlange, in der es ein
    Mitglied ist, angehalten. Befindet sich das Interface nicht in der
    benannten Warteschlange, oder wenn keine Warteschlange angegeben und das
    Interface nicht Mitglied irgendeiner Warteschlange ist, wird es zu
    Priorität n+101 übergehen (mit <code>n</code>: aktuelle Priorität), falls
    diese existiert.</simpara>

    <simpara>Gibt -1 zurück, falls das Interface nicht gefunden wurde und
    keine Extension existiert, zu der gesprungen werden kann, sonst
    0.</simpara>

    <programlisting>exten =&gt; 123,1,PauseQueueMember(,SIP/300)
exten =&gt; 124,1,UnpauseQueueMember(,SIP/300)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-unpausequeuemember" /></para>
    </formalpara>
  </section>

  <section id="applikationen-playback">
    <title><code>Playback()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Playback()</code></secondary>
    </indexterm>

    <simpara>Spielt dem Anrufer die spezifizierte Audiodatei vor</simpara>

    <synopsis>Playback(<replaceable>filename</replaceable>[,<replaceable>options</replaceable>])</synopsis>

    <simpara>Spielt dem Anrufer die durch <code>filename</code> spezifizierte
    Audiodatei (aus dem Verzeichnis
    <filename>/var/lib/asterisk/sounds/</filename>) vor. Der Dateiname enthält
    keine Dateiendung, damit Asterisk automatisch die Audiodatei mit dem
    niedrigsten Konvertierungsaufwand auswählen kann. Keine, eine oder mehr
    Optionen können hinzugefügt werden. Die Option <code>skip</code> bewirkt,
    dass die Wiedergabe der Nachricht übersprungen wird, wenn sich der Chanel
    nicht im Up-Status befindet (z.B., falls er noch nicht beantwortet wurde).
    Ist <code>skip</code> angegeben, wird die Anwendung augenblicklich
    beendet, wenn mit dem Chanel nicht alles in Ordnung ist. Ansonsten wird
    der Chanel beantwortet, bevor die Audiodatei wiedergegeben wird, es sei
    denn, <code>noanswer</code> ist angegeben. (Nicht alle Kanäle unterstützen
    die Wiedergabe von Nachrichten, wenn sie noch aufgelegt sind.) Liefert -1
    zurück, wenn der Chanel aufgelegt wurde. Wenn die Datei nicht existiert,
    wird zur Priorität n+101 übergegangen (mit <code>n</code>: aktuelle
    Priorität), falls sie existiert.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,2,Playback(tt-weasels)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-background" /></para>
    </formalpara>
  </section>

  <section id="applikationen-playtones">
    <title><code>Playtones()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Playtones()</code></secondary>
    </indexterm>

    <simpara>Wiedergabe einer Tonliste</simpara>

    <synopsis>Playtones(<replaceable>tonelist</replaceable>)</synopsis>

    <simpara>Spielt eine Liste von Tönen ab. Die Ausführung wird
    augenblicklich mit dem nächsten Schritt fortgesetzt, während die Töne
    weiter abgespielt werden. <code>tonelist</code> repräsentiert entweder
    einen Tonnamen, der in der <filename>indications.conf</filename>
    Konfigurationsdatei definiert ist, oder eine gegebene Liste von
    Tonfrequenzen und -dauern. Um eine Beschreibung der Spezifikation einer
    Tonliste einzusehen, siehe
    <filename>indications.conf</filename>.</simpara>

    <simpara>Verwendet die <code>StopPlaytones()</code>-Anwendung, um die
    Wiedergabe der Töne anzuhalten.</simpara>

    <programlisting>; play a busy signal for two seconds, and then a congestion tone for two seconds
exten =&gt; 123,1,Playtones(busy)
exten =&gt; 123,2,Wait(2)
exten =&gt; 123,3,StopPlaytones()
exten =&gt; 123,4,Playtones(congestion)
exten =&gt; 123,5,Wait(2)
exten =&gt; 123,6,StopPlaytones()
exten =&gt; 123,7,Goto(1)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-stopplaytones" />,
      <filename>indications.conf</filename>, <xref
      linkend="applikationen-busy" />, <xref
      linkend="applikationen-congestion" />, <xref
      linkend="applikationen-progress" />, <xref
      linkend="applikationen-ringing" /></para>
    </formalpara>
  </section>

  <section id="applikationen-prefix">
    <title><code>Prefix()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Prefix()</code></secondary>
    </indexterm>

    <simpara>Stellt die angegebenen Ziffern der aktuellen Extension voran und
    geht zu der resultierenden Extension über.</simpara>

    <synopsis>Prefix(<replaceable>digits</replaceable>)</synopsis>

    <simpara>Stellt der aktuellen Extension die durch die Ziffernkette
    <code>digits</code> angegebenen Ziffern voran und fährt mit der Ausführung
    bei der nächsten Priorität für die neue Extension fort. Zum Beispiel,
    falls die Priorität 1 der Extension 1212 Prefix(555) ist, wird 555 der
    1212 vorangestellt und der nächste Schritt, der ausgeführt wird, wird
    Priorität 2 von Extension 5551212 sein. Wenn sie zu einer Extension
    wechseln, die keine Priorität <code>n+1</code> besitzt (<code>n</code>
    bezeichnet die aktuelle Priorität), wird Asterisk verfahren, als hätte der
    Benutzer eine ungültige Extension angewählt.</simpara>

    <simpara>Liefert immer 0 zurück.</simpara>

    <programlisting>exten =&gt; 1212,1,Prefix(555)
exten =&gt; 5551212,2,SayDigits(${EXTEN})</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-suffix" /></para>
    </formalpara>
  </section>

  <section id="applikationen-privacymanager">
    <title><code>PrivacyManager()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>PrivacyManager()</code></secondary>
    </indexterm>

    <simpara>Verlangt die Eingabe der Telefonnummer eines Teilnehmers, falls
    keine Caller ID-Informationen empfangen werden</simpara>

    <synopsis>PrivacyManager()</synopsis>

    <simpara>Wird keine Caller ID empfangen, wird der Chanel beantwortet und
    der Anrufer oder die Anruferin aufgefordert, seine bzw. ihre Telefonnummer
    einzugeben. Standardmäßig werden dem Anrufer dabei drei Versuche gewährt.
    Wenn er nach diesen drei Versuchen nicht mindestens eine zehnstellige
    Telefonnummer eingegeben hat und es eine Priorität n+101 gibt (wobei
    <code>n</code> die aktuelle Priorität bezeichnet), wird der Chanel so
    eingestellt, dass er mit diesem Prioritätslevel fortfährt. Andernfalls
    wird 0 zurückgeliefert. Wird auf dem Chanel eine Caller ID empfangen, tut
    PrivacyManager() nichts.</simpara>

    <para>Die Konfigurationsdatei <filename>privacy.conf</filename> bestimmt
    die Funktionsweise der <code>PrivacyManager()</code>-Anwendung. Sie
    enthält die beiden folgenden Zeilen: <variablelist termlength="12">
        <varlistentry>
          <term><code>maxretries</code></term>

          <listitem>
            <simpara>Gibt die Anzahl der Versuche an, die einem Anrufer zur
            Eingabe einer Caller ID gewährt werden (Standard: 3)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>minlength</code></term>

          <listitem>
            <simpara>Gibt die minimal zu erlaubende/minimale erlaubte Anzahl
            von Ziffern in der eigegebenen Caller ID-Nummer an (Standard:
            10)</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,2,PrivacyManager()
exten =&gt; 123,3,Dial(Zap/1)
exten =&gt; 123,103,Playback(im-sorry)
exten =&gt; 123,104,Playback(vm-goodbye)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-zapateller" /></para>
    </formalpara>
  </section>

  <section id="applikationen-progress">
    <title><code>Progress()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Progress()</code></secondary>
    </indexterm>

    <simpara>Signalisiert Fortschritt</simpara>

    <synopsis>Progress()</synopsis>

    <simpara>Erbittet, dass dem Teilnehmer angezeigt wird, dass es
    bandinternen Fortschritt gibt.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>; indicate progress to the calling channel
exten =&gt; 123,1,Progress()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-busy" />, <xref
      linkend="applikationen-congestion" />, <xref
      linkend="applikationen-playtones" />, <xref
      linkend="applikationen-ringing" /></para>
    </formalpara>
  </section>

  <section id="applikationen-queue">
    <title><code>Queue()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Queue()</code></secondary>
    </indexterm>

    <simpara>Legt den aktuellen Anruf in der spezifizierten Anrufwarteschlange
    ab</simpara>

    <synopsis>Queue(<replaceable>queuename</replaceable>,<replaceable>options</replaceable>,<replaceable>optionalurl</replaceable>,<replaceable>announceoverride</replaceable>,<replaceable>timeout</replaceable>)</synopsis>

    <simpara>Fügt der durch queuename spezifizierten Anrufwarteschlange einen
    eingehenden Anruf hinzu, wie in <filename>queues.conf</filename>
    definiert.</simpara>

    <para>Der <code>options</code>-Parameter kann sich aus keinem, einem oder
    mehreren der folgenden Zeichen zusammensetzen: <variablelist
        termlength="3">
        <varlistentry>
          <term><code>t</code></term>

          <listitem>
            <simpara>Erlaubt es dem angerufenen Teilnehmer, den Anruf
            weiterzuleiten</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>T</code></term>

          <listitem>
            <simpara>Erlaubt es dem anrufenden Teilnehmer, den Anruf
            weiterzuleiten</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>d</code></term>

          <listitem>
            <simpara>Spezifiziert einen Anruf mit Datenqualität (Modem,
            minimale Verzögerung)</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>h</code></term>

          <listitem>
            <simpara>Erlaubt es dem Angerufenen, durch Drücken von
            <code>*</code> aufzulegen</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>H</code></term>

          <listitem>
            <simpara>Erlaubt es dem Anrufer, durch Drücken von <code>*</code>
            aufzulegen</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>n</code></term>

          <listitem>
            <simpara>Verbietet eine Wiederholung des Timeouts; beendet diese
            Anwendung und geht weiter zum nächsten Schritt</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>r</code></term>

          <listitem>
            <simpara>Klingelt, statt Wartemusik zu spielen</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Außer dass ein Anruf weitergeleitet werden kann, kann er auch
    geparkt und dann von einem anderen Teilnehmer aufgenommen
    werden.</simpara>

    <simpara>Der Parameter <code>announceoverride</code> überschreibt die
    Standardankündigung, die Warteschlangenagenten vorgespielt wird, bevor sie
    den angegebenen Anruf beantworten.</simpara>

    <simpara>Der optinale <code>URL</code> wird dem angerufenen Teilnehmer
    übersendet, falls dies vom Chanel unterstützt wird.</simpara>

    <simpara>Nach einer angegebenen Zahl von Sekunden, überprüft zwischen
    jedem <filename>queues.conf</filename> Timeout und Retry-Kreislauf, wird
    <code>timeout</code> die Warteschlange zu einem Ausfall zwingen.</simpara>

    <simpara>Liefert -1 zurück, falls der ursprüngliche Chanel aufgelegt wird,
    oder falls der Anruf überbückt wird und einer der Teilnehmer in der Brücke
    den Anruf beendet. Ist die Warteschlange voll, existiert sie nicht oder
    hat sie keine Mitglieder, wird 0 zurückgeliefert.</simpara>

    <programlisting>; place the caller in the techsupport queue
exten =&gt; 123,1,Answer()
exten =&gt; 123,2,Queue(techsupport,t)</programlisting>
  </section>

  <section id="applikationen-random">
    <title><code>Random()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Random()</code></secondary>
    </indexterm>

    <simpara>Verzweigt wahrscheinlichkeitsbasiert bedingt</simpara>

    <synopsis>Random([<replaceable>probability</replaceable>]:[[<replaceable>context</replaceable>,]<replaceable>extension</replaceable>,]<replaceable>priority</replaceable>)</synopsis>

    <simpara>Springt bedingt zu der spezifizierten Priorität (und optional
    Extension und Kontext), basierend auf der angegebenen Wahrscheinlichkeit
    (<code>probability</code>). <code>probability</code> wird als ganze Zahl
    zwischen 1 und 100 angegeben. Die Anwendung springt in
    <code>priority</code> Prozent der Zeit zu dem angegebenen Ziel.</simpara>

    <programlisting>; test your luck over and over again
exten =&gt; 123,1,Random(20:lucky,1)
exten =&gt; 123,2,Goto(unlucky,1)

exten =&gt; lucky,1,Playback(good)
exten =&gt; lucky,2,Goto(123,1)

exten =&gt; unlucky,1,Playback(bad)
exten =&gt; unlucky,2,Goto(123,1)</programlisting>
  </section>

  <section id="applikationen-read">
    <title><code>Read()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Read()</code></secondary>
    </indexterm>

    <simpara>Liest DTMF-Ziffern eines Anrufers und verknüpft das Ergebnis mit
    einer Variablen</simpara>

    <synopsis>Read(<replaceable>variable</replaceable>[,<replaceable>filename</replaceable>][,<replaceable>maxdigits</replaceable>][,<replaceable>option</replaceable>][,<replaceable>attempts</replaceable>][,<replaceable>timeout</replaceable>])</synopsis>

    <simpara>Liest eine mit <code>#</code> abgeschlossene Reihe von Ziffern so
    oft wie definiert von einem Teilnehmer, und legt sie in einer gegebenen
    Variablen ab.</simpara>

    <para>Andere Parameter sind: <variablelist termlength="11">
        <varlistentry>
          <term><code>filename</code></term>

          <listitem>
            <simpara>Gibt die Datei an, die vor dem Einlesen der Ziffern
            abgespielt werden soll</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>maxdigits</code></term>

          <listitem>
            <simpara>Setzt die maximal zu akzeptierende Anzahl Ziffern. Ist
            der Parameter angegeben, beendet die Anwendung das Einlesen,
            nachdem maxdigits Ziffern eingegeben wurden (ohne dass der
            Teilnehmer mit der <code>#</code>-Taste bestätigen muss).
            Standardeinstellung ist 0, was bedeutet, es existiert keine
            Begrenzung und es wird auf die Eingabe von <code>#</code>
            gewartet. Das gilt auch für alle anderen Werte unter 0. Der größte
            akzeptierte Wert ist 255.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>option</code></term>

          <listitem>
            <simpara>Geben sie <code>skip</code> an, um umgehend
            zurückzukehren, wenn der Anschluss nicht beantwortet wird, oder
            <code>noanswer</code>, um Zahlen sogar dann einzulesen, wenn der
            Anschluss nicht beantwortet wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>attempts</code></term>

          <listitem>
            <simpara>Falls größer als 1, werden genau so viele Versuche
            gemacht in dem Fall, dass keine Daten eingegeben werden.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>timeout</code></term>

          <listitem>
            <simpara>Falls größer als 0, wird dieser Wert die
            Standardeinstellungen für die Zeitgrenze überschreiben.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Liefert -1 zurück im Falle eines Auflegens oder Fehlers, sonst
    0.</simpara>

    <programlisting>; read a two-digit number and repeat it back to the caller
exten =&gt; 123,1,Read(NUMBER,,2)
exten =&gt; 123,2,SayNumber(${NUMBER})
exten =&gt; 123,3,Goto(1)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-senddtmf" /></para>
    </formalpara>
  </section>

  <section id="applikationen-realtime">
    <title><code>RealTime()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>RealTime()</code></secondary>
    </indexterm>

    <simpara>Besorgt Informationen vom
    Echtzeitkonfigurationssteuerprogramm</simpara>

    <synopsis>RealTime(<replaceable>family</replaceable>,<replaceable>colmatch</replaceable>,<replaceable>value</replaceable>[,<replaceable>prefix</replaceable>])</synopsis>

    <simpara>Benutzt das RealTime Konfigurationssteuerprogramm, um Daten in
    Chanelvariablen einzulesen. Alle eindeutigen Spaltennamen (aus der
    spezifizierten Familie <code>family</code>) werden als Chanelvariablen
    gesetzt. Dabei kann ihr Name ein optionales Namenspräfix
    <code>prefix</code> erhalten (zum Beispiel würde ein Präfix
    <code>var_</code> den Spaltennamen <code>name</code> in die Variable
    <code>${var_name}</code> überführen).</simpara>

    <programlisting>; retrieve all columns from the sipfriends table where the name column
; matches "John", and prefix all the variables with "John_"
exten =&gt; 123,1,RealTime(sipfriends,name,John,John_)
; now, let's read the value of the column named "port"
exten =&gt; 123,2,SayNumber(${John_port})</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-realtimeupdate" /></para>
    </formalpara>
  </section>

  <section id="applikationen-realtimeupdate">
    <title><code>RealTimeUpdate()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>RealTimeUpdate()</code></secondary>
    </indexterm>

    <simpara>Aktualisiert einen Wert mit Hilfe des
    Echtzeitkonfigurationssteuerprogramms</simpara>

    <synopsis>RealTimeUpdate(<replaceable>family</replaceable>,<replaceable>colmatch</replaceable>,<replaceable>value</replaceable>,<replaceable>newcol</replaceable>,<replaceable>newval</replaceable>)</synopsis>

    <simpara>Benutzt das RealTime Konfigurationssteuerprogrammsystem, um einen
    Wert zu aktualisieren. Die Spalte <code>newcol</code> in der Familie
    <code>family</code>, die mit der Spalte <code>colmatch=value</code>
    übereinstimmt, wird auf den Wert <code>newval</code>
    aktualisiert.</simpara>

    <programlisting>; this will update the port column in the sipfriends table to a new
; value of 5061, where the name column matches "John"
exten =&gt; 123,1,RealTimeUpdate(sipfriends,name,John,port,5061)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-realtime" /></para>
    </formalpara>
  </section>

  <section id="applikationen-record">
    <title><code>Record()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Record()</code></secondary>
    </indexterm>

    <simpara>Aufnahme von Audio auf einem Chanel in eine Datei</simpara>

    <para>ab Asterisk 1.2: <synopsis>Record(<replaceable>filename.format</replaceable>,<replaceable>silence</replaceable>[,<replaceable>maxduration</replaceable>][,<replaceable>options</replaceable>])</synopsis></para>

    <simpara>Nimmt Audio auf dem Chanel auf und speichert es in der Datei
    <code>filename</code>. Existiert diese Datei bereits, wird sie
    überschrieben.</simpara>

    <para>Optionale Parameter sind: <variablelist termlength="13">
        <varlistentry>
          <term><code>format</code></term>

          <listitem>
            <simpara>Spezifizert das Dateiformat der Aufnahmedatei. Gültige
            Formate sind <code>g723</code>, <code>g729</code>,
            <code>gsm</code>, <code>h263</code>, <code>ulaw</code>,
            <code>alaw</code>, <code>vox</code>, <code>wav</code> und
            <code>WAV</code>.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>silence</code></term>

          <listitem>
            <simpara>Gibt die Dauer in Sekunden an, die geräuschlos
            verstreichen darf, bevor die Aufnahme beendet wird.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>maxduration</code></term>

          <listitem>
            <simpara>Gibt die maximale Aufnahmedauer in Sekunden an. Falls
            nicht angegeben oder 0, gibt es keine Obergrenze.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>options</code></term>

          <listitem>
            <para>Kann beliebige der aufgeführten Buchstaben enthalten:
            <variablelist termlength="3">
                <varlistentry>
                  <term><code>s</code></term>

                  <listitem>
                    <simpara>Nimmt nicht auf, wenn die Leitung bisher nicht
                    beantwortet wurde.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>n</code></term>

                  <listitem>
                    <simpara>Antwortet nicht, aber nimmt nichtsdestotrotz auf,
                    wenn die Leitung bisher nicht beantwortet wurde.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>a</code></term>

                  <listitem>
                    <simpara>Hängt die Aufnahme an die bereits bestehende
                    Aufnahme an, statt sie zu überschreiben.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>t</code></term>

                  <listitem>
                    <simpara>Benutzt die alternative Abschlusstaste
                    <code>*</code> an Stelle der standardmäßig eingestellten
                    <code>#</code>-Taste.</simpara>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term><code>q</code></term>

                  <listitem>
                    <simpara>Spielt vor der Aufnahme keinen Ton ab (q =
                    quit).</simpara>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Enthält der Dateiname die Zeichenkette <code>%d</code>, wird
    diese durch eine Nummerierung ersetzt, die bei jedem erneuten Aufnehmen
    der Datei um eins erhöht wird.</simpara>

    <simpara>Der Teilnehmer kann die Taste <code>#</code> benutzten, um die
    Aufnahme abzubrechen und zur nächsten Priorität überzugehen.</simpara>

    <simpara>Liefert -1 zurück, wenn der Benutzer auflegt.</simpara>

    <programlisting>; record the caller's name
exten =&gt; 123,1,Playback(pls-rcrd-name-at-tone)
exten =&gt; 123,2,Record(/tmp/name.gsm,3,30)
exten =&gt; 123,3,Playback(/tmp/name)</programlisting>

    <simpara>Beachten Sie auch die Hinweise bei
    <code>Monitor()</code>.</simpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-dictate" />, <xref
      linkend="applikationen-monitor" />, <xref
      linkend="applikationen-mixmonitor" /></para>
    </formalpara>
  </section>

  <section id="applikationen-removequeuemember">
    <title><code>RemoveQueueMember()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>RemoveQueueMember()</code></secondary>
    </indexterm>

    <simpara>Entfernt dynamisch Warteschlangenmitglieder</simpara>

    <synopsis>RemoveQueueMember(<replaceable>queuename</replaceable>[,<replaceable>interface</replaceable>])</synopsis>

    <simpara>Enfernt das spezifizierte Interface interface dynamisch aus der
    Anrufwarteschlange <code>queuename</code>. Ist <code>interface</code>
    nicht angegeben, entfernt die Anwendung das momentan in Verwendung
    befindliche Interface aus der Warteschlange.</simpara>

    <simpara>Ist das Interface nicht in der Warteschlange enthalten und eine
    Priorität n+101 existiert (<code>n</code> bezeichnet dabei die aktuelle
    Priorität), wird die Anwendung zu dieser Priorität übergehen. Andernfalls
    wird sie einen Fehler zurückliefern.</simpara>

    <simpara>Liefert -1, wenn ein Fehler auftritt.</simpara>

    <programlisting>; remove SIP/3000 from the techsupport queue
exten =&gt; 123,1,RemoveQueueMember(techsupport,SIP/3000)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-addqueuemember" />, <xref
      linkend="applikationen-queue" />,
      <filename>queues.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-resetcdr">
    <title><code>ResetCDR()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ResetCDR()</code></secondary>
    </indexterm>

    <simpara>Setzt das Anrufprotokoll (Call Detail Record) zurück</simpara>

    <synopsis>ResetCDR([<replaceable>options</replaceable>])</synopsis>

    <simpara>Setzt das Anrufprotokoll (Call Detail Record) zurück. Ist der
    <code>w</code>-Parameter angegeben, wird eine Kopie des akutellen
    Anrufprotokolls gespeichert, bevor das aktuelle CDR gelöscht
    wird.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>; write a copy of the current CDR record, and then reset the CDR
exten =&gt; 123,1,Answer()
exten =&gt; 123,2,Playback(tt-monkeys)
exten =&gt; 123,3,ResetCDR(w)
exten =&gt; 123,4,Playback(tt-monkeys)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-forkcdr" />, <xref
      linkend="applikationen-nocdr" /></para>
    </formalpara>
  </section>

  <section id="applikationen-responsetimeout">
    <title><code>ResponseTimeout()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ResponseTimeout()</code></secondary>
    </indexterm>

    <simpara>Legt die maximale Zeitgrenze fest, die auf die Antwort eines
    Anrufers gewartet wird</simpara>

    <synopsis>ResponseTimeout()</synopsis>

    <simpara>Setzt die maximal erlaubte Zeitdauer, nachdem eine Reihe von
    Prioritäten für einen Chanel nicht zu Stande gekommen sind, während dessen
    ein Anrufer damit begonnen haben könnte, einen Extension einzugeben. Gibt
    der Anrufer in dieser Zeitdauer keine Extension ein, fällt die Kontrolle
    an die <code>t</code>-Extension, falls sie existiert; falls nicht, wird
    der Anruf beendet.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>; allow callers three seconds to make a choice, before sending them
; to the 't' extension
exten =&gt; s,1,Answer()
exten =&gt; s,2,ResponseTimeout(3)
exten =&gt; s,3,Background(enter-ext-of-person)

exten =&gt; t,1,Playback(im-sorry)
exten =&gt; t,1,Playback(goodbye)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-absolutetimeout" />, <xref
      linkend="applikationen-digittimeout" /></para>
    </formalpara>
  </section>

  <section id="applikationen-retrydial">
    <title><code>RetryDial()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>RetryDial()</code></secondary>
    </indexterm>

    <simpara>Versucht einen Anruf zu tätigen und wiederholt den Versucht bei
    einem Fehlschlagen</simpara>

    <synopsis>RetryDial(<replaceable>announce</replaceable>,<replaceable>sleep</replaceable>,<replaceable>loops</replaceable>,<replaceable>technology</replaceable>/<replaceable>resource</replaceable>[&amp;<replaceable>technology2</replaceable>/<replaceable>resource2</replaceable>...][,<replaceable>timeout</replaceable>][,<replaceable>options</replaceable>][,<replaceable>URL</replaceable>])</synopsis>

    <simpara>Versucht, einen Anruf zu tätigen. Kann kein Chanel erreicht
    werden, wird die durch announce definierte Datei abgespielt und
    <code>sleep</code> Sekunden gewartet, bis der Versuch wiederholt wird.
    Wenn die angegebene Zahl Versuche <code>loops</code> entspricht, wird der
    Anruft mit der nächsten Priorität auf dem Wählplan fortgesetzt. Ist
    <code>loop</code> auf 0 gesetzt, wird der Anrufversuch endlos
    wiederholt.</simpara>

    <simpara>In der Wartezeit kann eine einziffrige Extension angewählt
    werden. Existiert diese Extensions im durch <code>${EXITCONTEXT}</code>
    spezifizierten Kontext (falls angegeben) oder im aktuellen, wird der Anruf
    unmittelbar an diese Extension weitergeleitet.</simpara>

    <simpara>Alle Parameter nach <code>loops</code> werden direkt an die
    <code>Dial()</code>-Anwendung weitergeleitet.</simpara>

    <programlisting>; attempt to dial the number three times via IAX, retrying every five seconds
exten =&gt; 123,1,RetryDial(priv-trying,5,3,IAX2/VOIP/8885551212,30)
; if the caller presses 9 while waiting, dial the number on the Zap/4 channel
exten =&gt; 9,1,RetryDial(priv-trying,5,3,Zap/4/8885551212,30)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-dial" /></para>
    </formalpara>
  </section>

  <section id="applikationen-return">
    <title><code>Return()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Return()</code></secondary>
    </indexterm>

    <simpara>Kehrt von einem Unterprogramm zurück.</simpara>

    <synopsis>Return()</synopsis>

    <simpara>Kehrt von einem Unterprogramm, das mit <code>Gosub()</code> oder
    <code>GosubIf()</code> aufgerufen wurde, zurück an die Anweisung, die im
    Dialplan auf den Sprungbefehl folgt.</simpara>

    <programlisting>exten =&gt; 123,1,Playback(tt-monkeys)
exten =&gt; 123,n,Gosub(mein-unterprogramm,s,1)
exten =&gt; 123,n,Playback(tt-monkeys)
exten =&gt; 123,n,Hangup()

[mein-unterprogramm]
exten =&gt; s,1,Playback(tt-weasels)
exten =&gt; s,n,Return()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-gosub" />, <xref
      linkend="applikationen-gosubif" /></para>
    </formalpara>
  </section>

  <section id="applikationen-ringing">
    <title><code>Ringing()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Ringing()</code></secondary>
    </indexterm>

    <simpara>Signalisiert Klingelton</simpara>

    <synopsis>Ringing()</synopsis>

    <simpara>Verlangt, dass dem Teilnehmer Klingelton vom Chanel signalisiert
    wird. Wie genau diese Signalisierung erfolgt, hängt vom Chaneltreiber
    ab.</simpara>

    <simpara>Beachten Sie, dass diese Anwendung den Anrufer nicht mit
    tatsächlichem Klingeln versieht. Benutzen Sie hierzu die Anwendung
    <code>Playtones()</code>.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>; indicate that the phone is ringing, even though it isn't
exten =&gt; 123,1,Ringing()
exten =&gt; 123,2,Wait(5)
exten =&gt; 123,3,Playback(tt-somethingwrong)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-busy" />, <xref
      linkend="applikationen-congestion" />, <xref
      linkend="applikationen-progress" />, <xref
      linkend="applikationen-ringing" />, <xref
      linkend="applikationen-playtones" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sayalpha">
    <title><code>SayAlpha()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SayAlpha()</code></secondary>
    </indexterm>

    <simpara>Spricht eine Zeichenkette</simpara>

    <synopsis>SayAlpha(<replaceable>string</replaceable>)</synopsis>

    <simpara>Buchstabiert die übergebene Zeichenkette <code>string</code>
    unter Verwendung der aktuellen Spracheinstellung für den Chanel. Die
    <code>SetLanguage()</code>-Anwendung wird verwendet, um die aktuell
    eingestellte Sprache zu ändern.</simpara>

    <programlisting>exten =&gt; 123,1,SayAlpha(ABC123XYZ)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-saydigits" />, <xref
      linkend="applikationen-saylanguage" />, <xref
      linkend="applikationen-saynumber" />, <xref
      linkend="applikationen-sayphonetic" /></para>
    </formalpara>
  </section>

  <section id="applikationen-saydigits">
    <title><code>SayDigits()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SayDigits()</code></secondary>
    </indexterm>

    <simpara>Spricht die übergebenen Ziffern</simpara>

    <synopsis>SayDigits(<replaceable>digits</replaceable>)</synopsis>

    <simpara>Spricht die übergebenen Ziffern unter Verwendung der aktuellen
    Spracheinstellung für den Chanel. Die <code>SetLanguage()</code>-Anwendung
    wird verwendet, um die aktuell eingestellte Sprache zu ändern.</simpara>

    <programlisting>exten =&gt; 123,1,SayDigits(1234)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sayalpha" />, <xref
      linkend="applikationen-saylanguage" />, <xref
      linkend="applikationen-saynumber" />, <xref
      linkend="applikationen-sayphonetic" /></para>
    </formalpara>
  </section>

  <section id="applikationen-saynumber">
    <title><code>SayNumber()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SayNumber()</code></secondary>
    </indexterm>

    <simpara>Spricht die angegebene Zahl</simpara>

    <synopsis>SayNumber(<replaceable>digits</replaceable>[,<replaceable>gender</replaceable>])</synopsis>

    <simpara>Spricht die angegebene Zahl unter Verwendung der aktuellen
    Spracheinstellung für den Chanel. Die <code>SetLanguage()</code>-Anwendung
    wird verwendet, um die aktuell eingestellte Sprache zu ändern.</simpara>

    <para>Momentan werden folgenden Sprachen syntaktisch unterstützt:
    <variablelist termlength="4">
        <varlistentry>
          <term><code>da</code></term>

          <listitem>
            <simpara>dänisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>de</code></term>

          <listitem>
            <simpara>deutsch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>en</code></term>

          <listitem>
            <simpara>englisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>es</code></term>

          <listitem>
            <simpara>spanisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>fr</code></term>

          <listitem>
            <simpara>französisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>it</code></term>

          <listitem>
            <simpara>italienisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>nl</code></term>

          <listitem>
            <simpara>niederländisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>no</code></term>

          <listitem>
            <simpara>norwegisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>pl</code></term>

          <listitem>
            <simpara>polnisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>pt</code></term>

          <listitem>
            <simpara>portugiesisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>se</code></term>

          <listitem>
            <simpara>schwedisch</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>tw</code></term>

          <listitem>
            <simpara>taiwanesisch</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Sind der der aktuellen Sprache verschiedene Genera bekannt, kann
    der <code>gender</code>-Parameter übergeben werden und das Genus der zu
    sprechenden zahl zu ändern. Folgende <code>gender</code>-Parameter können
    verwendet werden:</simpara>

    <simpara>Benutzen Sie in europäischen Sprachen wie Portugiesisch,
    Französisch, Spanisch und Deutsch die <code>gender</code>-Parameter
    <code>f</code> für Femininum, <code>m</code> für Maskulinum und
    <code>n</code> für Neutrum.</simpara>

    <simpara>Benutzen Sie in nordischen Sprachen wie Dänisch, Schwedisch oder
    Norwegisch die <code>gender</code>-Parameter <code>c</code> für Menschlich
    (commune) und <code>n</code> für Neutrum.</simpara>

    <simpara>Benutzen Sie für Aufzählungen im deutschen Plural den
    <code>gender</code>-Parameter <code>p</code>.</simpara>

    <simpara>Damit diese Anwendung mit anderen Sprachen als Englisch
    funktioniert, müssen Sie die entsprechenden Audiodateien für die jeweilige
    gewünschte Sprache besitzen.</simpara>

    <programlisting>; say the number in English
exten =&gt; 123,1,SetLanguage(en)
exten =&gt; 123,2,SayNumber(1234)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sayalpha" />, <xref
      linkend="applikationen-saydigits" />, <xref
      linkend="applikationen-saylanguage" />, <xref
      linkend="applikationen-sayphonetic" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sayphonetic">
    <title><code>SayPhonetic()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SayPhonetic()</code></secondary>
    </indexterm>

    <simpara>Buchstabiert die angegebene Zeichenkette phonetisch.</simpara>

    <synopsis>SayPhonetic(<replaceable>string</replaceable>)</synopsis>

    <simpara>Buchstabiert die angegebene Zeichenkette string unter Verwendung
    des phonetischen NATO-Alphabets.</simpara>

    <programlisting>exten =&gt; 123,1,SayPhonetic(asterisk)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sayalpha" />, <xref
      linkend="applikationen-saydigits" />, <xref
      linkend="applikationen-saynumber" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sayunixtime">
    <title><code>SayUnixTime()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SayUnixTime()</code></secondary>
    </indexterm>

    <simpara>Zeitansage in einem spezifischen Format</simpara>

    <synopsis>SayUnixTime([<replaceable>unixtime</replaceable>][,[<replaceable>timezone</replaceable>][,<replaceable>format</replaceable>]])</synopsis>

    <para>Sagt die angegebene Zeit unter Berücksichtigung der angegebenen
    Zeitzone und des vorgegebenen Formats. Die Parameter sind: <variablelist
        termlength="10">
        <varlistentry>
          <term><code>unixtime</code></term>

          <listitem>
            <simpara>Die Zeit, angegeben in Sekunden seit dem 1. Januar 1970.
            Kann negative Werte annehmen. Standardwert ist die aktuelle
            Zeit.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>timezone</code></term>

          <listitem>
            <simpara>Die Zeitzone. Eine Liste findet sich in
            <filename>/usr/share/zoneinfo/</filename>. Standardwert ist die
            Geräteeinstellung.</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>format</code></term>

          <listitem>
            <simpara>Das Format, in der die Zeit gesprochen werden soll. Eine
            Liste von Formaten findet sich in
            <filename>voicemail.conf</filename>. Als Standardformat wird
            <code>ABdY 'digits/at' IMp</code> verwendet.</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Liefert 0 zurück, oder -1 wenn aufgelegt wird.</simpara>

    <programlisting>exten =&gt; 123,1,SayUnixTime(,,IMp)</programlisting>
  </section>

  <section id="applikationen-senddtmf">
    <title><code>SendDTMF()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SendDTMF()</code></secondary>
    </indexterm>

    <simpara>Sendet beliebige DTMF-Ziffern zu dem Chanel</simpara>

    <synopsis>SendDTMF(<replaceable>digits</replaceable>[,<replaceable>timeout_ms</replaceable>])</synopsis>

    <simpara>Sendet die angegebenen DTMF-Ziffern auf einem Chanel. Gültige
    DTMF-Symbole sind 0-9, *, # und A-D. Sie können auch den Buchstaben w als
    eine Ziffer verwendet, er steht für eine Wartezeit von 500 Millisekunden.
    Der Parameter <code>timeout_ms</code> bezeichnet die Zeitdauer in
    Millisekunden zwischen Ziffern. Falls nicht angegeben, wird ein Wert von
    250 Millisekunden für <code>timeout_ms</code> angenommen.</simpara>

    <simpara>Liefert bei Erfolg 0 zurück, oder -1 wenn aufgelegt
    wird.</simpara>

    <programlisting>exten =&gt; 123,1,SendDTMF(3212333w222w366w3212333322321,250</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-read" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sendimage">
    <title><code>SendImage()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SendImage()</code></secondary>
    </indexterm>

    <simpara>Sendet eine Bilddatei</simpara>

    <synopsis>SendImage(<replaceable>filename</replaceable>)</synopsis>

    <simpara>Sendet ein Bild auf einem Chanel, falls die Übermittlung von
    Bildern unterstützt wird. Unterstützt der Chanel keine Bildübertragung,
    und es existiert eine Priorität n+101 (wobei <code>n</code> die aktuelle
    Priorität bezeichnet), wird die Ausführung mit diesem Schritt fortgesetzt.
    Andernfalls wird die Ausführung auf dem nächsten Prioritätslevel
    fortgesetzt.</simpara>

    <simpara>Liefert 0 zurück, wenn das Bild fehlerfrei übertragen wurde oder
    der Chanel eine Bildübertragung nicht unterstützt, sonst -1.</simpara>

    <programlisting>exten =&gt; 123,1,SendImage(logo.jpg)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sendtext" />, <xref
      linkend="applikationen-sendurl" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sendtext">
    <title><code>SendText()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SendText()</code></secondary>
    </indexterm>

    <simpara>Sendet Text zu dem Chanel</simpara>

    <synopsis>SendText(<replaceable>text</replaceable>)</synopsis>

    <simpara>Überträgt den Text text auf einem Chanel, falls die Übertragung
    von Text unterstützt wird. Unterstützt der Chanel keine Textübertragung,
    und es existiert eine Priorität n+101 (wobei <code>n</code> die aktuelle
    Priorität bezeichnet), wird die Ausführung mit diesem Schritt fortgesetzt.
    Andernfalls wird die Ausführung auf dem nächsten Prioritätslevel
    fortgesetzt.</simpara>

    <simpara>Liefert 0 zurück, wenn der Text fehlerfrei übertragen wurde oder
    der Chanel eine Textübertragung nicht unterstützt, sonst -1.</simpara>

    <programlisting>exten =&gt; 123,1,SendText(Welcome to Asterisk)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sendimage" />, <xref
      linkend="applikationen-sendurl" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sendurl">
    <title><code>SendURL()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SendURL()</code></secondary>
    </indexterm>

    <simpara>Sendet dem Chanel eine URL</simpara>

    <synopsis>SendURL(<replaceable>URL</replaceable>[,<replaceable>option</replaceable>])</synopsis>

    <simpara>Der Client soll zu der spezifizierten <code>URL</code> gehen.
    Unterstützt der Client keine HTML-Übertragung, und es existiert eine
    Priorität n+101 (wobei <code>n</code> die aktuelle Priorität bezeichnet),
    wird die Ausführung mit diesem Schritt fortgesetzt. Andernfalls wird die
    Ausführung auf dem nächsten Prioritätslevel fortgesetzt.</simpara>

    <simpara>Liefert 0 zurück, wenn der URL fehlerfrei übertragen wurde oder
    der Chanel eine HTML-Übertragung nicht unterstützt, sonst -1.</simpara>

    <simpara>Ist die Option wait angegeben, wird die Ausführung erst
    fortgesetzt, wenn eine Bestätigung für den komplettierten Ladevorgang der
    URL eingegangen ist bzw. -1 zurückgeliefert, falls die Gegenstelle (peer
    ?) nicht in der Lage ist, die URL zu laden.</simpara>

    <programlisting>exten =&gt; 123,1,SendURL(www.asterisk.org,wait)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-sendimage" />, <xref
      linkend="applikationen-sendtext" /></para>
    </formalpara>
  </section>

  <section id="applikationen-set">
    <title><code>Set()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Set()</code></secondary>
    </indexterm>

    <simpara>Setzt eine Variable auf den angegebenen Wert</simpara>

    <synopsis>Set(<replaceable>Variable</replaceable>=<replaceable>Wert</replaceable>[,<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Setzt die <code>Variable</code> auf den angegebenen
    <code>Wert</code>. Beginnt der Name der Variablen mit dem Zeichen
    <code>_</code>, wird einfache Vererbung angenommen, beginnt er mit
    <code>__</code>, wird Endlosvererbung angenommen. Variablen sind
    normalerweise nur innerhalb eines Chanels gültig und werden beim Auflegen
    gelöscht. Mit der Option <code>g</code> setzt man in Asterisk 1.2 eine
    Variable global; in 1.4 macht man das mit Hilfe der Funktion
    <code>GLOBAL()</code>.</simpara>

    <programlisting>; die Variable test auf "123" setzen:
exten =&gt; 123,1,Set(test=123)
exten =&gt; 123,n,SayDigits(${test})

; die globale Variable test2 auf "456" setzen:
exten =&gt; 123,n,Set(test2=456,g)         ; Asterisk 1.2
exten =&gt; 123,n,Set(GLOBAL(test2)=456)   ; Asterisk 1.4</programlisting>

    <note>
      <para>Ob globale Variablen auch nach einem Reload von Asterisk noch
      gültig sind, wird durch die Einstellung <code>clearglobalvars</code> in
      der <filename>extensions.conf</filename> bestimmt.</para>
    </note>

    <simpara><code>Set()</code> wird auch verwendet, um in Funktionen zu
    schreiben (siehe <xref linkend="funktionen" />).</simpara>

    <programlisting>exten =&gt; 123,1,Set(CALLERID(name)=Apfelmus)  ; CALLERID(name) setzen
exten =&gt; 123,n,Set(CALLERID(name)=)          ; CALLERID(name) leeren

exten =&gt; 123,n,Set(DB(mein/test)=ok)         ; in AstDB schreiben
exten =&gt; 123,n,Set(var=${DB(mein/test)})     ; aus AstDB lesen</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-importvar" />,
      <filename>doc/README.variables</filename> (1.2) /
      <filename>doc/channelvariables.txt</filename> (1.4), <xref
      linkend="funktionen-global" /></para>
    </formalpara>
  </section>

  <section id="applikationen-setamaflags">
    <title><code>SetAMAFlags()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SetAMAFlags()</code></secondary>
    </indexterm>

    <simpara>Setzt AMA-Flags im Anrufprotokoll</simpara>

    <synopsis>SetAMAFlags(Flags)</synopsis>

    <simpara>Setzt, zu Abrechnungszwecken, die AMA-Flags im Anrufprotokoll
    (Call Detail Record), wobei die AMA-Einstellungen in den
    Chanelkonfigurationsdateien überschrieben werden. Gültige Werte sind
    <code>default</code>, <code>omit</code>, <code>billing</code> und
    <code>documentation</code>.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,SetAMAFlags(billing)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-setaccount" />, <xref
      linkend="applikationen-setcdruserfield" />, <xref
      linkend="applikationen-appendcdruserfield" /></para>
    </formalpara>
  </section>

  <section id="applikationen-setcallerpres">
    <title><code>SetCallerPres()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SetCallerPres()</code></secondary>
    </indexterm>

    <simpara>Setzt Caller ID Darstellungsflags (presentation flags)</simpara>

    <synopsis>SetCallerPres(<replaceable>presentation</replaceable>)</synopsis>

    <simpara>Setzt die Caller ID Darstellungsflags auf einer Q931
    PRI-Verbindung.</simpara>

    <para>Gültige Darstellungsflags sind: <variablelist termlength="23">
        <varlistentry>
          <term><code>allowed_not_screened</code></term>

          <listitem>
            <simpara>Anzeige erlaubt und nicht überprüft</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>allowed_passed_screen</code></term>

          <listitem>
            <simpara>Anzeige erlaubt und Überprüfung erfolgreich</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>allowed_passed_screen</code></term>

          <listitem>
            <simpara>Anzeige erlaubt und Überprüfung nicht
            erfolgreich</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>allowed</code></term>

          <listitem>
            <simpara>Anzeige erlaubt, Netzwerknummer</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>prohib_not_screened</code></term>

          <listitem>
            <simpara>Anzeige verboten und nicht überprüft</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>prohib_passed_screen</code></term>

          <listitem>
            <simpara>Anzeige verboten und Überprüfung erfolgreich</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>prohib_failed_screen</code></term>

          <listitem>
            <simpara>Anzeige verboten und Überprüfung nicht
            erfolgreich</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>prohib</code></term>

          <listitem>
            <simpara>Anzeige verboten, Netzwerknummer</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>unavailable</code></term>

          <listitem>
            <simpara>Nummer nicht verfügbar</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,SetCallerPres(allowed_not_screened)
exten =&gt; 123,2,Dial(Zap/4/1234567)</programlisting>

    <simpara>Evtl. müssen Sie <code>usecallingpres=yes</code> in der
    <filename>zapata.conf</filename> setzen.</simpara>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-setcallerid" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sipaddheader">
    <title><code>SIPAddHeader()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SIPAddHeader()</code></secondary>
    </indexterm>

    <simpara>Fügt dem ausgehenden SIP-Anruf einen Header hinzu.</simpara>

    <synopsis>SIPAddHeader(<replaceable>Header</replaceable>: <replaceable>Wert</replaceable>)</synopsis>

    <simpara>Fügt einem mit der <code>Dial()</code>-Anwendung initiierten
    SIP-Anruf einen Header hinzu. Ein nicht standardisierter SIP-Header sollte
    mit einem <code>X-</code> beginnen, wie etwa
    <code>X-Asterisk-Accountcode:</code>. Verwenden Sie diese Anwendung mit
    Vorsicht, denn das Hinzufügen eines falschen Headers kann Probleme
    verursachen. Mit dieser Applikation können keine SIP-Header verändert
    werden.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,SIPAddHeader(X-Asterisk-Account: ${CDR(accountcode)})
exten =&gt; 123,2,Dial(SIP/123)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="funktionen-sip_header" /></para>
    </formalpara>
  </section>

  <section id="applikationen-sipdtmfmode">
    <title><code>SIPdtmfMode()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SIPdtmfMode()</code></secondary>
    </indexterm>

    <simpara>Ändert das DTMF-Verfahren für einen SIP-Anruf</simpara>

    <synopsis>SIPdtmfMode(Methode)</synopsis>

    <simpara>Ändert den DTMF-Modus für einen Anruf, der von einem SIP-Chanel
    ausgeht (nicht für einen Anruf auf einen SIP-Chanel). <code>Methode</code>
    kann die Werte <code>inband</code> (RTP), <code>info</code> oder
    <code>rfc2833</code> annehmen.</simpara>

    <programlisting>exten =&gt; 123,n,SIPdtmfMode(rfc2833)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para>RFC 2833<footnote>
          <simpara><ulink
          url="http://www.ietf.org/rfc/rfc2833.txt">http://www.ietf.org/rfc/rfc2833.txt</ulink></simpara>
        </footnote>, RFC 2976<footnote>
          <simpara><ulink
          url="http://www.ietf.org/rfc/rfc2976.txt">http://www.ietf.org/rfc/rfc2976.txt</ulink></simpara>
        </footnote></para>
    </formalpara>
  </section>

  <section id="applikationen-softhangup">
    <title><code>SoftHangup()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SoftHangup()</code></secondary>
    </indexterm>

    <simpara>Legt den angegebenen Chanel auf.</simpara>

    <synopsis>SoftHangup(<replaceable>Technologie</replaceable>/<replaceable>Ressource</replaceable>,[<replaceable>Optionen</replaceable>])</synopsis>

    <simpara>Legt den angegebenen Chanel auf. Liefert stets 0 zurück. Der
    <code>Optionen</code>-Parameter kann den Buchstaben <code>a</code>
    enthalten, was bewirkt, dass alle Kanäle auf dem angegebenen Gerät (statt
    nur der Resource) aufgelegt werden.</simpara>

    <programlisting>; alle Kanäle auflegen, die Zap/4 benutzen:
exten =&gt; 123,1,SoftHangup(Zap/4,a)
exten =&gt; 123,2,Wait(2)
exten =&gt; 123,3,Dial(Zap/4/1234567)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-hangup" /></para>
    </formalpara>
  </section>

  <section id="applikationen-stopmonitor">
    <title><code>StopMonitor()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>StopMonitor()</code></secondary>
    </indexterm>

    <simpara>Beendet die Überwachung eines Chanels</simpara>

    <synopsis>StopMonitor()</synopsis>

    <simpara>Beendet die Überwachung (Aufnahme) eines Chanels. Diese Anwendung
    hat keinerlei Auswirkungen, wenn der Chanel momentan nicht überwacht
    wird.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,2,Monitor(wav,monitor_test,mb)
exten =&gt; 123,3,SayDigits(12345678901234567890)
exten =&gt; 123,4,StopMonitor()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-monitor" /></para>
    </formalpara>
  </section>

  <section id="applikationen-stopplaytones">
    <title><code>StopPlaytones()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>StopPlaytones()</code></secondary>
    </indexterm>

    <simpara>Beendet die Wiedergabe einer Liste von Tönen</simpara>

    <synopsis>StopPlaytones()</synopsis>

    <simpara>Beendet die Wiedergabe der momentan laufenden Tonliste.</simpara>

    <programlisting>exten =&gt; 123,1,Playtones(busy)
exten =&gt; 123,2,Wait(2)
exten =&gt; 123,3,StopPlaytones()
exten =&gt; 123,4,Playtones(congestion)
exten =&gt; 123,5,Wait(2)
exten =&gt; 123,6,StopPlaytones()
exten =&gt; 123,7,Goto(1)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-playtones" />,
      <filename>indications.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-striplsd">
    <title><code>StripLSD()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>StripLSD()</code></secondary>
    </indexterm>

    <simpara>Entfernt die angegebene Zahl von Endziffern (von niederwertigsten
    Ziffern) von der aktuellen Extension</simpara>

    <synopsis>StripLSD(<replaceable>count</replaceable>)</synopsis>

    <simpara>Entfernt die <code>count</code> niederwertigsten Ziffern (die
    letzen <code>count</code> Ziffern) von der dem Chanel zugeordneten
    Extension und setzt die Ausführung bei der nächsten Priorität für die
    resultieren Extension fort. Ist zum Beispiel Priorität 1 der Extension
    5551212 <code>StripLSD(4)</code>, werden die letzten vier Ziffern von
    5551212 abgelöst und der nächste Schritt, Priorität 2 von Extension 555,
    ausgeführt. Wird zu einer Extions gewechselt, die keine Priorität
    <code>n+1</code> besitzt (mit <code>n</code>: aktuelle Priorität), wird
    das PBX sie behandeln, als hätte der Teilnehmer eine ungültige Extension
    angewählt.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <simpara>Diese Anwendung ist veraltet und wurde durch den
    Teilkettenausdruck <code>${EXTEN:X:Y}</code> ersetzt.</simpara>

    <programlisting>exten =&gt; 5551212,1,StripLSD(4)
exten =&gt; 555,2,SayDigits(${EXTEN})

; a better way of doing the same thing
exten =&gt; 5551234,1,SayDigits(${EXTEN::3})</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-stripmsd" />,
      <filename>doc/README.variables</filename> (1.2) /
      <filename>doc/channelvariables.txt</filename> (1.4)</para>
    </formalpara>
  </section>

  <section id="applikationen-stripmsd">
    <title><code>StripMSD()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>StripMSD()</code></secondary>
    </indexterm>

    <simpara>Entfernt die angegebene Zahl führender Ziffern (höchstwertiger
    Ziffern) von der aktuellen Extension</simpara>

    <synopsis>StripMSD(<replaceable>count</replaceable>)</synopsis>

    <simpara>Entfernt die ersten <code>count</code> Ziffern von der dem Chanel
    zugeordneten Extension und setzt die Ausführung bei der nächsten Priorität
    für die resultieren Extension fort. Ist zum Beispiel Priorität 1 der
    Extension 5551212 <code>StripMSD(3)</code>, werden die ersten drei Ziffern
    von 5551212 abgelöst und der nächste Schritt, Priorität 2 von Extension
    1212, ausgeführt. Wird zu einer Extions gewechselt, die keine Priorität
    <code>n+1</code> besitzt (mit <code>n</code>: aktuelle Priorität), wird
    das PBX sie behandeln, als hätte der Teilnehmer eine ungültige Extension
    angewählt.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <simpara>Diese Anwendung ist veraltet und wurde durch den
    Teilkettenausdruck <code>${EXTEN:X:Y}</code> ersetzt.</simpara>

    <programlisting>exten =&gt; 5551212,1,StripMSD(3)
exten =&gt; 1212,2,SayDigits(${EXTEN})
; a better way of doing the same thing
exten =&gt; 5551234,1,SayDigits(${EXTEN:3})</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-striplsd" />,
      <filename>doc/README.variables</filename> (1.2) /
      <filename>doc/channelvariables.txt</filename> (1.4)</para>
    </formalpara>
  </section>

  <section id="applikationen-substring">
    <title><code>SubString()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>SubString()</code></secondary>
    </indexterm>

    <simpara>Speichert eine Ziffernteilkette in eine gegebene
    Variable</simpara>

    <synopsis>SubString(<replaceable>variable</replaceable>=<replaceable>string_of_digits</replaceable>,<replaceable>count1</replaceable>,<replaceable>count2</replaceable>)</synopsis>

    <simpara>Weist die Teilkette von <code>string_of_digits</code> einer
    gegebenen Variablen zu. Der Parameter <code>count1</code> kann dabei
    sowohl positiv als auch negativ sein. Ist er positiv, werden die ersten
    <code>count1</code> Ziffern von links ausgelassen, ist er negativ, werden
    <code>count1</code> Ziffern vom Ende des Strings nach links verschoben.
    Parameter <code>count2</code> bestimmt hierbei, wie viele Ziffern an der
    durch <code>count1</code> markierten Stelle weggenommen werden. Falls
    <code>count2</code> negativ ist, wird die dieser Zahl entsprechende Anzahl
    von Ziffern am Ende weggelassen.</simpara>

    <simpara>Diese Verwendung dieser Anwendung wird nicht mehr empfohlen.
    Verwenden Sie an Ihrer Stelle <code>${EXTEN:X:Y}</code>.</simpara>

    <programlisting>; here are some examples using SubString():
;assign the area code (3 first digits) to variable TEST
exten =&gt; 8885551212,1,SubString(TEST=8885551212,0,3)
; assign the last 7 digits to variable TEST
exten =&gt; 8885551212,1,SubString(TEST=8885551212,-7,7)
; assign all but the last 4 digits to variable TEST
exten =&gt; 8885551212,1,SubString(TEST=8885551212,0,-4)
;
; and here are the preferred alternatives:
;assign the area code (3 first digits) to variable TEST
exten =&gt; 8885551212,1,Set(TEST=${EXTEN::3})
; assign the last 7 digits to variable TEST
exten =&gt; 8885551212,1,Set(TEST=${EXTEN:-7:7})
; assign all but the last 4 digits to variable TEST
exten =&gt; 8885551212,1,Set(TEST=${EXTEN:6}</programlisting>
  </section>

  <section id="applikationen-suffix">
    <title><code>Suffix()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Suffix()</code></secondary>
    </indexterm>

    <simpara>Fügt Ziffern am Ende der aktuellen Extension an</simpara>

    <synopsis>Suffix(<replaceable>digits</replaceable>)</synopsis>

    <simpara>Hängt die durch digits spezifizierte Ziffernkette an die mit dem
    Chanel verknüpfte Extension an und fährt mit der Ausführung an der
    nächsten Priorität dieser neuen Extension fort. Sei etwa
    <code>Suffix(1212)</code> die Priorität 1 von Extension 555, dann wird
    1212 an 555 angehangen und der nächste Schritt, der ausgeführt wird, ist
    Priorität 2 von Extension 5551212. Falls zu einer Extension gewechselt
    wird, die keine Priorität n+101 besitzt (wobei <code>n</code> die aktuelle
    Priorität bezeichne), wird sich PBX so verhalten, als ob der Teilnehmer
    eine ungültige Extension angewählt hat.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 555,1,Suffix(1212)
exten =&gt; 5551212,2,SayDigits(${EXTEN})</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-prefix" /></para>
    </formalpara>
  </section>

  <section id="applikationen-system">
    <title><code>System()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>System()</code></secondary>
    </indexterm>

    <simpara>Führt einen Betriebssystembefehl aus</simpara>

    <synopsis>System(<replaceable>command</replaceable>)</synopsis>

    <simpara>Führ einen Befehl <code>command</code> auf dem zugrundeliegenden
    Betriebssystem aus. Falls der Befehl ausgeführt wird, jedoch einen Fehler
    hervorruft, und eine Priorität n+101 existiert (wobei <code>n</code> die
    aktuelle Priorität bezeichne), wird die Ausführung des Wählplans auf
    dieser Prioritätsstufe fortgesetzt.</simpara>

    <simpara>Diese Anwendung ist der <code>TrySystem()</code>-Anwendung sehr
    ähnlich, abgesehen davon, dass sie -1 zurückliefert, falls sie den
    Systembefehl nicht ausführen kann, wohingegen die
    <code>TrySystem()</code>-Anwendung stets 0 zurückliefert.</simpara>

    <programlisting>exten =&gt; 123,1,System(echo hello &gt; /tmp/hello.txt)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-trysystem" /></para>
    </formalpara>
  </section>

  <section id="applikationen-transfer">
    <title><code>Transfer()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Transfer()</code></secondary>
    </indexterm>

    <simpara>Übermittelt den Anrufer zu einer entfernten Extension (Remote
    Extension)</simpara>

    <synopsis>Transfer(<replaceable>exten</replaceable>)</synopsis>

    <simpara>Verlangt die Übermittlung des fernen Anrufers zu einer gegebenen
    Extension. Falls eine solche Übermittlung nicht unterstützt wird oder
    erfolgreich verläuft, und eine Priorität n+101 existiert (wobei
    <code>n</code> die aktuelle Priorität bezeichne), wird diese Priorität als
    Nächste herangezogen.</simpara>

    <programlisting>; transfer calls from extension 123 to extension 130
exten =&gt; 123,1,Transfer(130)</programlisting>
  </section>

  <section id="applikationen-trysystem">
    <title><code>TrySystem()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>TrySystem()</code></secondary>
    </indexterm>

    <simpara>Versucht die Ausführung eines Betriebssystembefehls</simpara>

    <synopsis>TrySystem(<replaceable>command</replaceable>)</synopsis>

    <simpara>Versucht den Befehl command auf dem zugrundeliegenden
    Betriebssystem auszuführen. Falls der Befehl ausgeführt wird, jedoch einen
    Fehler hervorruft, und eine Priorität n+101 existiert (wobei
    <code>n</code> die aktuelle Priorität bezeichne), wird die Ausführung des
    Wählplans auf dieser Prioritätsstufe fortgesetzt.</simpara>

    <simpara>Diese Anwendung entspricht weitestgehend der
    <code>System()</code>-Anwendung, abgesehen von der Tatsache, dass sie
    stets 0 zurückliefert, wohingegen die <code>System()</code>-Anwendung -1
    zurückliefert, falls sie den Systembefehl nicht ausführen kann.</simpara>

    <programlisting>exten =&gt; 123,1,TrySystem(echo hello &gt; /tmp/hello.txt)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-system" /></para>
    </formalpara>
  </section>

  <section id="applikationen-txtcidname">
    <title><code>TXTCIDName()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>TXTCIDName()</code></secondary>
    </indexterm>

    <simpara>Schlägt den Namen eines Anrufers in einer DNS TXT-Aufzeichnung
    nach</simpara>

    <synopsis>TXTCIDName(<replaceable>CallerID</replaceable>)</synopsis>

    <simpara>Schlägt den Namen eines Anrufers mittels DNS nach und setzt die
    Variable <code>${TXTCIDNAME}</code>. <code>TXTCIDNAME</code> wird
    daraufhin entweder leer sein oder den in der TXT-Aufzeichnung des DNS
    gefundenen Wert liefern. Diese Anwendung liest/sucht die Nummer mit Hilfe
    der in <filename>enum.conf</filename> gelisteten ENUM-Quellen.</simpara>

    <programlisting>exten =&gt; 123,1,TXTCIDName(8662331454)
exten =&gt; 123,2,SayAlpha(${TXTCIDNAME})
exten =&gt; 123,3,Playback(vm-goodbye)</programlisting>
  </section>

  <section id="applikationen-unpausequeuemember">
    <title><code>UnpauseQueueMember()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>UnpauseQueueMember()</code></secondary>
    </indexterm>

    <simpara>Hebt die Blockierung für ein Warteschlangenmitglied auf</simpara>

    <synopsis>UnpauseQueueMember([<replaceable>queuename</replaceable>],<replaceable>interface</replaceable>)</synopsis>

    <simpara>Hebt die Blockierung für ein Mitglied einer Warteschlange auf,
    d.h. es kann Anrufe wiederaufnehmen. Dies ist das Gegenstück zu
    <code>PauseQueueMember()</code>. Die Arbeitsweise ist die gleiche, außer
    dass das gegebene Interface nicht blockiert, sondern seine Blockierung
    aufgehoben wird.</simpara>

    <programlisting>exten =&gt; 123,1,PauseQueueMember(,SIP/300)
exten =&gt; 124,1,UnpauseQueueMember(,SIP/300)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-pausequeuemember" /></para>
    </formalpara>
  </section>

  <section id="applikationen-userevent">
    <title><code>UserEvent()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>UserEvent()</code></secondary>
    </indexterm>

    <simpara>Sendet ein beliebiges Ereignis an das Managerinterface</simpara>

    <synopsis>UserEvent(<replaceable>eventname</replaceable>[,<replaceable>body</replaceable>])</synopsis>

    <para>Sendet ein beliebiges Ereignis an das Managerinterface, mit einem
    optionalen Körper <code>body</code>, der zusätzliche Argumente
    repräsentiert. Das Ereignis steht in folgendem Format: <programlisting>Event: UserEvent &lt;specified event name&gt;
Channel: &lt;channel name&gt;
Uniqueid: &lt;call uniqueid&gt;
[body]</programlisting></para>

    <simpara>Ist der Körper (<code>body</code>) nicht spezifiziert, können nur
    Event, Chanel und Uniqueid-Felder berücksichtigt werden.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,UserEvent(BossCalled,${CALLERIDNAME} has called the boss!)
exten =&gt; 123,2,Dial(${BOSS})</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><filename>manager.conf</filename>, Asterisk Manager
      interface</para>
    </formalpara>
  </section>

  <section id="applikationen-verbose">
    <title><code>Verbose()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Verbose()</code></secondary>
    </indexterm>

    <simpara>Sendet beliebigen Text zum ausführlichen Ausgang (Verbose
    Output)</simpara>

    <synopsis>Verbose([<replaceable>level</replaceable>,]<replaceable>message</replaceable>)</synopsis>

    <simpara>Sendet die angegebene Nachricht <code>message</code> an den
    Verbose-Ausgang. Die Stufe <code>level</code> muss als ganzzahliger Wert
    angegeben sein. Ist <code>level</code> nicht angegeben, wird 0
    angenommen.</simpara>

    <simpara>Liefert stets 0 zurück.</simpara>

    <programlisting>exten =&gt; 123,1,Verbose(Somebody called extension 123)
exten =&gt; 123,2,Playback(extension)
exten =&gt; 123,3,SayDigits(${EXTEN})</programlisting>
  </section>

  <section id="applikationen-vmauthenticate">
    <title><code>VMAuthenticate()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>VMAuthenticate()</code></secondary>
    </indexterm>

    <simpara>Authentifiziert den Anrufer mittels
    Voicemail-Passwörtern</simpara>

    <synopsis>VMAuthenticate([<replaceable>mailbox</replaceable>][@<replaceable>context</replaceable>])</synopsis>

    <simpara>Verhält sich wie die <code>Authenticate()</code>-Anwendung, mit
    der Ausnahme, dass die Passwörter aus <filename>voicemail.conf</filename>
    gelesen werden.</simpara>

    <simpara>Ist eine Mailbox <code>mailbox</code> stezifiziert, wird nur das
    Passwort dieser Mailbox als gültig betrachtet. Wird <code>mailbox</code>
    nicht angegeben, wird die Chanelvariable <code>${AUTH_MAILBOX}</code> mit
    der authentifizierten Mailbox belegt.</simpara>

    <programlisting>; authenticate off of any mailbox password, and tell us the matching
; mailbox number
exten =&gt; 123,1,VMAuthenticate()
exten =&gt; 123,2,SayDigits(${AUTH_MAILBOX})</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-authenticate" />,
      <filename>voicemail.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-voicemail">
    <title><code>VoiceMail()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>VoiceMail()</code></secondary>
    </indexterm>

    <simpara>Hinterlässt eine Voicemail-Nachricht in der angegebenen
    Mailbox</simpara>

    <synopsis>VoiceMail(<replaceable>mailbox</replaceable>[@<replaceable>context</replaceable>][&amp;<replaceable>mailbox</replaceable>[@<replaceable>context</replaceable>]][...],[s|u|b])</synopsis>

    <simpara>Hinterlässt Voicemail für eine spezifizierte Mailbox
    <code>mailbox</code> (muss in <filename>voicemail.conf</filename>
    konfiguriert sein).</simpara>

    <simpara>Wird als letzter Parameter ein <code>s</code> angegeben, werden
    die Anweisungen zum Hinterlassen der Nachricht übersprungen. Bei einem
    <code>u</code> wird die Nicht-verfügbar-Nachricht abgespielt, falls sie
    vorhanden ist. Bei <code>b</code> wird die Besetzt-Botschaft abgespielt
    (Datei <filename>busy</filename> statt
    <filename>unavail</filename>).</simpara>

    <simpara>Drückt der Teilnehmer während der Eingabeaufforderung
    <code>0</code> (Null), geht der Anruf zur <code>o</code> (kleiner
    Buchstabe o)-Extension im aktuellen Kontext über.</simpara>

    <simpara>Drückt der Teilnehmer während der Eingabeaufforderung
    <code>*</code>, geht der Anruf zur <code>a</code>-Extension im aktuellen
    Kontext über. Dies ist gebräuchlich, um den Anrufer an einen persönlichen
    Assistenten zu übersenden/verweisen.</simpara>

    <simpara>Falls die angeforderte Mailbox nicht existiert, und es eine
    Priorität n+101 gibt (mit <code>n</code>: aktuelle Priorität), wird die
    Priorität als nächstes herangezogen.</simpara>

    <simpara>Sind mehrere Mailboxen angegeben, wird die Nicht verfügbar- bzw.
    Besetzt-Nachricht der ersten angegebenen Mailbox genommen.</simpara>

    <simpara>Liefert im Falle eines Fehlers oder falls die Mailbox nicht
    gefunden wird, oder falls der Teilnehmer auflegt, -1 zurück, sonst
    0.</simpara>

    <programlisting>; send caller to unavailable voicemail for mailbox 123
exten =&gt; 123,1,VoiceMail(123,u)</programlisting>

    <programlisting>
; bei Anrufen auf der Durchwahl 123:
exten =&gt; 123,1,Answer                   ; abheben
exten =&gt; 123,2,Playback(meine-ansage)   ; Ansage abspielen
exten =&gt; 123,3,VoiceMail(123)           ; Nachricht aufnehmen
exten =&gt; 123,4,Hangup                   ; auflegen</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-voicemailmain" />,
      <filename>voicemail.conf und </filename><xref
      linkend="kapitel-voicemail" /></para>
    </formalpara>
  </section>

  <section id="applikationen-voicemailmain">
    <title><code>VoiceMailMain()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>VoiceMailMain()</code></secondary>
    </indexterm>

    <simpara>Betritt das Voicemail-System</simpara>

    <synopsis>VoiceMailMain(<replaceable>[mailbox</replaceable>][@<replaceable>context</replaceable>][,s|p])</synopsis>

    <simpara>Mit VoiceMailMain kann eine VoiceMailBox vom Benutzer über das
    Telefon abgefragt werden. Werden keine Parameter übergeben, fragt ein
    Sprachmenü den User nach der Mailboxnummer und dem Passwort.</simpara>

    <simpara>Die Übergabe des <code>mailbox</code>-Parameters hält das
    Voicemail-System von der Abfrage des Teilnehmers nach der Mailbox-Nummer
    ab.</simpara>

    <simpara>Ist Mailbox der Parameter <code>s</code> nachgestellt, wird die
    Überprüfung des Passworts übersprungen. Beim Parameter <code>p</code> wird
    die bereitgestellte/angegebene Mailbox dem Eintrag des Benutzers
    vorangestellt und die daraus resultierende Zeichenkette als Mailboxnummer
    verwendet. Das ist nützlich bei der Bereitstellung virtueller
    Voicemail-Boxen (Virtual Hosting). Ist ein Kontext <code>context</code>
    spezifiziert, werden nur Anmeldungen in diesem Voicemail-Kontext
    berücksichtigt.</simpara>

    <simpara>Liefert -1 zurück, wenn der Benutzer auflegt, sonst 0.</simpara>

    <programlisting>; go to voicemail menu for mailbox 123 in the default voicemail context
exten =&gt; 123,1,VoiceMailMain(123@default)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-voicemail" />,
      <filename>voicemail.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-wait">
    <title><code>Wait()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Wait()</code></secondary>
    </indexterm>

    <simpara>Wartet für eine in Sekunden vorgegebene Dauer</simpara>

    <synopsis>Wait(<replaceable>seconds</replaceable>)</synopsis>

    <simpara>Wartet die angegebene Anzahl Sekunden, und liefert dann 0 zurück.
    Es können auch Sekundenbruchteile übergeben werden (z.B. 1.5 für 1,5
    Sekunden).</simpara>

    <programlisting>; wait 1.5 seconds before playing the prompt
exten =&gt; s,1,Answer()
exten =&gt; s,2,Wait(1.5)
exten =&gt; s,3,Background(enter-ext-of-person)</programlisting>
  </section>

  <section id="applikationen-waitexten">
    <title><code>WaitExten()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>WaitExten()</code></secondary>
    </indexterm>

    <simpara>Wartet auf die Eingabe einer Extension</simpara>

    <synopsis>WaitExten([<replaceable>seconds</replaceable>])</synopsis>

    <simpara>Wartet die angegebene Anzahl Sekunden auf die Eingabe einer neuen
    Extension durch den Teilnehmer, und liefert dann 0 zurück. Es können auch
    Sekundenbruchteile übergeben werden (z.B. 1.5 für 1,5 Sekunden). Falls
    keine Zeitdauer spezifiziert wird, wird die Standardfrist (Default
    Extension Timeout) angewendet.</simpara>

    <programlisting>; wait 15 seconds for the user to dial an extension
exten =&gt; s,1,Answer()
exten =&gt; s,2,Playback(enter-ext-of-person)
exten =&gt; s,3,WaitExten(15)</programlisting>
  </section>

  <section id="applikationen-waitforring">
    <title><code>WaitForRing()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>WaitForRing()</code></secondary>
    </indexterm>

    <simpara>Wartet die in Sekunden vorgegebene Dauer auf ein
    Klingelzeichen</simpara>

    <synopsis>WaitForRing(<replaceable>timeout</replaceable>)</synopsis>

    <simpara>Wartet nach dem Abschluss des nächsten Klingelns mindestens
    <code>timeout</code> Sekunden.</simpara>

    <simpara>Liefert bei Erfolg 0, falls aufgelegt wurde -1 zurück.</simpara>

    <programlisting>; wait five seconds for a ring, and then send some DTMF digits
exten =&gt; 123,1,Answer()
exten =&gt; 123,2,WaitForRing(5)
exten =&gt; 123,3,SendDTMF(1234)</programlisting>
  </section>

  <section id="applikationen-waitforsilence">
    <title><code>WaitForSilence()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>WaitForSilence()</code></secondary>
    </indexterm>

    <simpara>Wartet auf eine festgelegte Dauer von Geräuchlösigkeit/Wartet auf
    eine festgelegt lange Ruhephase</simpara>

    <synopsis>WaitForSilence(<replaceable>wait</replaceable>[,<replaceable>repeat</replaceable>])</synopsis>

    <simpara>Wartet <code>repeat</code> mal auf <code>wait</code>
    Millisekunden Ruhe. Wird <code>repeat</code> weggelassen, wartet die
    Anwendung auf das Einmalige Auftreten von <code>wait</code> Millisekunden
    Ruhe.</simpara>

    <programlisting>; wait for three instances of 300 ms of silence
exten =&gt; 123,WaitForSilence(300,3)</programlisting>
  </section>

  <section id="applikationen-waitmusiconhold">
    <title><code>WaitMusicOnHold()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>WaitMusicOnHold()</code></secondary>
    </indexterm>

    <simpara>Wartet für eine in Sekunden vorgegebene Dauer, wobei Wartemusik
    abgespielt wird</simpara>

    <synopsis>WaitMusicOnHold(<replaceable>delay</replaceable>)</synopsis>

    <simpara>Spielt die in Sekunden angegebene Zeit Wartemusik. Ist keine
    Wartemusik vorhanden, wird die Verzögerung dennoch ausgeführt, jedoch
    tonlos.</simpara>

    <simpara>Liefert nach Abschluss 0, oder -1 falls aufgelegt
    wurde.</simpara>

    <programlisting>; allow caller to hear Music on Hold for five minutes
exten =&gt; 123,1,Answer()
exten =&gt; 123,2,WaitMusicOnHold(300)
exten =&gt; 123,3,Hangup()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-setmusiconhold" />,
      <filename>musiconhold.conf</filename></para>
    </formalpara>
  </section>

  <section id="applikationen-while">
    <title><code>While()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>While()</code></secondary>
    </indexterm>

    <simpara>Beginnt eine Whileschleife</simpara>

    <synopsis>While(<replaceable>expr</replaceable>)</synopsis>

    <simpara>Beginnt eine <code>while</code>-Schleife. Die Ausführung kehrt zu
    diesem Punkt zurück, wenn <code>Endwhile()</code> aufgerufen wird oder der
    Ausdruck <code>expr</code> nicht länger wahr ist. Wird eine Bedingung
    angetroffen, die ein Verlassen der Schleife bewirkt, wird sie noch nach
    <code>EndWhile()</code> fortgesetzt.</simpara>

    <programlisting>exten =&gt; 123,1,Set(COUNT=1)
exten =&gt; 123,2,While($[ ${COUNT} &lt; 5 ])
exten =&gt; 123,3,SayNumber(${COUNT})
exten =&gt; 123,4,EndWhile()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-endwhile" />, <xref
      linkend="applikationen-gotoif" /></para>
    </formalpara>
  </section>

  <section id="applikationen-zapateller">
    <title><code>Zapateller()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>Zapateller()</code></secondary>
    </indexterm>

    <simpara>Verwendet einen speziellen Informationston, um automatisierte
    Werbeanrufe abzublocken</simpara>

    <synopsis>Zapateller(<replaceable>options</replaceable>)</synopsis>

    <simpara>Generiert einen speziellen Informationston (SIT, special
    information tone, "Kein Anschluss unter dieser Nummer"), um Telehändler
    und andere maschinengewählte Anrufe davon abzuhalten, Sie zu
    belästigen.</simpara>

    <para>Der <code>options</code>-Parameter stellt eine Liste von Optionen
    dar, die durch <code>|</code>-Zeichen voneinander getrennt sind. Die
    folgenden Optionen sind verfügbar:<variablelist termlength="12">
        <varlistentry>
          <term><code>answer</code></term>

          <listitem>
            <simpara>Bewirkt, dass die Leitung beantwortet wird bevor der Ton
            abgespielt wird</simpara>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><code>nocallerid</code></term>

          <listitem>
            <simpara>Bewirkt, dass Zapateller den Ton nur abspielt, wenn keine
            Caller ID-Information verfügbar ist</simpara>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <programlisting>[incoming]
; im Kontext incoming answer the line, and play the SIT tone if there is no Caller ID information
exten =&gt; s,1,Zapateller(answer|nocallerid)</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-privacymanager" /></para>
    </formalpara>
  </section>

  <section id="applikationen-zapbarge">
    <title><code>ZapBarge()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ZapBarge()</code></secondary>
    </indexterm>

    <simpara>Tritt in einen Zap-Chanel ein und überwacht ihn</simpara>

    <synopsis>ZapBarge([<replaceable>channel</replaceable>])</synopsis>

    <simpara>Tritt in den angegebenen Zap-Chanel <code>channel</code> ein,
    oder fragt zunächst per Eingabeaufforderung einen ab, falls keiner
    angegeben wurde. Die anderen Teilnehmer auf dem Chanel können Sie dabei
    nicht hören werden und werden auch sonst keine Anzeichen wahrnehmen, dass
    ihr Anruf überwacht wird.</simpara>

    <simpara>Ist der Chanel (<code>channel</code>) nicht angegeben, werden Sie
    zunächst zur Eingabe einer Chanelnummer aufgefordert. Geben Sie z.B.
    <code>4#</code> für Zap/4 ein.</simpara>

    <simpara>Liefert -1, wenn der Anrufer auflegt. Ist unabhängig von dem
    Zustand, dass der Chanel überwacht wird.</simpara>

    <programlisting>exten =&gt; 123,1,ZapBarge(Zap/2)
exten =&gt; 123,2,Hangup()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-zapscan" />, <xref
      linkend="applikationen-chanspy" /></para>
    </formalpara>
  </section>

  <section id="applikationen-zapras">
    <title><code>ZapRAS()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ZapRAS()</code></secondary>
    </indexterm>

    <simpara>Führt den entfernten Zaptel ISDN-Zugriffsserver (Zaptel ISDN
    Remote Access Server) aus.</simpara>

    <synopsis>ZapRAS(<replaceable>args</replaceable>)</synopsis>

    <simpara>Startet über <filename>pppd</filename> einen ISDN RAS Server auf
    dem aktuellen Chanel. Der Chanel muss ein freier Chanel sein (z.B. PRI
    Source), und ein Zaptel-Chanel sein, um diese Funktion durchführen zu
    können. (Eine Modem-Emulation ist nicht enthalten.)</simpara>

    <simpara>Um Zaptel zu kennen, muss <filename>pppd</filename> entsprechend
    präpariert sein. <code>args</code> ist eine Liste von durch das |-Symbol
    getrennten Argumenten.</simpara>

    <simpara>Liefert stets -1 zurück.</simpara>

    <simpara>Diese Anwendungen ist nur für die Benutzung mit ISDN-Leitungen
    ausgelegt, und Ihr Kernel muss mit einem Patch für die Unterstützung von
    <code>ZapRAS()</code> versehen sein. Ihr Kernel muss ebenso
    ppp-Unterstützung bereitstellen.</simpara>

    <programlisting>exten =&gt; 123,1,Answer()
exten =&gt; 123,1,ZapRas(debug|64000|noauth|netmask|255.255.255.0|10.0.0.1:10.0.0.2)</programlisting>
  </section>

  <section id="applikationen-zapscan">
    <title><code>ZapScan()</code></title>

    <indexterm significance="preferred">
      <primary>Dialplan-Applikationen</primary>

      <secondary><code>ZapScan()</code></secondary>
    </indexterm>

    <simpara>Durchsucht Zap-Kanäle um Anrufe zu überwachen/Hört Zap-Kanäle ab,
    um Anrufe zu überwachen</simpara>

    <synopsis>ZapScan([<replaceable>group</replaceable>])</synopsis>

    <simpara>Erlaubt einem Call Center Manager, Zap Kanäle auf bequeme Art zu
    überwachen. Benutzen Sie <code>#</code> um den nächsten Chanel
    auszuwählen, oder <code>*</code> zum beenden. Sie können die Abfrage auf
    eine bestimmte Chanelgruppe begrenzen, indem Sie den
    <code>group</code>-Parameter verwenden.</simpara>

    <programlisting>exten =&gt; 123,1,ZapScan()</programlisting>

    <formalpara>
      <title>Siehe auch</title>

      <para><xref linkend="applikationen-zapbarge" />, <xref
      linkend="applikationen-chanspy" /></para>
    </formalpara>
  </section>
</section>
