<?xml version="1.0" encoding="ISO-8859-1"?>
<section id="isdn-1.2-misdn-allgemein" lang="de" revision="$Revision: 1.2 $">
  <!--% Copyright (c) 2007
% - Wintermeyer <sw@amooma.de>
% - Christian Richter <cr@beronet.com>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation;
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title>mISDN allgemein</title>

  <para>Diese Installationsanleitung bezieht sich allgemein auf alle
  ISDN-Karten, die vom mISDN-Projekt unterstützt werden.</para>

  <section id="mISDN-1.2-installation-asterisk">
    <title>Installation</title>

    <para>Diese Installationsanleitung setzt ein frisch installiertes Debian
    GNU/Linux 3.1 (a.k.a. sarge) voraus. Ein ISO-Image für eine entsprechende
    i386er Debian Linux-Installation befindet sich unter <ulink
    url="http://cdimage.debian.org/debian-cd/3.1_r4/i386/iso-cd/debian-31r4-i386-netinst.iso"><citetitle>http://cdimage.debian.org/debian-cd/3.1_r4/i386/iso-cd/debian-31r4-i386-netinst.iso</citetitle></ulink>.
    Eine Debian GNU/Linux-Installationsanleitung steht unter <ulink
    url="http://www.debian.org/releases/stable/i386/"><citetitle>http://www.debian.org/releases/stable/i386/</citetitle></ulink>
    und ein allgemeines Anwenderhandbuch unter <ulink
    url="http://debiananwenderhandbuch.de/"><citetitle>http://debiananwenderhandbuch.de.</citetitle></ulink></para>

    <para><emphasis>Nach erfolgreicher Installation des Debian Linux-Systems
    melden Sie sich als Benutzer root in das System an und führen Sie die hier
    nachfolgend angegebenen Befehle aus. Bitte achten Sie darauf, keinen
    Schritt auszulassen und die Schritte als Benutzer root
    durchzuführen.</emphasis></para>

    <para>Als Erstes stellen Sie mit einem <command>apt-get update</command>
    sicher, dass <code>apt-get</code> alle aktuellen Paketlisten zur Verfügung
    hat:<screen>debian:~# apt-get update
OK   http://ftp.de.debian.org stable/main Packages
OK   http://ftp.de.debian.org stable/main Release
OK   http://security.debian.org stable/updates/main Packages
OK   http://security.debian.org stable/updates/main Release
OK   http://security.debian.org stable/updates/contrib Packages
OK   http://security.debian.org stable/updates/contrib Release
OK   http://ftp.de.debian.org stable/main Sources
OK   http://ftp.de.debian.org stable/main Release
Paketlisten werden gelesen... Fertig
debian:~#</screen></para>

    <para>Um sicherzugehen, dass wirklich alle Pakete auf dem neuesten Stand
    sind, führen Sie zur Sicherheit noch ein <command>apt-get -y
    upgrade</command> aus:<screen>debian:~# apt-get -y upgrade
Paketlisten werden gelesen... Fertig
Abhängigkeitsbaum wird aufgebaut... Fertig
0 aktualisiert, 0 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.</screen></para>

    <para>Jetzt müssen Sie mit <command>apt-get -y install openssl zlibc
    libkrb5-dev libncurses5-dev libssl-dev zlib1g-dev</command> noch ein paar
    Pakete nachinstallieren, damit das spätere Kompilieren von Asterisk
    erfolgreich durchgeführt werden kann:</para>

    <screen>debian:~# apt-get -y install openssl zlibc libkrb5-dev libncurses5-dev libssl-dev zlib1g-dev
Paketlisten werden gelesen... Fertig
Abhängigkeitsbaum wird aufgebaut... Fertig
Die folgenden zusätzlichen Pakete werden installiert:
  comerr-dev libkadm55
Vorgeschlagene Pakete:
  doc-base krb5-doc ca-certificates
Die folgenden NEUEN Pakete werden installiert:
  comerr-dev libkadm55 libkrb5-dev libncurses5-dev libssl-dev openssl
  zlib1g-dev zlibc
0 aktualisiert, 8 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.
Es müssen 6025kB Archive geholt werden.
Nach dem Auspacken werden 18,8MB Plattenplatz zusätzlich benutzt.
Hole:1 http://ftp.de.debian.org stable/main libkadm55 1.3.6-2sarge3 [165kB]
Hole:2 http://ftp.de.debian.org stable/main libncurses5-dev 5.4-4 [1038kB]
Hole:3 http://ftp.de.debian.org stable/main libssl-dev 0.9.7e-3sarge4 [2555kB] 
Hole:4 http://ftp.de.debian.org stable/main openssl 0.9.7e-3sarge4 [906kB]     
Hole:5 http://ftp.de.debian.org stable/main zlib1g-dev 1:1.2.2-4.sarge.2 [488kB]
Hole:6 http://ftp.de.debian.org stable/main zlibc 0.9j-7 [245kB]               
Hole:7 http://ftp.de.debian.org stable/main comerr-dev 2.1-1.37-2sarge1 [53,0kB]
Hole:8 http://ftp.de.debian.org stable/main libkrb5-dev 1.3.6-2sarge3 [574kB]  
Es wurden 6025kB in 57s geholt (104kB/s)                                       
Wähle vormals abgewähltes Paket libkadm55.
(Lese Datenbank ... 32512 Dateien und Verzeichnisse sind derzeit installiert.)
Entpacke libkadm55 (aus .../libkadm55_1.3.6-2sarge3_i386.deb) ...
Wähle vormals abgewähltes Paket libncurses5-dev.
Entpacke libncurses5-dev (aus .../libncurses5-dev_5.4-4_i386.deb) ...
Wähle vormals abgewähltes Paket libssl-dev.
Entpacke libssl-dev (aus .../libssl-dev_0.9.7e-3sarge4_i386.deb) ...
Wähle vormals abgewähltes Paket openssl.
Entpacke openssl (aus .../openssl_0.9.7e-3sarge4_i386.deb) ...
Creating directory /etc/ssl
Wähle vormals abgewähltes Paket zlib1g-dev.
Entpacke zlib1g-dev (aus .../zlib1g-dev_1%3a1.2.2-4.sarge.2_i386.deb) ...
Wähle vormals abgewähltes Paket zlibc.
Entpacke zlibc (aus .../archives/zlibc_0.9j-7_i386.deb) ...
Wähle vormals abgewähltes Paket comerr-dev.
Entpacke comerr-dev (aus .../comerr-dev_2.1-1.37-2sarge1_i386.deb) ...
Wähle vormals abgewähltes Paket libkrb5-dev.
Entpacke libkrb5-dev (aus .../libkrb5-dev_1.3.6-2sarge3_i386.deb) ...
Richte libkadm55 ein (1.3.6-2sarge3) ...

Richte libncurses5-dev ein (5.4-4) ...
Richte libssl-dev ein (0.9.7e-3sarge4) ...

Richte openssl ein (0.9.7e-3sarge4) ...

Richte zlib1g-dev ein (1.2.2-4.sarge.2) ...
Richte zlibc ein (0.9j-7) ...

Richte comerr-dev ein (2.1-1.37-2sarge1) ...

Richte libkrb5-dev ein (1.3.6-2sarge3) ...
debian:~#</screen>

    <para>Asterisk wird aber erst nach mISDN installiert werden. mISDN lässt
    sich momentan ausschließlich mit einen 2.6.x Kernel kompilieren. Um diesen
    zu installieren, suchen Sie mit <command>apt-cache search
    kernel-image-2.6.8 | grep kernel-image</command> den zu Ihrer Architektur
    passenden Kernel:<screen>debian:~# apt-cache search kernel-image-2.6.8 | grep kernel-image
kernel-image-2.6.8-3-386 - Linux kernel image for version 2.6.8 on 386.
kernel-image-2.6.8-11-amd64-generic - Linux kernel image for version 2.6.8 on generic x86_64 systems
kernel-image-2.6.8-11-amd64-k8 - Linux kernel image for version 2.6.8 on AMD64 systems
kernel-image-2.6.8-11-amd64-k8-smp - Linux kernel image for version 2.6.8 on AMD64 SMP systems
kernel-image-2.6.8-11-em64t-p4 - Linux kernel image for version 2.6.8 on Intel EM64T systems
kernel-image-2.6.8-11-em64t-p4-smp - Linux kernel image for version 2.6.8 on Intel EM64T SMP systems
kernel-image-2.6.8-12-amd64-generic - Linux kernel image for version 2.6.8 on generic x86_64 systems
kernel-image-2.6.8-12-amd64-k8 - Linux kernel image for version 2.6.8 on AMD64 systems
kernel-image-2.6.8-12-amd64-k8-smp - Linux kernel image for version 2.6.8 on AMD64 SMP systems
kernel-image-2.6.8-12-em64t-p4 - Linux kernel image for version 2.6.8 on Intel EM64T systems
kernel-image-2.6.8-12-em64t-p4-smp - Linux kernel image for version 2.6.8 on Intel EM64T SMP systems
kernel-image-2.6.8-2-386 - Linux kernel image for version 2.6.8 on 386.
kernel-image-2.6.8-2-686 - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4.
kernel-image-2.6.8-2-686-smp - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4 SMP.
kernel-image-2.6.8-2-k7 - Linux kernel image for version 2.6.8 on AMD K7.
kernel-image-2.6.8-2-k7-smp - Linux kernel image for version 2.6.8 on AMD K7 SMP.
kernel-image-2.6.8-3-686 - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4.
kernel-image-2.6.8-3-686-smp - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4 SMP.
kernel-image-2.6.8-3-k7 - Linux kernel image for version 2.6.8 on AMD K7.
kernel-image-2.6.8-3-k7-smp - Linux kernel image for version 2.6.8 on AMD K7 SMP.
debian:~# </screen>In diesem Beispiel entscheiden wir uns für den Kernel
    <parameter>kernel-image-2.6.8-2-686</parameter> und installieren diesen
    mit <command>apt-get -y install
    kernel-image-2.6.8-2-686</command>:<screen>debian:~# apt-get -y install kernel-image-2.6.8-2-686
Paketlisten werden gelesen... Fertig
Abhängigkeitsbaum wird aufgebaut... Fertig
Vorgeschlagene Pakete:
  lilo kernel-doc-2.6.8 kernel-source-2.6.8
Die folgenden NEUEN Pakete werden installiert:
  kernel-image-2.6.8-2-686
0 aktualisiert, 1 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.
Es müssen 15,5MB Archive geholt werden.
Nach dem Auspacken werden 45,2MB Plattenplatz zusätzlich benutzt.
Hole:1 http://ftp.de.debian.org stable/main kernel-image-2.6.8-2-686 2.6.8-16sarge1 [15,5MB]
Es wurden 15,5MB in 41s geholt (375kB/s)                                       
Wähle vormals abgewähltes Paket kernel-image-2.6.8-2-686.
(Lese Datenbank ... 21874 Dateien und Verzeichnisse sind derzeit installiert.)
Entpacke kernel-image-2.6.8-2-686 (aus .../kernel-image-2.6.8-2-686_2.6.8-16sarge1_i386.deb) ...
Richte kernel-image-2.6.8-2-686 ein (2.6.8-16sarge1) ...
Searching for GRUB installation directory ... found: /boot/grub .
Testing for an existing GRUB menu.list file... found: /boot/grub/menu.lst .
Searching for splash image... none found, skipping...
Found kernel: /boot/vmlinuz-2.6.8-2-686
Found kernel: /boot/vmlinuz-2.4.27-3-386
Updating /boot/grub/menu.lst ... done


debian:~# </screen>Danach booten wir den Rechner mit <command>shutdown -r
    now</command> und können nach dem Booten mit <command>uname -a</command>
    kontrollieren, ob mit dem richtigen Kernel gebootet wurde:<screen>debian:~# uname -a
Linux debian 2.6.8-2-686 #1 Tue Aug 16 13:22:48 UTC 2005 i686 GNU/Linux
debian:~# </screen>Zum Kompilieren benötigen wir jetzt noch die zum Kernel
    passenden Header-Dateien. Diese können mit <command>apt-get -y install
    kernel-headers-`uname -r`</command> nachinstalliert werden:<screen>debian:~# apt-get -y install kernel-headers-`uname -r`
Paketlisten werden gelesen... Fertig
Abhängigkeitsbaum wird aufgebaut... Fertig
Die folgenden zusätzlichen Pakete werden installiert:
  kernel-headers-2.6.8-2 kernel-kbuild-2.6-3
Die folgenden NEUEN Pakete werden installiert:
  kernel-headers-2.6.8-2 kernel-headers-2.6.8-2-686 kernel-kbuild-2.6-3
0 aktualisiert, 3 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.
Es müssen 3395kB Archive geholt werden.
Nach dem Auspacken werden 42,6MB Plattenplatz zusätzlich benutzt.
Hole:1 http://ftp.de.debian.org stable/main kernel-kbuild-2.6-3 2.6.8-2 [363kB]
Hole:2 http://ftp.de.debian.org stable/main kernel-headers-2.6.8-2 2.6.8-16sarge1 [2777kB]
Hole:3 http://ftp.de.debian.org stable/main kernel-headers-2.6.8-2-686 2.6.8-16sarge1 [255kB]
Es wurden 3395kB in 35s geholt (96,4kB/s)                                      
Wähle vormals abgewähltes Paket kernel-kbuild-2.6-3.
(Lese Datenbank ... 23577 Dateien und Verzeichnisse sind derzeit installiert.)
Entpacke kernel-kbuild-2.6-3 (aus .../kernel-kbuild-2.6-3_2.6.8-2_i386.deb) ...
Wähle vormals abgewähltes Paket kernel-headers-2.6.8-2.
Entpacke kernel-headers-2.6.8-2 (aus .../kernel-headers-2.6.8-2_2.6.8-16sarge1_i386.deb) ...
Wähle vormals abgewähltes Paket kernel-headers-2.6.8-2-686.
Entpacke kernel-headers-2.6.8-2-686 (aus .../kernel-headers-2.6.8-2-686_2.6.8-16sarge1_i386.deb) ...
Richte kernel-kbuild-2.6-3 ein (2.6.8-2) ...
Richte kernel-headers-2.6.8-2 ein (2.6.8-16sarge1) ...

Richte kernel-headers-2.6.8-2-686 ein (2.6.8-16sarge1) ...
debian:~# </screen></para>

    <para>Nun kann mit der eigentlichen Installation von mISDN begonnen
    werden.</para>

    <para>Wechseln Sie mit <command>cd /usr/src</command> in das Verzeichnis
    <filename>/usr/src</filename> und laden Sie mit <command>wget
    http://www.misdn.org/downloads/mISDN.tar.gz</command> und <command>wget
    http://www.misdn.org/downloads/mISDNuser.tar.gz</command> die mISDN- und
    mISDNuser-Quellen herunter:<screen>debian:~# cd /usr/src
debian:/usr/src# wget http://www.misdn.org/downloads/mISDN.tar.gz
--17:27:13--  http://www.misdn.org/downloads/mISDN.tar.gz
           =&gt; `mISDN.tar.gz'
Auflösen des Hostnamen »www.misdn.org«.... 80.244.243.34
Verbindungsaufbau zu www.misdn.org[80.244.243.34]:80... verbunden.
HTTP Anforderung gesendet, warte auf Antwort... 200 OK
Länge: 762,995 [application/x-tar]

100%[====================================&gt;] 762,995       86.55K/s    ETA 00:00

17:27:21 (101.81 KB/s) - »mISDN.tar.gz« gespeichert [762995/762995]

debian:/usr/src# wget http://www.misdn.org/downloads/mISDNuser.tar.gz
--17:27:55--  http://www.misdn.org/downloads/mISDNuser.tar.gz
           =&gt; `mISDNuser.tar.gz'
Auflösen des Hostnamen »www.misdn.org«.... 80.244.243.34
Verbindungsaufbau zu www.misdn.org[80.244.243.34]:80... verbunden.
HTTP Anforderung gesendet, warte auf Antwort... 200 OK
Länge: 549,899 [application/x-tar]

100%[====================================&gt;] 549,899      101.91K/s    ETA 00:00

17:28:01 (99.57 KB/s) - »mISDNuser.tar.gz« gespeichert [549899/549899]

debian:/usr/src#</screen>Jetzt die Pakete mit <command>tar xvzf
    mISDN.tar.gz</command> und <command>tar xvzf mISDNuser.tar.gz</command>
    entpacken:<screen>debian:/usr/src# tar xvzf mISDN.tar.gz 
mISDN-1_0_4/
mISDN-1_0_4/add.config
mISDN-1_0_4/CVS/
mISDN-1_0_4/CVS/Root
mISDN-1_0_4/CVS/Repository
mISDN-1_0_4/CVS/Entries
mISDN-1_0_4/drivers/
mISDN-1_0_4/drivers/CVS/
mISDN-1_0_4/drivers/CVS/Root
mISDN-1_0_4/drivers/CVS/Repository
mISDN-1_0_4/drivers/CVS/Entries

[...]

mISDN-1_0_4/km_mISDN.spec
mISDN-1_0_4/Makefile
mISDN-1_0_4/Makefile.module
mISDN-1_0_4/Makefile.standalone
mISDN-1_0_4/misdn-init
mISDN-1_0_4/mISDN.modprobe.d
mISDN-1_0_4/README.misdn-init
mISDN-1_0_4/Rules.make.ext
mISDN-1_0_4/std2kern
mISDN-1_0_4/stddiff
mISDN-1_0_4/VERSION
debian:/usr/src# tar xvzf mISDNuser.tar.gz 
mISDNuser-1_0_3/
mISDNuser-1_0_3/COPYING.LIB
mISDNuser-1_0_3/CVS/
mISDNuser-1_0_3/CVS/Root
mISDNuser-1_0_3/CVS/Repository
mISDNuser-1_0_3/CVS/Entries
mISDNuser-1_0_3/example/
mISDNuser-1_0_3/example/CVS/

[...]

mISDNuser-1_0_3/voip/example/rec_ctrl.sample
mISDNuser-1_0_3/voip/voip_isdn.ce
mISDNuser-1_0_3/voip/voip_isdn.c
mISDNuser-1_0_3/voip/voip_appl.ce
mISDNuser-1_0_3/voip/voip_appl.c
mISDNuser-1_0_3/voip/voip_isdn_app.ce
mISDNuser-1_0_3/voip/voip_isdn_app.c
debian:/usr/src# </screen></para>

    <para>Nach einem <command>cd mISDN-1_0_4</command> kann mit <command>make
    install</command> das entsprechende Paket kompiliert werden:</para>

    <screen>debian:/usr/src# cd mISDN-1_0_4 
debian:/usr/src/mISDN-1_0_4# make install

Making mISDN
=============

cp /usr/src/mISDN-1_0_4/drivers/isdn/hardware/mISDN/Makefile.v2.6 /usr/src/mISDN-1_0_4/drivers/isdn/hardware/mISDN/Makefile
export MINCLUDES=/usr/src/mISDN-1_0_4/include ; make -C /lib/modules/2.6.8-2-686/build SUBDIRS=/usr/src/mISDN-1_0_4/drivers/isdn/hardware/mISDN modules CONFIG_MISDN_DRV=m  CONFIG_MISDN_DSP=m  CONFIG_MISDN_HFCMULTI=m  CONFIG_MISDN_HFCPCI=m CONFIG_MISDN_HFCUSB=m CONFIG_MISDN_XHFC=m CONFIG_MISDN_HFCMINI=m CONFIG_MISDN_W6692=m CONFIG_MISDN_SPEEDFAX=m CONFIG_MISDN_AVM_FRITZ=m CONFIG_MISDN_NETJET=m  
make[1]: Entering directory `/usr/src/kernel-headers-2.6.8-2-686'
  CC [M]  /usr/src/mISDN-1_0_4/drivers/isdn/hardware/mISDN/avm_fritz.o
  CC [M]  /usr/src/mISDN-1_0_4/drivers/isdn/hardware/mISDN/hfc_multi.o

[...]

mkdir -p //etc/modprobe.d
cp mISDN.modprobe.d //etc/modprobe.d/mISDN
mkdir -p //etc/modules.d
cp mISDN.modprobe.d //etc/modules.d/mISDN
/sbin/depmod 
/sbin/update-modules
debian:/usr/src/mISDN-1_0_4# </screen>

    <para>Dann mit <command>cd ../mISDNuser-1_0_3</command> in das
    mISDNuser-Verzeichnis wechseln und dort wieder mit <command>make
    install</command> kompilieren:</para>

    <screen>debian:/usr/src/mISDN-1_0_4# cd ../mISDNuser-1_0_3 
debian:/usr/src/mISDNuser-1_0_3# make install
mkdir -p //usr/bin/
mkdir -p //usr/include/mISDNuser/
mkdir -p ///usr/lib
make TARGET=all subdirs
make[1]: Entering directory `/usr/src/mISDNuser-1_0_3'
set -e; for i in lib example i4lnet tenovis voip suppserv ; do make -C $i all; done
make[2]: Entering directory `/usr/src/mISDNuser-1_0_3/lib'

[...]

make[2]: Leaving directory `/usr/src/mISDNuser-1_0_3/tenovis'
make[2]: Entering directory `/usr/src/mISDNuser-1_0_3/voip'
for i in voipisdn ; do \
        install -m 755 $i //usr/bin ;\
done
make[2]: Leaving directory `/usr/src/mISDNuser-1_0_3/voip'
make[2]: Entering directory `/usr/src/mISDNuser-1_0_3/suppserv'
install -m 644 libsuppserv.a //usr/lib
install -m 644 libsuppserv_pic.a //usr/lib
install -m 644 libsuppserv.so //usr/lib
cp *.h //usr/include/mISDNuser/
make[2]: Leaving directory `/usr/src/mISDNuser-1_0_3/suppserv'
make[1]: Leaving directory `/usr/src/mISDNuser-1_0_3'
cp include/*.h //usr/include/mISDNuser/
debian:/usr/src/mISDNuser-1_0_3#</screen>

    <para>Auf der Asterisk-Homepage <ulink
    url="http://www.asterisk.org/"><citetitle>http://www.asterisk.org/</citetitle></ulink>
    finden Sie die notwendigen Quellen, um Asterisk zu kompilieren. Nehmen Sie
    bitte eine <emphasis>stabile</emphasis> und keine Entwickler-Version und
    laden Sie diese mit <command>wget
    http://ftp.digium.com/pub/asterisk/asterisk-1.2-current.tar.gz</command>
    in das Verzeichnis <filename>/usr/src/</filename> herunter:</para>

    <screen>debian:/usr/src/mISDNuser-1_0_3# cd /usr/src
debian:/usr/src# wget http://ftp.digium.com/pub/asterisk/asterisk-1.2-current.tar.gz
--18:30:46--  http://ftp.digium.com/pub/asterisk/asterisk-1.2-current.tar.gz
           =&gt; `asterisk-1.2-current.tar.gz'
Auflösen des Hostnamen »ftp.digium.com«.... 69.16.138.164
Verbindungsaufbau zu ftp.digium.com[69.16.138.164]:80... verbunden.
HTTP Anforderung gesendet, warte auf Antwort... 200 OK
Länge: 10,584,113 [application/x-gzip]

100%[====================================&gt;] 10,584,113   224.71K/s    ETA 00:00

18:31:36 (207.67 KB/s) - »asterisk-1.2-current.tar.gz« gespeichert [10584113/10584113]
</screen>

    <para>Die komprimierte Datei muss jetzt mit <command>tar xvzf
    asterisk-1.2-current.tar.gz</command> entpackt werden:<screen>debian:/usr/src# tar xvzf asterisk-1.2-current.tar.gz 
asterisk-1.2.13/
asterisk-1.2.13/build_tools/
asterisk-1.2.13/build_tools/make_svn_branch_name
asterisk-1.2.13/build_tools/mkdep
asterisk-1.2.13/build_tools/make_build_h
asterisk-1.2.13/build_tools/make_version_h
asterisk-1.2.13/build_tools/make_defaults_h
asterisk-1.2.13/aesopt.h
asterisk-1.2.13/utils.c
asterisk-1.2.13/keys/
[...]
asterisk-1.2.13/cli.c
asterisk-1.2.13/io.c
asterisk-1.2.13/ulaw.c
asterisk-1.2.13/logger.c
debian:/usr/src# </screen></para>

    <para>Die entpackten Dateien müssen nun kompiliert werden. Dies geschieht
    mit dem Befehl <command>make</command> im gerade entpackten
    Verzeichnis.<warning>
        <para>Bitte achten Sie darauf, dass die hier in der Dokumentation
        benutzte Version 1.2.13 vielleicht zum Zeitpunkt Ihrer Installation
        nicht mehr aktuell ist. Entsprechend werden sich die Verzeichnisnamen
        ändern.</para>
      </warning>Übrigens ist dies jetzt ein guter Moment, sich einen Kaffee
    oder Tee zu kochen. Der Kompiliervorgang kann je nach Rechenleistung des
    PCs wenige Minuten oder bis zu einer Stunde dauern.</para>

    <screen>debian:/usr/src# cd asterisk-1.2.13
debian:/usr/src/asterisk-1.2.13# make
if cmp -s .cleancount .lastclean ; then echo ; else \
        make clean; cp -f .cleancount .lastclean;\

[...]

make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/usr/src/asterisk-1.2.13/stdtime'
 +--------- Asterisk Build Complete ---------+
 + Asterisk has successfully been built, but +
 + cannot be run before being installed by   +
 + running:                                  +
 +                                           +
 +               make install                +
 +-------------------------------------------+</screen>

    <para>Die Software ist jetzt kompiliert und muss nur noch mit
    <command>make install</command> installiert (sprich an die vorgesehenen
    Stellen im Dateisystem kopiert) werden:</para>

    <screen>debian:/usr/src/asterisk-1.2.13# make install
build_tools/make_version_h &gt; include/asterisk/version.h.tmp
if cmp -s include/asterisk/version.h.tmp include/asterisk/version.h ; 
then echo;

[...]

 +---- Asterisk Installation Complete -------+
 +                                           +
 +    YOU MUST READ THE SECURITY DOCUMENT    +
 +                                           +
 + Asterisk has successfully been installed. +
 + If you would like to install the sample   +
 + configuration files (overwriting any      +
 + existing config files), run:              +
 +                                           +
 +               make samples                +
 +                                           +
 +-----------------  or ---------------------+
 +                                           +
 + You can go ahead and install the asterisk +
 + program documentation now or later run:   +
 +                                           +
 +              make progdocs                +
 +                                           +
 + **Note** This requires that you have      +
 + doxygen installed on your local system    +
 +-------------------------------------------+</screen>

    <para>Geschafft! Die soeben kompilierten Programmdateien sind jetzt auf
    dem System installiert. Allerdings finden wir im
    Asterisk-Konfigurationsverzeichnis <filename>/etc/asterisk/</filename>
    noch gähnende Leere vor. In diesem Verzeichnis liegen die
    Konfigurationsdateien von Asterisk und da wir nicht von Null beginnen
    möchten, lassen wir uns die Standarddateien erstellen. Dies erreichen wir
    mit <command>make samples</command>:</para>

    <screen>debian:/usr/src/asterisk-1.2.13# make samples
build_tools/make_version_h &gt; include/asterisk/version.h.tmp
if cmp -s include/asterisk/version.h.tmp include/asterisk/version.h ; 
then echo;

[...]

done</screen>

    <para>Fertig! Asterisk ist auf Ihrem System installiert. Mit dem Befehl
    <command>asterisk -V</command> können Sie die installierte Version
    herausfinden (bitte achten Sie auf das großgeschriebene V):<screen>debian:/usr/src/asterisk-1.2.13# asterisk -V
Asterisk 1.2.13</screen></para>
  </section>

  <section id="mISDN-1.2-Konfiguration">
    <title>Konfiguration der mISD-Treiber</title>

    <para>Zunächst sollten Sie sich mit dem Skript "misdn-init" vertraut
    machen. Dieses durchsucht Ihr System nach installierter Hardware, erstellt
    automatisch eine Standardkonfiguration und lädt die Kernel-Module. Führen
    Sie einfach <command>misdn-init</command> aus, um die möglichen Parameter
    zu erhalten.</para>

    <para>Um zu sehen, welche mISDN-kompatiblen Karten im System installiert
    sind, führen Sie <command>misdn-init scan</command> aus.</para>

    <para>Die Konfiguration der Kernel-Module erfolgt über die Datei
    <filename>/etc/misdn-init.conf</filename>. Um diese initial zu erzeugen,
    führen Sie einfach das Kommando: <command>misdn-init config</command> aus.
    Nun editieren Sie die Datei mit Ihrem Lieblingseditor. Nehmen wir einmal
    an, Sie haben eine BN4S0-Karte der Firma <ulink
    url="http://www.beronet.de"><citetitle>beroNet</citetitle></ulink> im
    System und wollen den Port 1 am Anlagenanschluss, den Port 2 am
    Mehrgeräteanschluss betreiben. Am Port 3 soll eine TK-Anlage betrieben
    werden und an Port 4 ein ISDN-Telefon. Entsprechend muss die
    <filename>/etc/misdn-init.conf</filename> wie folgt aussehen:
    <programlisting>#Die Kartendefinition für die 4S0 Karte
card=1,0x4

#der Anlagenanschluss:
te_ptp=1

#der Mehrgeräteanschluss:
te_ptmp=2

#die beiden NT Anschlüsse, Port 3 ist Punkt zu Punkt wegen der Anlage und Port 4 Mehrgeräte wegen des ISDN-Telefons
nt_ptp=3
nt_ptmp=4

#wir beziehen die Synchronisation vom AMT am Anlagenanschluss.
option=1,master_clock</programlisting>Modifizieren Sie diese Datei
    entsprechend Ihrem Setup.</para>

    <para>Die Kernel-Module werden nun mit <command>misdn-init start</command>
    gestartet.</para>

    <para>Das mISDNuser-Paket enthält ein nützliches Tool, mit dem Sie
    feststellen können, ob die Module korrekt geladen worden sind. Führen Sie
    <command>misdnportinfo</command> aus, um die momentante Portkonfiguration
    zu erfahren. Die Ausgabe sieht etwa so aus: <screen>Port  1: TE-mode BRI S/T interface line (for phone lines)
 -&gt; Interface is Poin-To-Point.
 -&gt; Protocol: DSS1 (Euro ISDN)
 -&gt; childcnt: 2
--------
Port  2: TE-mode BRI S/T interface line (for phone lines)
 -&gt; Protocol: DSS1 (Euro ISDN)
 -&gt; childcnt: 2
--------
Port  3: NT-mode BRI S/T interface port (for phones)
 -&gt; Interface can be Poin-To-Point/Multipoint.
--------
Port  4: NT-mode BRI S/T interface port (for phones)
 -&gt; Interface can be Poin-To-Point/Multipoint.
--------
mISDN_close: fid(3) isize(131072) inbuf(0x804c060) irp(0x804c060) iend(0x804c060)</screen>Nun
    sind die Kernel-Module geladen und konfiguriert.</para>
  </section>

  <section id="mISDN-1.2-Asterisk-Konfiguration">
    <title>Asterisk-Konfiguration (misdn.conf)</title>

    <para>Wie alle Asterisk-Konfigurationsdateien befindet sich auch die
    <filename>misdn.conf</filename> im Verzeichnis
    <filename>/etc/asterisk/misdn.conf</filename>. Hier definiert man, welche
    Ports in welchen Gruppen sind und welche Parameter für diese Gruppen
    gelten. Die <filename>misdn.conf</filename> ist in 3 Sektionstypen
    gegliedert, die durch eckige Klammern gekennzeichnet sind. Dies sind die
    Abschnitte <code>[general]</code>, <code>[default]</code> und die
    Gruppen-Sektionen, die der User frei benennen kann. Die
    <code>[general]</code>-Sektion beinhaltet Konfigurationselemente, die
    unabhängig von den Port-Gruppen sind, wie etwa das Debuglevel oder ob das
    Hardware-Bridging generell genutzt werden soll. Die
    <code>[default]</code>-Sektion enthält alle Parameter, die auch eine
    Portgruppe enthalten kann. Falls ein Parameter in der Portgruppe fehlt,
    wird der entsprechende aus der default-Sektion genommen. Die Portgruppen
    selbst dienen einerseits dazu, dieselben Parameter für mehrere Ports zu
    konfigurieren, andererseits kann der Name der Portgruppe zum Wählen
    benutzt werden. Eine einfache <filename>misdn.conf</filename> für das oben
    angeführte Beispiel sieht wie folgt aus:</para>

    <programlisting>[general]
bridging=yes

[default]
echocancel=256
txgain=-1

[AnlagenAnschluss]
ports=1
context=isdn_in
msns=*

[MehrgeräteAnschluss]
ports=2
context=isdn_in
msns=*

[Anlage]
ports=3
context=anlage
msns=*

[Telefon]
ports=4
context=telefon
msns=*</programlisting>

    <para>Mit dieser <filename>misdn.conf</filename> können Sie in der
    <filename>extensions.conf</filename> die folgende Zeile benutzen, um
    beispielsweise ein Gespräch auf den Anlagenanschluss zu routen:
    <programlisting>exten =&gt; _0X.,1,Dial(mISDN/g:AnlagenAnschluss/${EXTEN:1})</programlisting>Beachten
    Sie, wie der Sektionsname <code>AnlagenAnschluss</code> beim Wählen
    benutzt wird. Bei diesem Beispiel wird mit einer führenden 0
    (<code>_0X.</code>) rausgewählt, die durch <code>${EXTEN:1}</code> wieder
    abgeschnitten wird.</para>

    <para>Eine Gruppe macht natürlich erst richtig mit mehreren Ports Sinn.
    Wir könnten das obige Beispiel auch so abändern, dass der Anlagen- und
    Mehrgeräteanschluss in derselben Gruppe sind: <programlisting>[Amt]
ports=1,2
context=vomAmt
msns=*</programlisting>Gespräche, die nun von diesen beiden Ports
    hereinkommen, werden in der <filename>extensions.conf</filename> in den
    Kontext <code>vomAmt</code> geleitet. Hingegen können Sie beim Dial die
    Gruppe <code>Amt</code> benutzen: <code>Dial(mISDN/g:Amt/..)</code>. Der
    Mechanismus funktioniert so, dass chan_misdn zunächst prüft, ob der erste
    Port eine aktive Schicht 1 hat. Dann wird geprüft, ob auf diesem Port ein
    freier Kanal existiert. Sind beide Bedingungen erfüllt, wird auf diesem
    Kanal herausgewählt, andernfalls wird der nächste Kanal/Port
    verwendet.</para>
  </section>

  <section id="mISDN-1.2-Support">
    <title>Zusätzliche Informationen und Support</title>

    <para>Auf der Homepage <ulink
    url="http://www.misdn.org"><citetitle>http://www.misdn.org</citetitle></ulink>
    befinden sich einige Informationen zu den aktuellen Versionen von mISDN.
    ISDN-Karten, die den NT Mode unterstützen, sowie zusätzliche Informationen
    kann man auf der Seite: <ulink
    url="http://isdn.jolly.de/cards.html"><citetitle>http://isdn.jolly.de/cards.html</citetitle></ulink>
    erhalten. Weiterhin gibt es ein deutsches Forum zu mISDN auf <ulink
    url="http://www.ip-phone-forum.de/forumdisplay.php?f=521"><citetitle>http://www.ip-phone-forum.de/forumdisplay.php?f=521</citetitle></ulink>.
    Schließlich finden Sie auf dem VoIP-Info-Wiki hilfreiche Informationen
    <ulink
    url="http://www.voip-info.org/wiki/view/chan_mISDN"><citetitle>http://www.voip-info.org/wiki/view/chan_mISDN</citetitle></ulink>.</para>
  </section>
</section>