<?xml version="1.0" encoding="ISO-8859-1"?>
<section id="isdn-1.2-misdn-allgemein" lang="de" revision="$Revision: 1.2 $">
  <!--% Copyright (c) 2007
% - Wintermeyer <sw@amooma.de>
% - Christian Richter <cr@beronet.com>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation;
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title>mISDN allgemein</title>

  <para>Diese allgemeine Installationsanleitung bezieht sich allgemein auf
  alle ISDN-Karten, die vom mISDN-Projekt unterstützt werden.</para>

  <section id="mISDN-1.2-installation-asterisk">
    <title>Installation</title>

    <para>Diese Installationsanleitung setzt ein frisch installiertes Debian
    GNU/Linux 3.1 (a.k.a sarge) voraus. Ein ISO-Image für eine entsprechende
    i386er Debian Linux-Installation befindet sich unter <ulink
    url="http://cdimage.debian.org/debian-cd/3.1_r4/i386/iso-cd/debian-31r4-i386-netinst.iso"><citetitle>http://cdimage.debian.org/debian-cd/3.1_r4/i386/iso-cd/debian-31r4-i386-netinst.iso</citetitle></ulink>.
    Eine Debian GNU/Linux-Installationsanleitung steht unter <ulink
    url="http://www.debian.org/releases/stable/i386/"><citetitle>http://www.debian.org/releases/stable/i386/</citetitle></ulink>
    und ein allgemeines Anwenderhandbuch unter <ulink
    url="http://debiananwenderhandbuch.de/"><citetitle>http://debiananwenderhandbuch.de.</citetitle></ulink></para>

    <para><emphasis>Nach erfolgreicher Installation des Debian Linux-Systems
    melden Sie sich als Benutzer root in das System an und führen Sie die hier
    nachfolgend angegebenen Befehle aus. Bitte achten Sie darauf, keinen
    Schritt auszulassen und die Schritte als Benutzer root
    durchzuführen.</emphasis></para>

    <para>Als erstes stellen Sie mit einem <command>apt-get update</command>
    sicher, dass <code>apt-get</code> alle aktuellen Paketlisten zur Verfügung
    hat:<screen>debian:~# apt-get updateyyy123yyysw
OK   http://ftp.de.debian.org stable/main Packagesyyy123yyysw
OK   http://ftp.de.debian.org stable/main Releaseyyy123yyysw
OK   http://security.debian.org stable/updates/main Packagesyyy123yyysw
OK   http://security.debian.org stable/updates/main Releaseyyy123yyysw
OK   http://security.debian.org stable/updates/contrib Packagesyyy123yyysw
OK   http://security.debian.org stable/updates/contrib Releaseyyy123yyysw
OK   http://ftp.de.debian.org stable/main Sourcesyyy123yyysw
OK   http://ftp.de.debian.org stable/main Releaseyyy123yyysw
Paketlisten werden gelesen... Fertigyyy123yyysw
debian:~#yyy123yyysw</screen></para>

    <para>Um sicherzugehen, dass alle Pakete auf dem neuesten Stand sind,
    führen Sie zur Sicherheit noch ein <command>apt-get -y upgrade</command>
    aus:<screen>debian:~# apt-get -y upgradeyyy123yyysw
Paketlisten werden gelesen... Fertigyyy123yyysw
Abhängigkeitsbaum wird aufgebaut... Fertigyyy123yyysw
0 aktualisiert, 0 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.yyy123yyysw</screen></para>

    <para>Jetzt müssen Sie mit <command>apt-get -y install openssl zlibc
    libkrb5-dev libncurses5-dev libssl-dev zlib1g-dev</command> noch ein paar
    Pakete nachinstallieren, damit das spätere Kompilieren von Asterisk
    erfolgreich durchgeführt werden kann:</para>

    <screen>debian:~# apt-get -y install openssl zlibc libkrb5-dev libncurses5-dev libssl-dev zlib1g-devyyy123yyysw
Paketlisten werden gelesen... Fertigyyy123yyysw
Abhängigkeitsbaum wird aufgebaut... Fertigyyy123yyysw
Die folgenden zusätzlichen Pakete werden installiert:yyy123yyysw
  comerr-dev libkadm55yyy123yyysw
Vorgeschlagene Pakete:yyy123yyysw
  doc-base krb5-doc ca-certificatesyyy123yyysw
Die folgenden NEUEN Pakete werden installiert:yyy123yyysw
  comerr-dev libkadm55 libkrb5-dev libncurses5-dev libssl-dev opensslyyy123yyysw
  zlib1g-dev zlibcyyy123yyysw
0 aktualisiert, 8 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.yyy123yyysw
Es müssen 6025kB Archive geholt werden.yyy123yyysw
Nach dem Auspacken werden 18,8MB Plattenplatz zusätzlich benutzt.yyy123yyysw
Hole:1 http://ftp.de.debian.org stable/main libkadm55 1.3.6-2sarge3 [165kB]yyy123yyysw
Hole:2 http://ftp.de.debian.org stable/main libncurses5-dev 5.4-4 [1038kB]yyy123yyysw
Hole:3 http://ftp.de.debian.org stable/main libssl-dev 0.9.7e-3sarge4 [2555kB] yyy123yyysw
Hole:4 http://ftp.de.debian.org stable/main openssl 0.9.7e-3sarge4 [906kB]     yyy123yyysw
Hole:5 http://ftp.de.debian.org stable/main zlib1g-dev 1:1.2.2-4.sarge.2 [488kB]yyy123yyysw
Hole:6 http://ftp.de.debian.org stable/main zlibc 0.9j-7 [245kB]               yyy123yyysw
Hole:7 http://ftp.de.debian.org stable/main comerr-dev 2.1-1.37-2sarge1 [53,0kB]yyy123yyysw
Hole:8 http://ftp.de.debian.org stable/main libkrb5-dev 1.3.6-2sarge3 [574kB]  yyy123yyysw
Es wurden 6025kB in 57s geholt (104kB/s)                                       yyy123yyysw
Wähle vormals abgewähltes Paket libkadm55.yyy123yyysw
(Lese Datenbank ... 32512 Dateien und Verzeichnisse sind derzeit installiert.)yyy123yyysw
Entpacke libkadm55 (aus .../libkadm55_1.3.6-2sarge3_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket libncurses5-dev.yyy123yyysw
Entpacke libncurses5-dev (aus .../libncurses5-dev_5.4-4_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket libssl-dev.yyy123yyysw
Entpacke libssl-dev (aus .../libssl-dev_0.9.7e-3sarge4_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket openssl.yyy123yyysw
Entpacke openssl (aus .../openssl_0.9.7e-3sarge4_i386.deb) ...yyy123yyysw
Creating directory /etc/sslyyy123yyysw
Wähle vormals abgewähltes Paket zlib1g-dev.yyy123yyysw
Entpacke zlib1g-dev (aus .../zlib1g-dev_1%3a1.2.2-4.sarge.2_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket zlibc.yyy123yyysw
Entpacke zlibc (aus .../archives/zlibc_0.9j-7_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket comerr-dev.yyy123yyysw
Entpacke comerr-dev (aus .../comerr-dev_2.1-1.37-2sarge1_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket libkrb5-dev.yyy123yyysw
Entpacke libkrb5-dev (aus .../libkrb5-dev_1.3.6-2sarge3_i386.deb) ...yyy123yyysw
Richte libkadm55 ein (1.3.6-2sarge3) ...yyy123yyysw
yyy123yyysw
Richte libncurses5-dev ein (5.4-4) ...yyy123yyysw
Richte libssl-dev ein (0.9.7e-3sarge4) ...yyy123yyysw
yyy123yyysw
Richte openssl ein (0.9.7e-3sarge4) ...yyy123yyysw
yyy123yyysw
Richte zlib1g-dev ein (1.2.2-4.sarge.2) ...yyy123yyysw
Richte zlibc ein (0.9j-7) ...yyy123yyysw
yyy123yyysw
Richte comerr-dev ein (2.1-1.37-2sarge1) ...yyy123yyysw
yyy123yyysw
Richte libkrb5-dev ein (1.3.6-2sarge3) ...yyy123yyysw
debian:~#yyy123yyysw</screen>

    <para>Asterisk wird aber erst nach mISDN installiert werden. mISDN lässt
    sich momentan ausschliesslich mit einen 2.6.x Kernel kompilieren, um
    diesen zu installieren suchen sie mit <command>apt-cache search
    kernel-image-2.6.8 | grep kernel-image</command> den zu ihrer Architektur
    passenden Kernel:<screen>debian:~# apt-cache search kernel-image-2.6.8 | grep kernel-imageyyy123yyysw
kernel-image-2.6.8-3-386 - Linux kernel image for version 2.6.8 on 386.yyy123yyysw
kernel-image-2.6.8-11-amd64-generic - Linux kernel image for version 2.6.8 on generic x86_64 systemsyyy123yyysw
kernel-image-2.6.8-11-amd64-k8 - Linux kernel image for version 2.6.8 on AMD64 systemsyyy123yyysw
kernel-image-2.6.8-11-amd64-k8-smp - Linux kernel image for version 2.6.8 on AMD64 SMP systemsyyy123yyysw
kernel-image-2.6.8-11-em64t-p4 - Linux kernel image for version 2.6.8 on Intel EM64T systemsyyy123yyysw
kernel-image-2.6.8-11-em64t-p4-smp - Linux kernel image for version 2.6.8 on Intel EM64T SMP systemsyyy123yyysw
kernel-image-2.6.8-12-amd64-generic - Linux kernel image for version 2.6.8 on generic x86_64 systemsyyy123yyysw
kernel-image-2.6.8-12-amd64-k8 - Linux kernel image for version 2.6.8 on AMD64 systemsyyy123yyysw
kernel-image-2.6.8-12-amd64-k8-smp - Linux kernel image for version 2.6.8 on AMD64 SMP systemsyyy123yyysw
kernel-image-2.6.8-12-em64t-p4 - Linux kernel image for version 2.6.8 on Intel EM64T systemsyyy123yyysw
kernel-image-2.6.8-12-em64t-p4-smp - Linux kernel image for version 2.6.8 on Intel EM64T SMP systemsyyy123yyysw
kernel-image-2.6.8-2-386 - Linux kernel image for version 2.6.8 on 386.yyy123yyysw
kernel-image-2.6.8-2-686 - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4.yyy123yyysw
kernel-image-2.6.8-2-686-smp - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4 SMP.yyy123yyysw
kernel-image-2.6.8-2-k7 - Linux kernel image for version 2.6.8 on AMD K7.yyy123yyysw
kernel-image-2.6.8-2-k7-smp - Linux kernel image for version 2.6.8 on AMD K7 SMP.yyy123yyysw
kernel-image-2.6.8-3-686 - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4.yyy123yyysw
kernel-image-2.6.8-3-686-smp - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4 SMP.yyy123yyysw
kernel-image-2.6.8-3-k7 - Linux kernel image for version 2.6.8 on AMD K7.yyy123yyysw
kernel-image-2.6.8-3-k7-smp - Linux kernel image for version 2.6.8 on AMD K7 SMP.yyy123yyysw
debian:~# yyy123yyysw</screen>In diesem Beispiel entscheiden wir uns für den Kernel
    <parameter>kernel-image-2.6.8-2-686</parameter> und installieren diesen
    mit <command>apt-get -y install
    kernel-image-2.6.8-2-686</command>:<screen>debian:~# apt-get -y install kernel-image-2.6.8-2-686yyy123yyysw
Paketlisten werden gelesen... Fertigyyy123yyysw
Abhängigkeitsbaum wird aufgebaut... Fertigyyy123yyysw
Vorgeschlagene Pakete:yyy123yyysw
  lilo kernel-doc-2.6.8 kernel-source-2.6.8yyy123yyysw
Die folgenden NEUEN Pakete werden installiert:yyy123yyysw
  kernel-image-2.6.8-2-686yyy123yyysw
0 aktualisiert, 1 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.yyy123yyysw
Es müssen 15,5MB Archive geholt werden.yyy123yyysw
Nach dem Auspacken werden 45,2MB Plattenplatz zusätzlich benutzt.yyy123yyysw
Hole:1 http://ftp.de.debian.org stable/main kernel-image-2.6.8-2-686 2.6.8-16sarge1 [15,5MB]yyy123yyysw
Es wurden 15,5MB in 41s geholt (375kB/s)                                       yyy123yyysw
Wähle vormals abgewähltes Paket kernel-image-2.6.8-2-686.yyy123yyysw
(Lese Datenbank ... 21874 Dateien und Verzeichnisse sind derzeit installiert.)yyy123yyysw
Entpacke kernel-image-2.6.8-2-686 (aus .../kernel-image-2.6.8-2-686_2.6.8-16sarge1_i386.deb) ...yyy123yyysw
Richte kernel-image-2.6.8-2-686 ein (2.6.8-16sarge1) ...yyy123yyysw
Searching for GRUB installation directory ... found: /boot/grub .yyy123yyysw
Testing for an existing GRUB menu.list file... found: /boot/grub/menu.lst .yyy123yyysw
Searching for splash image... none found, skipping...yyy123yyysw
Found kernel: /boot/vmlinuz-2.6.8-2-686yyy123yyysw
Found kernel: /boot/vmlinuz-2.4.27-3-386yyy123yyysw
Updating /boot/grub/menu.lst ... doneyyy123yyysw
yyy123yyysw
yyy123yyysw
debian:~# yyy123yyysw</screen>Danach booten wir den Rechner mit <command>shutdown -r
    now</command> und können nach dem Booten mit <command>uname -a</command>
    kontrollieren, ob mit dem richtigen Kernel gebootet wurde:<screen>debian:~# uname -ayyy123yyysw
Linux debian 2.6.8-2-686 #1 Tue Aug 16 13:22:48 UTC 2005 i686 GNU/Linuxyyy123yyysw
debian:~# yyy123yyysw</screen>Zum Kompilieren benötigen wir jetzt noch die zum Kernel
    passenden Header-Dateien. Diese können mit <command>apt-get -y install
    kernel-headers-`uname -r`</command> nachinstalliert werden:<screen>debian:~# apt-get -y install kernel-headers-`uname -r`yyy123yyysw
Paketlisten werden gelesen... Fertigyyy123yyysw
Abhängigkeitsbaum wird aufgebaut... Fertigyyy123yyysw
Die folgenden zusätzlichen Pakete werden installiert:yyy123yyysw
  kernel-headers-2.6.8-2 kernel-kbuild-2.6-3yyy123yyysw
Die folgenden NEUEN Pakete werden installiert:yyy123yyysw
  kernel-headers-2.6.8-2 kernel-headers-2.6.8-2-686 kernel-kbuild-2.6-3yyy123yyysw
0 aktualisiert, 3 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.yyy123yyysw
Es müssen 3395kB Archive geholt werden.yyy123yyysw
Nach dem Auspacken werden 42,6MB Plattenplatz zusätzlich benutzt.yyy123yyysw
Hole:1 http://ftp.de.debian.org stable/main kernel-kbuild-2.6-3 2.6.8-2 [363kB]yyy123yyysw
Hole:2 http://ftp.de.debian.org stable/main kernel-headers-2.6.8-2 2.6.8-16sarge1 [2777kB]yyy123yyysw
Hole:3 http://ftp.de.debian.org stable/main kernel-headers-2.6.8-2-686 2.6.8-16sarge1 [255kB]yyy123yyysw
Es wurden 3395kB in 35s geholt (96,4kB/s)                                      yyy123yyysw
Wähle vormals abgewähltes Paket kernel-kbuild-2.6-3.yyy123yyysw
(Lese Datenbank ... 23577 Dateien und Verzeichnisse sind derzeit installiert.)yyy123yyysw
Entpacke kernel-kbuild-2.6-3 (aus .../kernel-kbuild-2.6-3_2.6.8-2_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket kernel-headers-2.6.8-2.yyy123yyysw
Entpacke kernel-headers-2.6.8-2 (aus .../kernel-headers-2.6.8-2_2.6.8-16sarge1_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket kernel-headers-2.6.8-2-686.yyy123yyysw
Entpacke kernel-headers-2.6.8-2-686 (aus .../kernel-headers-2.6.8-2-686_2.6.8-16sarge1_i386.deb) ...yyy123yyysw
Richte kernel-kbuild-2.6-3 ein (2.6.8-2) ...yyy123yyysw
Richte kernel-headers-2.6.8-2 ein (2.6.8-16sarge1) ...yyy123yyysw
yyy123yyysw
Richte kernel-headers-2.6.8-2-686 ein (2.6.8-16sarge1) ...yyy123yyysw
debian:~# yyy123yyysw</screen></para>

    <para>Nun kann mit der eigentlichen Installation von mISDN begonnen
    werden.</para>

    <para>Wechseln Sie mit <command>cd /usr/src</command> in das Verzeichnis
    <filename>/usr/src</filename> und downloaden Sie mit <command>wget
    http://www.misdn.org/downloads/mISDN.tar.gz</command> und <command>wget
    http://www.misdn.org/downloads/mISDNuser.tar.gz</command> die mISDN und
    mISDNuser Quellen:<screen>debian:~# cd /usr/srcyyy123yyysw
debian:/usr/src# wget http://www.misdn.org/downloads/mISDN.tar.gzyyy123yyysw
--17:27:13--  http://www.misdn.org/downloads/mISDN.tar.gzyyy123yyysw
           =&gt; `mISDN.tar.gz'yyy123yyysw
Auflösen des Hostnamen »www.misdn.org«.... 80.244.243.34yyy123yyysw
Verbindungsaufbau zu www.misdn.org[80.244.243.34]:80... verbunden.yyy123yyysw
HTTP Anforderung gesendet, warte auf Antwort... 200 OKyyy123yyysw
Länge: 762,995 [application/x-tar]yyy123yyysw
yyy123yyysw
100%[====================================&gt;] 762,995       86.55K/s    ETA 00:00yyy123yyysw
yyy123yyysw
17:27:21 (101.81 KB/s) - »mISDN.tar.gz« gespeichert [762995/762995]yyy123yyysw
yyy123yyysw
debian:/usr/src# wget http://www.misdn.org/downloads/mISDNuser.tar.gzyyy123yyysw
--17:27:55--  http://www.misdn.org/downloads/mISDNuser.tar.gzyyy123yyysw
           =&gt; `mISDNuser.tar.gz'yyy123yyysw
Auflösen des Hostnamen »www.misdn.org«.... 80.244.243.34yyy123yyysw
Verbindungsaufbau zu www.misdn.org[80.244.243.34]:80... verbunden.yyy123yyysw
HTTP Anforderung gesendet, warte auf Antwort... 200 OKyyy123yyysw
Länge: 549,899 [application/x-tar]yyy123yyysw
yyy123yyysw
100%[====================================&gt;] 549,899      101.91K/s    ETA 00:00yyy123yyysw
yyy123yyysw
17:28:01 (99.57 KB/s) - »mISDNuser.tar.gz« gespeichert [549899/549899]yyy123yyysw
yyy123yyysw
debian:/usr/src#yyy123yyysw</screen>Jetzt die Pakete mit <command>tar xvzf
    mISDN.tar.gz</command> und <command>tar xvzf mISDNuser.tar.gz</command>
    entpacken:<screen>debian:/usr/src# tar xvzf mISDN.tar.gz yyy123yyysw
mISDN-1_0_4/yyy123yyysw
mISDN-1_0_4/add.configyyy123yyysw
mISDN-1_0_4/CVS/yyy123yyysw
mISDN-1_0_4/CVS/Rootyyy123yyysw
mISDN-1_0_4/CVS/Repositoryyyy123yyysw
mISDN-1_0_4/CVS/Entriesyyy123yyysw
mISDN-1_0_4/drivers/yyy123yyysw
mISDN-1_0_4/drivers/CVS/yyy123yyysw
mISDN-1_0_4/drivers/CVS/Rootyyy123yyysw
mISDN-1_0_4/drivers/CVS/Repositoryyyy123yyysw
mISDN-1_0_4/drivers/CVS/Entriesyyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
mISDN-1_0_4/km_mISDN.specyyy123yyysw
mISDN-1_0_4/Makefileyyy123yyysw
mISDN-1_0_4/Makefile.moduleyyy123yyysw
mISDN-1_0_4/Makefile.standaloneyyy123yyysw
mISDN-1_0_4/misdn-inityyy123yyysw
mISDN-1_0_4/mISDN.modprobe.dyyy123yyysw
mISDN-1_0_4/README.misdn-inityyy123yyysw
mISDN-1_0_4/Rules.make.extyyy123yyysw
mISDN-1_0_4/std2kernyyy123yyysw
mISDN-1_0_4/stddiffyyy123yyysw
mISDN-1_0_4/VERSIONyyy123yyysw
debian:/usr/src# tar xvzf mISDNuser.tar.gz yyy123yyysw
mISDNuser-1_0_3/yyy123yyysw
mISDNuser-1_0_3/COPYING.LIByyy123yyysw
mISDNuser-1_0_3/CVS/yyy123yyysw
mISDNuser-1_0_3/CVS/Rootyyy123yyysw
mISDNuser-1_0_3/CVS/Repositoryyyy123yyysw
mISDNuser-1_0_3/CVS/Entriesyyy123yyysw
mISDNuser-1_0_3/example/yyy123yyysw
mISDNuser-1_0_3/example/CVS/yyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
mISDNuser-1_0_3/voip/example/rec_ctrl.sampleyyy123yyysw
mISDNuser-1_0_3/voip/voip_isdn.ceyyy123yyysw
mISDNuser-1_0_3/voip/voip_isdn.cyyy123yyysw
mISDNuser-1_0_3/voip/voip_appl.ceyyy123yyysw
mISDNuser-1_0_3/voip/voip_appl.cyyy123yyysw
mISDNuser-1_0_3/voip/voip_isdn_app.ceyyy123yyysw
mISDNuser-1_0_3/voip/voip_isdn_app.cyyy123yyysw
debian:/usr/src# yyy123yyysw</screen></para>

    <para>Nach einem <command>cd mISDN-1_0_4</command> kann mit <command>make
    install</command> das entsprechende Paket kompiliert werden:</para>

    <screen>debian:/usr/src# cd mISDN-1_0_4 yyy123yyysw
debian:/usr/src/mISDN-1_0_4# make installyyy123yyysw
yyy123yyysw
Making mISDNyyy123yyysw
=============yyy123yyysw
yyy123yyysw
cp /usr/src/mISDN-1_0_4/drivers/isdn/hardware/mISDN/Makefile.v2.6 /usr/src/mISDN-1_0_4/drivers/isdn/hardware/mISDN/Makefileyyy123yyysw
export MINCLUDES=/usr/src/mISDN-1_0_4/include ; make -C /lib/modules/2.6.8-2-686/build SUBDIRS=/usr/src/mISDN-1_0_4/drivers/isdn/hardware/mISDN modules CONFIG_MISDN_DRV=m  CONFIG_MISDN_DSP=m  CONFIG_MISDN_HFCMULTI=m  CONFIG_MISDN_HFCPCI=m CONFIG_MISDN_HFCUSB=m CONFIG_MISDN_XHFC=m CONFIG_MISDN_HFCMINI=m CONFIG_MISDN_W6692=m CONFIG_MISDN_SPEEDFAX=m CONFIG_MISDN_AVM_FRITZ=m CONFIG_MISDN_NETJET=m  yyy123yyysw
make[1]: Entering directory `/usr/src/kernel-headers-2.6.8-2-686'yyy123yyysw
  CC [M]  /usr/src/mISDN-1_0_4/drivers/isdn/hardware/mISDN/avm_fritz.oyyy123yyysw
  CC [M]  /usr/src/mISDN-1_0_4/drivers/isdn/hardware/mISDN/hfc_multi.oyyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
mkdir -p //etc/modprobe.dyyy123yyysw
cp mISDN.modprobe.d //etc/modprobe.d/mISDNyyy123yyysw
mkdir -p //etc/modules.dyyy123yyysw
cp mISDN.modprobe.d //etc/modules.d/mISDNyyy123yyysw
/sbin/depmod yyy123yyysw
/sbin/update-modulesyyy123yyysw
debian:/usr/src/mISDN-1_0_4# yyy123yyysw</screen>

    <para>Dann mit <command>cd ../mISDNuser-1_0_3</command> in das
    mISDNuser-Verzeichnis wechseln und dort wieder mit <command>make
    install</command> kompilieren:</para>

    <screen>debian:/usr/src/mISDN-1_0_4# cd ../mISDNuser-1_0_3 yyy123yyysw
debian:/usr/src/mISDNuser-1_0_3# make installyyy123yyysw
mkdir -p //usr/bin/yyy123yyysw
mkdir -p //usr/include/mISDNuser/yyy123yyysw
mkdir -p ///usr/libyyy123yyysw
make TARGET=all subdirsyyy123yyysw
make[1]: Entering directory `/usr/src/mISDNuser-1_0_3'yyy123yyysw
set -e; for i in lib example i4lnet tenovis voip suppserv ; do make -C $i all; doneyyy123yyysw
make[2]: Entering directory `/usr/src/mISDNuser-1_0_3/lib'yyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
make[2]: Leaving directory `/usr/src/mISDNuser-1_0_3/tenovis'yyy123yyysw
make[2]: Entering directory `/usr/src/mISDNuser-1_0_3/voip'yyy123yyysw
for i in voipisdn ; do \yyy123yyysw
        install -m 755 $i //usr/bin ;\yyy123yyysw
doneyyy123yyysw
make[2]: Leaving directory `/usr/src/mISDNuser-1_0_3/voip'yyy123yyysw
make[2]: Entering directory `/usr/src/mISDNuser-1_0_3/suppserv'yyy123yyysw
install -m 644 libsuppserv.a //usr/libyyy123yyysw
install -m 644 libsuppserv_pic.a //usr/libyyy123yyysw
install -m 644 libsuppserv.so //usr/libyyy123yyysw
cp *.h //usr/include/mISDNuser/yyy123yyysw
make[2]: Leaving directory `/usr/src/mISDNuser-1_0_3/suppserv'yyy123yyysw
make[1]: Leaving directory `/usr/src/mISDNuser-1_0_3'yyy123yyysw
cp include/*.h //usr/include/mISDNuser/yyy123yyysw
debian:/usr/src/mISDNuser-1_0_3#yyy123yyysw</screen>

    <para>Auf der Asterisk-Homepage <ulink
    url="http://www.asterisk.org/"><citetitle>http://www.asterisk.org/</citetitle></ulink>
    finden Sie die notwendigen Quellen, um Asterisk zu kompilieren. Nehmen Sie
    bitte eine <emphasis>stabile</emphasis> und keine Entwickler-Version und
    laden Sie diese mit <command>wget
    http://ftp.digium.com/pub/asterisk/asterisk-1.2-current.tar.gz</command>
    in das Verzeichnis <filename>/usr/src/</filename> herunter:</para>

    <screen>debian:/usr/src/mISDNuser-1_0_3# cd /usr/srcyyy123yyysw
debian:/usr/src# wget http://ftp.digium.com/pub/asterisk/asterisk-1.2-current.tar.gzyyy123yyysw
--18:30:46--  http://ftp.digium.com/pub/asterisk/asterisk-1.2-current.tar.gzyyy123yyysw
           =&gt; `asterisk-1.2-current.tar.gz'yyy123yyysw
Auflösen des Hostnamen »ftp.digium.com«.... 69.16.138.164yyy123yyysw
Verbindungsaufbau zu ftp.digium.com[69.16.138.164]:80... verbunden.yyy123yyysw
HTTP Anforderung gesendet, warte auf Antwort... 200 OKyyy123yyysw
Länge: 10,584,113 [application/x-gzip]yyy123yyysw
yyy123yyysw
100%[====================================&gt;] 10,584,113   224.71K/s    ETA 00:00yyy123yyysw
yyy123yyysw
18:31:36 (207.67 KB/s) - »asterisk-1.2-current.tar.gz« gespeichert [10584113/10584113]yyy123yyysw
</screen>

    <para>Die komprimierte Datei muss jetzt mit <command>tar xvzf
    asterisk-1.2-current.tar.gz</command> entpackt werden:<screen>debian:/usr/src# tar xvzf asterisk-1.2-current.tar.gz yyy123yyysw
asterisk-1.2.13/yyy123yyysw
asterisk-1.2.13/build_tools/yyy123yyysw
asterisk-1.2.13/build_tools/make_svn_branch_nameyyy123yyysw
asterisk-1.2.13/build_tools/mkdepyyy123yyysw
asterisk-1.2.13/build_tools/make_build_hyyy123yyysw
asterisk-1.2.13/build_tools/make_version_hyyy123yyysw
asterisk-1.2.13/build_tools/make_defaults_hyyy123yyysw
asterisk-1.2.13/aesopt.hyyy123yyysw
asterisk-1.2.13/utils.cyyy123yyysw
asterisk-1.2.13/keys/yyy123yyysw
[...]yyy123yyysw
asterisk-1.2.13/cli.cyyy123yyysw
asterisk-1.2.13/io.cyyy123yyysw
asterisk-1.2.13/ulaw.cyyy123yyysw
asterisk-1.2.13/logger.cyyy123yyysw
debian:/usr/src# yyy123yyysw</screen></para>

    <para>Die entpackten Dateien müssen jetzt kompiliert werden. Dies
    geschieht mit dem Befehl <command>make</command> im gerade entpackten
    Verzeichnis.<warning>
        <para>Bitte achten Sie darauf, dass die hier in der Dokumentation
        benutzte Version 1.2.13 vielleicht zum Zeitpunkt Ihrer Installation
        nicht mehr aktuell ist. Entsprechend werden sich die Verzeichnisnamen
        ändern.</para>
      </warning>Übrigens ist dies jetzt ein guter Moment, sich einen Kaffee
    oder Tee zu kochen. Der Kompiliervorgang kann je nach Rechenleistung des
    PCs wenige Minuten oder bis zu einer Stunde dauern.</para>

    <screen>debian:/usr/src# cd asterisk-1.2.13yyy123yyysw
debian:/usr/src/asterisk-1.2.13# makeyyy123yyysw
if cmp -s .cleancount .lastclean ; then echo ; else \yyy123yyysw
        make clean; cp -f .cleancount .lastclean;\yyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
make[1]: Nothing to be done for `all'.yyy123yyysw
make[1]: Leaving directory `/usr/src/asterisk-1.2.13/stdtime'yyy123yyysw
 +--------- Asterisk Build Complete ---------+yyy123yyysw
 + Asterisk has successfully been built, but +yyy123yyysw
 + cannot be run before being installed by   +yyy123yyysw
 + running:                                  +yyy123yyysw
 +                                           +yyy123yyysw
 +               make install                +yyy123yyysw
 +-------------------------------------------+yyy123yyysw</screen>

    <para>Die Software ist jetzt kompiliert und muss nur noch mit
    <command>make install</command> installiert (sprich an die vorgesehenen
    Stellen im Dateisystem kopiert) werden:</para>

    <screen>debian:/usr/src/asterisk-1.2.13# make installyyy123yyysw
build_tools/make_version_h &gt; include/asterisk/version.h.tmpyyy123yyysw
if cmp -s include/asterisk/version.h.tmp include/asterisk/version.h ; yyy123yyysw
then echo;yyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
 +---- Asterisk Installation Complete -------+yyy123yyysw
 +                                           +yyy123yyysw
 +    YOU MUST READ THE SECURITY DOCUMENT    +yyy123yyysw
 +                                           +yyy123yyysw
 + Asterisk has successfully been installed. +yyy123yyysw
 + If you would like to install the sample   +yyy123yyysw
 + configuration files (overwriting any      +yyy123yyysw
 + existing config files), run:              +yyy123yyysw
 +                                           +yyy123yyysw
 +               make samples                +yyy123yyysw
 +                                           +yyy123yyysw
 +-----------------  or ---------------------+yyy123yyysw
 +                                           +yyy123yyysw
 + You can go ahead and install the asterisk +yyy123yyysw
 + program documentation now or later run:   +yyy123yyysw
 +                                           +yyy123yyysw
 +              make progdocs                +yyy123yyysw
 +                                           +yyy123yyysw
 + **Note** This requires that you have      +yyy123yyysw
 + doxygen installed on your local system    +yyy123yyysw
 +-------------------------------------------+yyy123yyysw</screen>

    <para>Geschafft! Die soeben kompilierten Programmdateien sind jetzt auf
    dem System installiert. Allerdings finden wir im
    Asterisk-Konfigurationsverzeichnis <filename>/etc/asterisk/</filename>
    noch gähnende Leere vor. In diesem Verzeichnis liegen die
    Konfigurationsdateien von Asterisk und da wir nicht von Null beginnen
    möchten, lassen wir uns die Standarddateien erstellen. Dies erreichen wir
    mit <command>make samples</command>:</para>

    <screen>debian:/usr/src/asterisk-1.2.13# make samplesyyy123yyysw
build_tools/make_version_h &gt; include/asterisk/version.h.tmpyyy123yyysw
if cmp -s include/asterisk/version.h.tmp include/asterisk/version.h ; yyy123yyysw
then echo;yyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
doneyyy123yyysw</screen>

    <para>Fertig! Asterisk ist auf Ihrem System installiert. Mit dem Befehl
    <command>asterisk -V</command> können Sie die installierte Version
    herausfinden (bitte achten Sie auf das großgeschriebene V):<screen>debian:/usr/src/asterisk-1.2.13# asterisk -Vyyy123yyysw
Asterisk 1.2.13yyy123yyysw</screen></para>
  </section>

  <section id="mISDN-1.2-Konfiguration">
    <title>Konfiguration der mISDN Treiber</title>

    <para>Zunächst sollten sie sich mit dem Skript "misdn-init" vertraut
    machen. Dieses scant ihr System nach installierter Hardware, erstellt
    automatisch eine Standardkonfiguration und lädt die Kernel Module. Führen
    sie einfach <command>misdn-init</command> aus um die möglichen Parameter
    zu erhalten.</para>

    <para>Um zu sehen welche mISDN-kompatiblen Karten im System installiert
    sind führen sie <command>misdn-init scan</command> aus.</para>

    <para>Die Konfiguration der Kernel Module erfolgt über die Datei
    <filename>/etc/misdn-init.conf</filename>. Um diese initial zu erzeugen
    führen sie einfach das Kommando: <command>misdn-init config</command> aus.
    Nun editieren sie die Datei mit ihrem Lieblingseditor. Angenommen sie
    haben eine BN4S0 Karte der Firma <ulink
    url="http://www.beronet.de"><citetitle>beroNet</citetitle></ulink> im
    System und sie wollen den Port 1 am Anlagenanschluss, den Port 2 am
    Mehrgeräteanschluss betreiben. Am Port 3 soll eine TK-Anlage betrieben
    werden und an Port 4 ein ISDN Telefon. Entsprechend muss die
    <filename>/etc/misdn-init.conf</filename> wie folgt aussehen:
    <programlisting>#Die Kartendefinition für die 4S0 Karteyyy123yyysw
card=1,0x4yyy123yyysw
yyy123yyysw
#der Anlagenanschluss:yyy123yyysw
te_ptp=1yyy123yyysw
yyy123yyysw
#der Mehrgeräteanschluss:yyy123yyysw
te_ptmp=2yyy123yyysw
yyy123yyysw
#die beiden NT Anschlüsse, Port 3 ist Punkt zu Punkt wegen der Anlage und Port 4 Mehrgeräte wegen dem ISDN Telefonyyy123yyysw
nt_ptp=3yyy123yyysw
nt_ptmp=4yyy123yyysw
yyy123yyysw
#wir beziehen die Synchronisation vom AMT am Anlagenanschluss.yyy123yyysw
option=1,master_clockyyy123yyysw</programlisting>Modifizieren sie diese Datei
    entsprechend ihrem Setup.</para>

    <para>Die Kernelmodule werden nun mit <command>misdn-init start</command>
    gestartet.</para>

    <para>Das mISDNuser Paket enthält ein nützliches Tool mit dem sie
    feststellen können ob die Module korrekt geladen worden sind. Führen sie
    <command>misdnportinfo</command> aus um die momentante Portkonfiguration
    zu erfahren. Die Ausgabe sieht etwa so aus: <screen>Port  1: TE-mode BRI S/T interface line (for phone lines)yyy123yyysw
 -&gt; Interface is Poin-To-Point.yyy123yyysw
 -&gt; Protocol: DSS1 (Euro ISDN)yyy123yyysw
 -&gt; childcnt: 2yyy123yyysw
--------yyy123yyysw
Port  2: TE-mode BRI S/T interface line (for phone lines)yyy123yyysw
 -&gt; Protocol: DSS1 (Euro ISDN)yyy123yyysw
 -&gt; childcnt: 2yyy123yyysw
--------yyy123yyysw
Port  3: NT-mode BRI S/T interface port (for phones)yyy123yyysw
 -&gt; Interface can be Poin-To-Point/Multipoint.yyy123yyysw
--------yyy123yyysw
Port  4: NT-mode BRI S/T interface port (for phones)yyy123yyysw
 -&gt; Interface can be Poin-To-Point/Multipoint.yyy123yyysw
--------yyy123yyysw
mISDN_close: fid(3) isize(131072) inbuf(0x804c060) irp(0x804c060) iend(0x804c060)yyy123yyysw</screen>Nun
    sind die Kernelmodule geladen und konfiguriert.</para>
  </section>

  <section id="mISDN-1.2-Asterisk-Konfiguration">
    <title>Asterisk Konfiguration (misdn.conf)</title>

    <para>Wie alle Asterisk-Konfigurationsdateien befindet sich auch die
    <filename>misdn.conf</filename> im Verzeichnis
    <filename>/etc/asterisk/misdn.conf</filename>. Hier definiert man, welche
    Ports in welchen Gruppen sind und welche Parameter für diese Gruppen
    gelten. Die <filename>misdn.conf</filename> ist in 3 Sektionstypen
    gegliedert die durch eckige Klammern gekennzeichnet sind. Dies sind die
    Abschnitte <code>[general]</code>, <code>[default]</code> und die
    Gruppen-Sektionen die der User frei benennen kann. Die
    <code>[general]</code>-Sektion beinhaltet Konfigurationselemente die
    unabhängig von den Port-Gruppen sind, wie etwa das debuglevel oder ob das
    Hardware-Bridging generell genutzt werden soll. Die
    <code>[default]</code>-Sektion enthält alle Parameter die auch eine
    Portgruppe enthalten kann. Falls ein Parameter in der Portgruppe fehlt
    wird der entsprechende aus der default Sektion genommen. Die Portgruppen
    selbst dienen einerseits dazu dieselben Parameter für mehrere Ports zu
    konfigurieren, andererseits kann der Name der Portgruppe zum Wählen
    benutzt werden. Eine einfache <filename>misdn.conf</filename> für das oben
    angeführte Beispiel sieht wie folgt aus:</para>

    <programlisting>[general]yyy123yyysw
bridging=yesyyy123yyysw
yyy123yyysw
[default]yyy123yyysw
echocancel=256yyy123yyysw
txgain=-1yyy123yyysw
yyy123yyysw
[AnlagenAnschluss]yyy123yyysw
ports=1yyy123yyysw
context=isdn_inyyy123yyysw
msns=*yyy123yyysw
yyy123yyysw
[MehrgeräteAnschluss]yyy123yyysw
ports=2yyy123yyysw
context=isdn_inyyy123yyysw
msns=*yyy123yyysw
yyy123yyysw
[Anlage]yyy123yyysw
ports=3yyy123yyysw
context=anlageyyy123yyysw
msns=*yyy123yyysw
yyy123yyysw
[Telefon]yyy123yyysw
ports=4yyy123yyysw
context=telefonyyy123yyysw
msns=*yyy123yyysw</programlisting>

    <para>Mit dieser <filename>misdn.conf</filename> können sie in der
    <filename>extensions.conf</filename> die folgende Zeile benutzen um
    beispielsweise ein Gespräch auf den Anlagen-Anschluss zu routen:
    <programlisting>exten =&gt; _0X.,1,Dial(mISDN/g:AnlagenAnschluss/${EXTEN:1})yyy123yyysw</programlisting>Beachten
    sie wie der Sektionsname <code>AnlagenAnschluss</code> beim Wählen benutzt
    wird. Bei diesem Beispiel wird mit einer führenden 0 (<code>_0X.</code>)
    rausgewählt, die durch <code>${EXTEN:1}</code> wieder abgeschnitten
    wird.</para>

    <para>Eine Gruppe macht natürlich erst richtig mit mehrern Ports Sinn. Wir
    könnten das obige Beispiel auch so abändern, dass der Anlagen- und
    Mehrgeräteanschluss in der selben Gruppe sind: <programlisting>[Amt]yyy123yyysw
ports=1,2yyy123yyysw
context=vomAmtyyy123yyysw
msns=*yyy123yyysw</programlisting>Gespräche die nun von diesen beiden Ports hereinkommen
    werden in der <filename>extensions.conf</filename> in den Kontext
    <code>vomAmt</code> geleitet. Hingegen können sie beim Dial die Gruppe
    <code>Amt</code> benutzen: <code>Dial(mISDN/g:Amt/..)</code>. Der
    Mechanismus funktioniert so, dass chan_misdn zunächst prüft, ob der erste
    Port eine aktive Schicht 1 hat. Dann wird geprüft, ob auf diesem Port ein
    freier Kanal existiert. Sind beide Bedingungen erfüllt, wird auf diesem
    Kanal rausgewählt, andernfalls wird der nächste Kanal/Port
    verwendet.</para>
  </section>

  <section id="mISDN-1.2-Support">
    <title>Zusätzliche Informationen und Support</title>

    <para>Auf der Homepage <ulink
    url="http://www.misdn.org"><citetitle>http://www.misdn.org</citetitle></ulink>
    befinden sich einige Informationen zu den aktuellen Versionen von mISDN.
    ISDN Karten die den NT Mode unterstützen sowie zusätzliche Informationen
    kann man auf der Seite: <ulink
    url="http://isdn.jolly.de/cards.html"><citetitle>http://isdn.jolly.de/cards.html</citetitle></ulink>
    erhalten. Weiterhin gibt es ein deutsches Forum zu mISDN auf <ulink
    url="http://www.ip-phone-forum.de/forumdisplay.php?f=521"><citetitle>http://www.ip-phone-forum.de/forumdisplay.php?f=521</citetitle></ulink>.
    Schließlich gibt es auf dem Voip-Info-Wiki hilfreiche Infos <ulink
    url="http://www.voip-info.org/wiki/view/chan_mISDN"><citetitle>http://www.voip-info.org/wiki/view/chan_mISDN</citetitle></ulink>.</para>
  </section>
</section>