<?xml version="1.0" encoding="ISO-8859-1"?>
<section id="installation-1.2-macosx" lang="de" revision="$Revision: 1.10 $">
  <!--% Copyright (c) 2006
% - Stefan Wintermeyer <sw@amooma.de>
% - Philipp Kempgen <pkempgen@uni-koblenz.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation;
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title>Installation Asterisk 1.2.x auf Mac OS X</title>

  <simpara>Asterisk kann auf dem Mac ab OS X 10.2.8 (<quote>Jaguar</quote>)
  zum Laufen gebracht werden. Empfehlenswert ist jedoch die aktuellste Version
  (z.Zt. 10.4.8, <quote>Tiger</quote>). Eine Installation auf Mac OS X Server
  ist ebenfalls möglich.</simpara>

  <note>
    <simpara>Unterstützung für PCI-Karten ist in Asterisk auf MacOS X bisher
    noch nicht möglich. Will man also seinen Server direkt mit dem
    öffentlichen Telefonnetz verbinden, muss man auf einen externen
    Gateway-Provider zurückgreifen. <footnote>
        <simpara>Eine Liste finden Sie auf <ulink
        url="http://www.voip-info.org/wiki/index.php?page=VoIP+Gateways">http://www.voip-info.org/wiki/index.php?page=VoIP+Gateways</ulink>
        oder auch <ulink
        url="http://www.voip-info.org/wiki/index.php?page=VoiP+Service+Providers">http://www.voip-info.org/wiki/index.php?page=VoiP+Service+Providers</ulink>.</simpara>
      </footnote>Das <quote>Unicall for MacOS X</quote>-Projekt arbeitet an
    einer Lösung.</simpara>

    <simpara>Asterisk ist für verschiedene Anwendungen (z.B.
    MeetMe-Konferenzen) zu Timing-Zwecken auf Zaptel-Hardware angewiesen. Als
    Alternative kann man den mitgelieferten <code>ztdummy</code>-Treiber
    kompilieren - was aber auf MacOS X kaum möglich sein dürfte.</simpara>

    <simpara>Es kann in Ausnahmefällen auch zu Problemen mit den Formaten WAV
    und WAV49 kommen (GSM funktioniert).</simpara>

    <simpara>Asterisk ist auf MacOS X insgesamt noch keine ganz
    <quote>runde</quote> Lösung. Zu Testzwecken oder für den Heimgebrauch zwar
    problemlos möglich, für größere Installationen aber (noch?) nicht
    empfehlenswert, wenn man auf die genannten Funktionen angewiesen
    ist.</simpara>
  </note>

  <simpara>Möglicherweise stehen bald unter <ulink
  url="http://www.mactelephony.net/">http://www.mactelephony.net/</ulink>
  (ehemals http://www.astmasters.net/, inzwischen nicht mehr erreichbar)
  <quote>Binaries</quote>, also vorkompilierte Pakete, zum Download bereit.
  <footnote>
      <simpara>Zur Drucklegung fand sich ein etwas älteres Binary auf <ulink
      url="http://www.dacrib.net/rant/">http://www.dacrib.net/rant/</ulink>
      (ggf. auf der Seite nach <quote>Asterisk</quote> suchen).</simpara>
    </footnote>Bezüglich der Aktualität der Software schadet es aber nicht,
  Asterisk neu zu kompilieren.</simpara>

  <para>Vorausetzung sind die bei MacOS X mitgelieferten oder im Internet von
  Apple verfügbaren Developer Tools (<quote>Xcode</quote>).<tip>
      <para>Falls Sie die DVD nicht greifbereit haben, können Sie Xcode auch
      von der Apple-Webseite <ulink
      url="http://developer.apple.com/tools/xcode/">http://developer.apple.com/tools/xcode/</ulink>
      downloaden.</para>
    </tip>Installieren Sie diese, falls Sie das noch nicht getan haben (dieses
  Paket legt das Verzeichnis <filename>/Developer</filename> auf Ihrer
  Festplatte an). Danach steht z.B. der Compiler <command>gcc</command> und
  weitere Tools zur Verfügung.</para>

  <para>Laden Sie von <ulink
  url="http://www.asterisk.org/">http://www.asterisk.org/</ulink> (oder direkt
  <ulink url="http://ftp.digium.com/pub/">http://ftp.digium.com/pub/</ulink>)
  die Asterisk-Quellen (Sources) in der gewünschten Version herunter. Sie
  können das im Browser machen oder auf der Kommandozeile (statt
  <code>http://</code> ist auch <code>ftp://</code> möglich):<screen><prompt>$  </prompt>curl -O http://ftp.digium.com/pub/asterisk/asterisk-1.2-current.tar.gz</screen></para>

  <para>Danach wird das komprimierte Archiv entpackt:<screen><prompt>$  </prompt>tar -xvzf asterisk-1.2-current.tar.gz
asterisk-1.2.13/
asterisk-1.2.13/build_tools/
asterisk-1.2.13/build_tools/make_svn_branch_name
asterisk-1.2.13/build_tools/mkdep
asterisk-1.2.13/build_tools/make_build_h
<replaceable>[...]</replaceable></screen></para>

  <para>Jetzt müssen wir in das gerade entpackte Verzeichnis wechseln und
  Asterisk mit <command>make</command> kompilieren. Bitte beachten Sie, dass
  1.2.13 vielleicht nicht mehr die aktuellste Version ist; passen Sie also die
  Befehle entsprechend an.<screen><prompt>$  </prompt>cd asterisk-1.2.13/
<prompt>$  </prompt>make</screen>Da dieser Vorgang je nach Leistung Ihres
  Rechners einige Zeit dauern kann, empfehle ich an dieser Stelle eine Tasse
  Tee<footnote>
      <simpara>Vorzugsweise einen Darjeeling Finest Tippy Golden Flowery
      Orange Pekoe von der <ulink
      url="http://www.teekampagne.de/"><citetitle>Teekampagne</citetitle></ulink></simpara>
    </footnote> oder Kaffee. <footnote>
      <simpara>Jedes kleine Kind weiß, dass man Kaffee nicht unbeaufsichtigt
      rumstehen lässt!</simpara>
    </footnote>Der Testrechner war allerdings schon nach etwa 3 Minuten
  fertig, was sich in dieser erfreulichen Botschaft ausdrückt:<screen><replaceable>[...]</replaceable>
 +--------- Asterisk Build Complete ---------+
 + Asterisk has successfully been built, and +
 + can be installed by running:              +
 +                                           +
 +               make install                +
 +-------------------------------------------+</screen></para>

  <para>Die Software ist jetzt kompiliert. Der nächste Schritt muss mit
  Root-Rechten ausgeführt werden. Hierzu bedienen wir uns auf Mac OS X des
  Programms <ulink
  url="http://de.wikipedia.org/wiki/Sudo"><citetitle><command>sudo</command></citetitle></ulink>.</para>

  <para>Jetzt nur noch alle Dateien automatisch mit <command>sudo make
  install</command> installieren, also in die richtigen Verzeichnisse kopieren
  lassen:<screen><prompt>$  </prompt>sudo make install
<replaceable>[...]</replaceable>
 +---- Asterisk Installation Complete -------+
 +                                           +
 +    YOU MUST READ THE SECURITY DOCUMENT    +
 +                                           +
 + Asterisk has successfully been installed. +
 + If you would like to install the sample   +
 + configuration files (overwriting any      +
 + existing config files), run:              +
 +                                           +
 +               make samples                +
 +                                           +
 +-----------------  or ---------------------+
 +                                           +
 + You can go ahead and install the asterisk +
 + program documentation now or later run:   +
 +                                           +
 +              make progdocs                +
 +                                           +
 + **Note** This requires that you have      +
 + doxygen installed on your local system    +
 +-------------------------------------------+</screen></para>

  <para>Und da wir sofort loslegen wollen, lassen wir auch noch mit
  <command>sudo make samples</command> die Beispiel-Konfiguration
  erstellen:<screen><prompt>$  </prompt>sudo make samples
<replaceable>[...]</replaceable>
done</screen></para>

  <para>Fertig! Asterisk ist auf Ihrem System installiert. Mit dem Befehl
  <command>asterisk -V</command> können Sie die installierte Version
  herausfinden (bitte achten Sie auf das großgeschriebene V):<screen><prompt>$  </prompt>asterisk -V
Asterisk 1.2.13</screen>Ihren Asterisk-Server können Sie mit <command>sudo
  asterisk</command> starten und mit <command>sudo asterisk -rx "stop
  now"</command> beenden.</para>

  <section id="installation-1.2-macosx-startupitem">
    <title>Asterisk automatisch beim Hochfahren starten</title>

    <para>Unsere Installation hat noch eine Schwäche: Wenn Sie Ihren Computer
    neu starten, läuft der Asterisk-Server nicht mehr. Auf einem
    <quote>Production</quote>-Server ist es natürlich wünschenswert, dass
    Asterisk immer automatisch startet (während man das auf einem
    Arbeitsplatzrechner eher nicht will). Unter Mac OS X ist das Vorgehen
    etwas anders, als man es von anderen *nixen kennt. Man richtet sich am
    besten ein Startup Item ein, indem man im Verzeichnis
    <filename>/Library/StartupItems/</filename> ein neues Verzeichnis
    <filename>Asterisk/</filename> anlegt. Darin erstellt man mit einem
    Text-Editor seiner Wahl eine Datei
    <filename>StartupParameters.plist</filename> mit dem
    Inhalt:<programlisting>{
  Description = "Asterisk PBX";
  Provides = ("Asterisk");
  OrderPreference = "Last";
  Messages =
  {
    start = "Starting Asterisk";
    stop  = "Stopping Asterisk";
  };
}</programlisting>Diese Datei sagt dem <command>SystemStarter</command>, was
    unser Startup-Item bereitstellt und in welcher Rehenfolge es relativ zu
    den anderen Startup-Items geladen werden soll.</para>

    <para>Jetzt brauchen wir noch eine zweite Datei mit dem Namen
    <filename>Asterisk</filename>, nämlich ein Shell-Skript, das dem
    SystemStarter erklärt, wie Asterisk zu starten und zu beenden
    ist:<programlisting>#!/bin/sh

# ohne Parameter geben wir aus, wie dieses Skript aufzurufen ist:
#
if [ -z $1 ] ; then
  echo "Usage: $0 [start|stop|restart] "
  exit 1
fi

# die Funktionen für Startup-Skripte einbinden:
#
test -r /etc/rc.common || exit 1
. /etc/rc.common

# das ausführbare Asterisk-Programm finden:
#
if [ -x /usr/sbin/asterisk ]; then
  ASTERISK="/usr/sbin/asterisk"
else
  if [ -x /opt/sbin/asterisk ]; then
    ASTERISK="/opt/sbin/asterisk"
  else
    if [ -x asterisk ]; then
      ASTERISK="asterisk"
    else
      ConsoleMessage "Cannot find asterisk"
      exit 1
    fi
  fi
fi

# Funktion zum Starten von Asterisk:
#
StartService ()
{
  if [ ! -f /var/run/asterisk.pid ]; then
    ConsoleMessage "Starting Asterisk"
    $ASTERISK
  else
    ConsoleMessage "Asterisk already running"
  fi
}

# Funktion zum Stoppen von Asterisk:
#
StopService ()
{
  if [ -f /var/run/asterisk.pid ]; then
    ConsoleMessage "Stopping Asterisk"
    $ASTERISK -rx "stop now"
  else
    ConsoleMessage "Asterisk not running"
  fi
}

# Funktion zum Neu-Starten von Asterisk:
#
RestartService ()
{
  if [ -f /var/run/asterisk.pid ]; then
    ConsoleMessage "Reloading Asterisk configuration"
    $ASTERISK -rx reload
  else
    StartService
  fi
}

# je nach Parameter die entsprechende oben definierte Funktion
# aufrufen:
#
RunService "$1"
</programlisting></para>

    <para>Es ist wichtig, dass diese Dateien dem Benutzer <code>root</code>
    und der Gruppe <code>wheel</code> gehören und kein anderer Schreibrechte
    an diesen Dateien hat. Wir machen also Folgendes im Terminal:<screen><prompt>$  </prompt>cd /Library/StartupItems/
<prompt>$  </prompt>sudo chown -R root:wheel Asterisk
<prompt>$  </prompt>sudo chmod -R 754 Asterisk</screen>Fertig. Wenn wir jetzt
    unseren Rechner hochfahren, wird Asterisk automatisch gestartet. Wir
    können das selbst im Terminal testen:<screen><prompt>$  </prompt>sudo SystemStarter start Asterisk
<prompt>$  </prompt>ps ax | grep ast
  521  ??  Ss     0:00.13 /usr/sbin/asterisk
  528  p1  S+     0:00.00 grep ast
<prompt>$  </prompt>sudo SystemStarter stop Asterisk
  538  p1  S+     0:00.00 grep ast</screen></para>
  </section>
</section>