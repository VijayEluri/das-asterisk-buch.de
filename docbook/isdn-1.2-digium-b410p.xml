<?xml version="1.0" encoding="ISO-8859-1"?>
<section id="isdn-1.2-digium-b410p" lang="de" revision="$Revision: 1.2 $">
  <!--% Copyright (c) 2007
% - Wintermeyer <sw@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation;
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title>Digium B410P ISDN-Karte</title>

  <para>Dieses Kapitel beschreibt die Installation und Betriebnahme einer
  Digium B410P ISDN-Karte.</para>

  <section id="isdn-1.2-digium-b410p-installation">
    <title>Installation</title>

    <para>Diese Installationsanleitung setzt ein frisch installiertes Debian
    GNU/Linux 3.1 (a.k.a sarge) voraus. Ein ISO-Image für eine entsprechende
    i386er Debian Linux-Installation befindet sich unter <ulink
    url="http://cdimage.debian.org/debian-cd/3.1_r4/i386/iso-cd/debian-31r4-i386-netinst.iso">
    <citetitle>http://cdimage.debian.org/debian-cd/3.1_r4/i386/iso-cd/debian-31r4-i386-netinst.iso</citetitle>
    </ulink>. Eine Debian GNU/Linux-Installationsanleitung steht unter <ulink
    url="http://www.debian.org/releases/stable/i386/">
    <citetitle>http://www.debian.org/releases/stable/i386/</citetitle>
    </ulink> und ein allgemeines Anwenderhandbuch unter <ulink
    url="http://debiananwenderhandbuch.de/">
    <citetitle>http://debiananwenderhandbuch.de.</citetitle> </ulink></para>

    <para><emphasis>Nach erfolgreicher Installation des Debian Linux-Systems
    melden Sie sich als Benutzer root in das System an und führen Sie die hier
    nachfolgend angegebenen Befehle aus. Bitte achten Sie darauf, keinen
    Schritt auszulassen und die Schritte als Benutzer root
    durchzuführen.</emphasis></para>

    <para>Als Erstes stellen Sie mit einem <command>apt-get update</command>
    sicher, dass <code>apt-get</code> alle aktuellen Paketlisten zur Verfügung
    hat:<screen>debian:~# apt-get updateyyy123yyysw
OK   http://ftp.de.debian.org stable/main Packagesyyy123yyysw
OK   http://ftp.de.debian.org stable/main Releaseyyy123yyysw
OK   http://security.debian.org stable/updates/main Packagesyyy123yyysw
OK   http://security.debian.org stable/updates/main Releaseyyy123yyysw
OK   http://security.debian.org stable/updates/contrib Packagesyyy123yyysw
OK   http://security.debian.org stable/updates/contrib Releaseyyy123yyysw
OK   http://ftp.de.debian.org stable/main Sourcesyyy123yyysw
OK   http://ftp.de.debian.org stable/main Releaseyyy123yyysw
Paketlisten werden gelesen... Fertigyyy123yyysw
debian:~#yyy123yyysw</screen></para>

    <para>Um sicherzugehen, dass alle Pakete auf dem neuesten Stand sind,
    führen Sie zur Sicherheit noch ein <command>apt-get -y upgrade</command>
    aus:<screen>debian:~# apt-get -y upgradeyyy123yyysw
Paketlisten werden gelesen... Fertigyyy123yyysw
Abhängigkeitsbaum wird aufgebaut... Fertigyyy123yyysw
0 aktualisiert, 0 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.yyy123yyysw</screen></para>

    <para>Jetzt müssen Sie mit <command>apt-get -y install openssl zlibc
    libkrb5-dev libncurses5-dev libssl-dev zlib1g-dev</command> noch ein paar
    Pakete nachinstallieren, damit das spätere Kompilieren von Asterisk
    erfolgreich durchgeführt werden kann:</para>

    <screen>debian:~# apt-get -y install openssl zlibc libkrb5-dev libncurses5-dev libssl-dev zlib1g-devyyy123yyysw
Paketlisten werden gelesen... Fertigyyy123yyysw
Abhängigkeitsbaum wird aufgebaut... Fertigyyy123yyysw
Die folgenden zusätzlichen Pakete werden installiert:yyy123yyysw
  comerr-dev libkadm55yyy123yyysw
Vorgeschlagene Pakete:yyy123yyysw
  doc-base krb5-doc ca-certificatesyyy123yyysw
Die folgenden NEUEN Pakete werden installiert:yyy123yyysw
  comerr-dev libkadm55 libkrb5-dev libncurses5-dev libssl-dev opensslyyy123yyysw
  zlib1g-dev zlibcyyy123yyysw
0 aktualisiert, 8 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.yyy123yyysw
Es müssen 6025kB Archive geholt werden.yyy123yyysw
Nach dem Auspacken werden 18,8MB Plattenplatz zusätzlich benutzt.yyy123yyysw
Hole:1 http://ftp.de.debian.org stable/main libkadm55 1.3.6-2sarge3 [165kB]yyy123yyysw
Hole:2 http://ftp.de.debian.org stable/main libncurses5-dev 5.4-4 [1038kB]yyy123yyysw
Hole:3 http://ftp.de.debian.org stable/main libssl-dev 0.9.7e-3sarge4 [2555kB] yyy123yyysw
Hole:4 http://ftp.de.debian.org stable/main openssl 0.9.7e-3sarge4 [906kB]     yyy123yyysw
Hole:5 http://ftp.de.debian.org stable/main zlib1g-dev 1:1.2.2-4.sarge.2 [488kB]yyy123yyysw
Hole:6 http://ftp.de.debian.org stable/main zlibc 0.9j-7 [245kB]               yyy123yyysw
Hole:7 http://ftp.de.debian.org stable/main comerr-dev 2.1-1.37-2sarge1 [53,0kB]yyy123yyysw
Hole:8 http://ftp.de.debian.org stable/main libkrb5-dev 1.3.6-2sarge3 [574kB]  yyy123yyysw
Es wurden 6025kB in 57s geholt (104kB/s)                                       yyy123yyysw
Wähle vormals abgewähltes Paket libkadm55.yyy123yyysw
(Lese Datenbank ... 32512 Dateien und Verzeichnisse sind derzeit installiert.)yyy123yyysw
Entpacke libkadm55 (aus .../libkadm55_1.3.6-2sarge3_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket libncurses5-dev.yyy123yyysw
Entpacke libncurses5-dev (aus .../libncurses5-dev_5.4-4_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket libssl-dev.yyy123yyysw
Entpacke libssl-dev (aus .../libssl-dev_0.9.7e-3sarge4_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket openssl.yyy123yyysw
Entpacke openssl (aus .../openssl_0.9.7e-3sarge4_i386.deb) ...yyy123yyysw
Creating directory /etc/sslyyy123yyysw
Wähle vormals abgewähltes Paket zlib1g-dev.yyy123yyysw
Entpacke zlib1g-dev (aus .../zlib1g-dev_1%3a1.2.2-4.sarge.2_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket zlibc.yyy123yyysw
Entpacke zlibc (aus .../archives/zlibc_0.9j-7_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket comerr-dev.yyy123yyysw
Entpacke comerr-dev (aus .../comerr-dev_2.1-1.37-2sarge1_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket libkrb5-dev.yyy123yyysw
Entpacke libkrb5-dev (aus .../libkrb5-dev_1.3.6-2sarge3_i386.deb) ...yyy123yyysw
Richte libkadm55 ein (1.3.6-2sarge3) ...yyy123yyysw
yyy123yyysw
Richte libncurses5-dev ein (5.4-4) ...yyy123yyysw
Richte libssl-dev ein (0.9.7e-3sarge4) ...yyy123yyysw
yyy123yyysw
Richte openssl ein (0.9.7e-3sarge4) ...yyy123yyysw
yyy123yyysw
Richte zlib1g-dev ein (1.2.2-4.sarge.2) ...yyy123yyysw
Richte zlibc ein (0.9j-7) ...yyy123yyysw
yyy123yyysw
Richte comerr-dev ein (2.1-1.37-2sarge1) ...yyy123yyysw
yyy123yyysw
Richte libkrb5-dev ein (1.3.6-2sarge3) ...yyy123yyysw
debian:~#yyy123yyysw</screen>

    <para>Asterisk kann erst nach mISDN installiert werden. mISDN lässt sich
    momentan ausschliesslich mit einen 2.6.x Kernel kompilieren, um diesen zu
    installieren suchen sie mit <command>apt-cache search kernel-image-2.6.8 |
    grep kernel-image</command> den zu ihrer Architektur passenden
    Kernel:<screen>debian:~# apt-cache search kernel-image-2.6.8 | grep kernel-imageyyy123yyysw
kernel-image-2.6.8-3-386 - Linux kernel image for version 2.6.8 on 386.yyy123yyysw
kernel-image-2.6.8-11-amd64-generic - Linux kernel image for version 2.6.8 on generic x86_64 systemsyyy123yyysw
kernel-image-2.6.8-11-amd64-k8 - Linux kernel image for version 2.6.8 on AMD64 systemsyyy123yyysw
kernel-image-2.6.8-11-amd64-k8-smp - Linux kernel image for version 2.6.8 on AMD64 SMP systemsyyy123yyysw
kernel-image-2.6.8-11-em64t-p4 - Linux kernel image for version 2.6.8 on Intel EM64T systemsyyy123yyysw
kernel-image-2.6.8-11-em64t-p4-smp - Linux kernel image for version 2.6.8 on Intel EM64T SMP systemsyyy123yyysw
kernel-image-2.6.8-12-amd64-generic - Linux kernel image for version 2.6.8 on generic x86_64 systemsyyy123yyysw
kernel-image-2.6.8-12-amd64-k8 - Linux kernel image for version 2.6.8 on AMD64 systemsyyy123yyysw
kernel-image-2.6.8-12-amd64-k8-smp - Linux kernel image for version 2.6.8 on AMD64 SMP systemsyyy123yyysw
kernel-image-2.6.8-12-em64t-p4 - Linux kernel image for version 2.6.8 on Intel EM64T systemsyyy123yyysw
kernel-image-2.6.8-12-em64t-p4-smp - Linux kernel image for version 2.6.8 on Intel EM64T SMP systemsyyy123yyysw
kernel-image-2.6.8-2-386 - Linux kernel image for version 2.6.8 on 386.yyy123yyysw
kernel-image-2.6.8-2-686 - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4.yyy123yyysw
kernel-image-2.6.8-2-686-smp - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4 SMP.yyy123yyysw
kernel-image-2.6.8-2-k7 - Linux kernel image for version 2.6.8 on AMD K7.yyy123yyysw
kernel-image-2.6.8-2-k7-smp - Linux kernel image for version 2.6.8 on AMD K7 SMP.yyy123yyysw
kernel-image-2.6.8-3-686 - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4.yyy123yyysw
kernel-image-2.6.8-3-686-smp - Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4 SMP.yyy123yyysw
kernel-image-2.6.8-3-k7 - Linux kernel image for version 2.6.8 on AMD K7.yyy123yyysw
kernel-image-2.6.8-3-k7-smp - Linux kernel image for version 2.6.8 on AMD K7 SMP.yyy123yyysw
debian:~# yyy123yyysw</screen>In diesem Beispiel entscheiden wir uns für den Kernel
    <parameter>kernel-image-2.6.8-3-686</parameter> und installieren diesen
    mit <command>apt-get -y install
    kernel-image-2.6.8-3-686</command>:<screen>debian:~# apt-get -y install kernel-image-2.6.8-3-686yyy123yyysw
Paketlisten werden gelesen... Fertigyyy123yyysw
Abhängigkeitsbaum wird aufgebaut... Fertigyyy123yyysw
Vorgeschlagene Pakete:yyy123yyysw
  lilo kernel-doc-2.6.8 kernel-source-2.6.8yyy123yyysw
Die folgenden NEUEN Pakete werden installiert:yyy123yyysw
  kernel-image-2.6.8-3-686yyy123yyysw
0 aktualisiert, 1 neu installiert, 0 zu entfernen und 1 nicht aktualisiert.yyy123yyysw
Es müssen 15,6MB Archive geholt werden.yyy123yyysw
Nach dem Auspacken werden 45,2MB Plattenplatz zusätzlich benutzt.yyy123yyysw
Hole:1 http://security.debian.org stable/updates/main kernel-image-2.6.8-3-686 2.6.8-16sarge6 [15,6MB]yyy123yyysw
Es wurden 15,6MB in 1m7s geholt (232kB/s)                                      yyy123yyysw
Wähle vormals abgewähltes Paket kernel-image-2.6.8-3-686.yyy123yyysw
(Lese Datenbank ... 25562 Dateien und Verzeichnisse sind derzeit installiert.)yyy123yyysw
Entpacke kernel-image-2.6.8-3-686 (aus .../kernel-image-2.6.8-3-686_2.6.8-16sarge6_i386.deb) ...yyy123yyysw
Richte kernel-image-2.6.8-3-686 ein (2.6.8-16sarge6) ...yyy123yyysw
Searching for GRUB installation directory ... found: /boot/grub .yyy123yyysw
Testing for an existing GRUB menu.list file... found: /boot/grub/menu.lst .yyy123yyysw
Searching for splash image... none found, skipping...yyy123yyysw
Found kernel: /boot/vmlinuz-2.6.8-3-686yyy123yyysw
Found kernel: /boot/vmlinuz-2.4.27-3-386yyy123yyysw
Updating /boot/grub/menu.lst ... doneyyy123yyysw
yyy123yyysw
yyy123yyysw
debian:~#yyy123yyysw</screen>Danach booten wir den Rechner mit <command>shutdown -r
    now</command> und können nach dem Booten mit <command>uname -a</command>
    kontrollieren, ob mit dem richtigen Kernel gebootet wurde:<screen>debian:~# uname -ayyy123yyysw
Linux debian 2.6.8-3-686 #1 Tue Dec 5 21:26:38 UTC 2006 i686 GNU/Linuxyyy123yyysw
debian:~#yyy123yyysw</screen>Zum kompilieren benötigen wir jetzt noch die zum Kernel
    passenden Header Dateien. Diese können mit <command>apt-get -y install
    kernel-headers-`uname -r`</command> nachinstalliert werden:<screen>debian:~# apt-get -y install kernel-headers-`uname -r`yyy123yyysw
Paketlisten werden gelesen... Fertigyyy123yyysw
Abhängigkeitsbaum wird aufgebaut... Fertigyyy123yyysw
Die folgenden zusätzlichen Pakete werden installiert:yyy123yyysw
  kernel-headers-2.6.8-3 kernel-kbuild-2.6-3yyy123yyysw
Die folgenden NEUEN Pakete werden installiert:yyy123yyysw
  kernel-headers-2.6.8-3 kernel-headers-2.6.8-3-686 kernel-kbuild-2.6-3yyy123yyysw
0 aktualisiert, 3 neu installiert, 0 zu entfernen und 1 nicht aktualisiert.yyy123yyysw
Es müssen 3402kB Archive geholt werden.yyy123yyysw
Nach dem Auspacken werden 42,6MB Plattenplatz zusätzlich benutzt.yyy123yyysw
Hole:1 http://ftp.de.debian.org stable/main kernel-kbuild-2.6-3 2.6.8-2 [363kB]yyy123yyysw
Hole:2 http://security.debian.org stable/updates/main kernel-headers-2.6.8-3 2.6.8-16sarge6 [2781kB]yyy123yyysw
Hole:3 http://security.debian.org stable/updates/main kernel-headers-2.6.8-3-686 2.6.8-16sarge6 [258kB]yyy123yyysw
Es wurden 3402kB in 18s geholt (188kB/s)                                       yyy123yyysw
Wähle vormals abgewähltes Paket kernel-kbuild-2.6-3.yyy123yyysw
(Lese Datenbank ... 27265 Dateien und Verzeichnisse sind derzeit installiert.)yyy123yyysw
Entpacke kernel-kbuild-2.6-3 (aus .../kernel-kbuild-2.6-3_2.6.8-2_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket kernel-headers-2.6.8-3.yyy123yyysw
Entpacke kernel-headers-2.6.8-3 (aus .../kernel-headers-2.6.8-3_2.6.8-16sarge6_i386.deb) ...yyy123yyysw
Wähle vormals abgewähltes Paket kernel-headers-2.6.8-3-686.yyy123yyysw
Entpacke kernel-headers-2.6.8-3-686 (aus .../kernel-headers-2.6.8-3-686_2.6.8-16sarge6_i386.deb) ...yyy123yyysw
Richte kernel-kbuild-2.6-3 ein (2.6.8-2) ...yyy123yyysw
Richte kernel-headers-2.6.8-3 ein (2.6.8-16sarge6) ...yyy123yyysw
yyy123yyysw
Richte kernel-headers-2.6.8-3-686 ein (2.6.8-16sarge6) ...yyy123yyysw
debian:~# yyy123yyysw</screen></para>

    <para>Auf der Asterisk-Homepage <ulink
    url="http://www.asterisk.org/"><citetitle>http://www.asterisk.org/</citetitle>
    </ulink> finden Sie die notwendigen Quellen, um Asterisk zu kompilieren.
    Nehmen Sie bitte eine <emphasis role="bold">stabile</emphasis> und keine
    Entwickler-Version und laden Sie diese mit <command>wget
    http://ftp.digium.com/pub/asterisk/asterisk-1.2-current.tar.gz</command>
    in das Verzeichnis <filename>/usr/src/</filename> herunter:</para>

    <screen>debian:/usr/src/# cd /usr/srcyyy123yyysw
debian:/usr/src# wget http://ftp.digium.com/pub/asterisk/asterisk-1.2-current.tar.gzyyy123yyysw
--18:30:46--  http://ftp.digium.com/pub/asterisk/asterisk-1.2-current.tar.gzyyy123yyysw
           =&gt; `asterisk-1.2-current.tar.gz'yyy123yyysw
Auflösen des Hostnamen »ftp.digium.com«.... 69.16.138.164yyy123yyysw
Verbindungsaufbau zu ftp.digium.com[69.16.138.164]:80... verbunden.yyy123yyysw
HTTP Anforderung gesendet, warte auf Antwort... 200 OKyyy123yyysw
Länge: 10,584,113 [application/x-gzip]yyy123yyysw
yyy123yyysw
100%[====================================&gt;] 10,584,113   224.71K/s    ETA 00:00yyy123yyysw
yyy123yyysw
18:31:36 (207.67 KB/s) - »asterisk-1.2-current.tar.gz« gespeichert [10584113/10584113]yyy123yyysw
</screen>

    <para>Als nächstes laden Sie mit <command>wget
    http://ftp.digium.com/pub/zaptel/zaptel-1.2-current.tar.gz</command> den
    dazugehörigen Zaptel Treiber:<screen>debian:/usr/src# wget http://ftp.digium.com/pub/zaptel/zaptel-1.2-current.tar.gzyyy123yyysw
--20:47:06--  http://ftp.digium.com/pub/zaptel/zaptel-1.2-current.tar.gzyyy123yyysw
           =&gt; `zaptel-1.2-current.tar.gz'yyy123yyysw
Auflösen des Hostnamen »ftp.digium.com«.... 69.16.138.164yyy123yyysw
Verbindungsaufbau zu ftp.digium.com[69.16.138.164]:80... verbunden.yyy123yyysw
HTTP Anforderung gesendet, warte auf Antwort... 200 OKyyy123yyysw
Länge: 1,487,021 [application/x-gzip]yyy123yyysw
yyy123yyysw
100%[=====================================&gt;] 1,487,021     13.08K/s    ETA 00:00yyy123yyysw
yyy123yyysw
20:49:12 (12.25 KB/s) - »zaptel-1.2-current.tar.gz« gespeichert [1487021/1487021]yyy123yyysw
yyy123yyysw
debian:/usr/src#yyy123yyysw</screen></para>

    <para>Da der Zaptel Treiber immer vor dem Asterisk kompiliert werden muss,
    entpacken wir diesen mit <command>tar xvzf
    zaptel-1.2-current.tar.gz</command>, wechseln dann mit <command>cd
    zaptel-1.2.12</command> in das Verzeichnis, kompilieren ihn mit
    <command>make</command> und installieren ihn mit <command>make
    install</command>:<screen>debian:/usr/src# tar xvzf zaptel-1.2-current.tar.gz yyy123yyysw
zaptel-1.2.12/yyy123yyysw
zaptel-1.2.12/build_tools/yyy123yyysw
zaptel-1.2.12/build_tools/genmodconfyyy123yyysw
zaptel-1.2.12/build_tools/make_svn_branch_nameyyy123yyysw
zaptel-1.2.12/build_tools/genudevrulesyyy123yyysw
zaptel-1.2.12/build_tools/make_version_hyyy123yyysw
zaptel-1.2.12/wct4xxp/yyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
zaptel-1.2.12/torisa.hyyy123yyysw
zaptel-1.2.12/pattest.cyyy123yyysw
zaptel-1.2.12/mg2ec_const.hyyy123yyysw
zaptel-1.2.12/README.fxsusbyyy123yyysw
zaptel-1.2.12/wctdm.cyyy123yyysw
zaptel-1.2.12/fir.hyyy123yyysw
debian:/usr/src# cd zaptel-1.2.12 yyy123yyysw
debian:/usr/src/zaptel-1.2.12# make        yyy123yyysw
cc -I. -O4 -g -Wall -DBUILDING_TONEZONE    -DSTANDALONE_ZAPATA -DZAPTEL_CONFIG=\"/etc/zaptel.conf\" -DHOTPLUG_FIRMWARE   -c -o gendigits.o gendigits.cyyy123yyysw
cc -o gendigits gendigits.o -lmyyy123yyysw
./gendigits &gt; tones.hyyy123yyysw
cc -I. -O4 -g -Wall -DBUILDING_TONEZONE    -DSTANDALONE_ZAPATA -DZAPTEL_CONFIG=\"/etc/zaptel.conf\" -DHOTPLUG_FIRMWARE    makefw.c   -o makefwyyy123yyysw
./makefw tormenta2.rbt tor2fw &gt; tor2fw.hyyy123yyysw
Loaded 69900 bytes from fileyyy123yyysw
./makefw pciradio.rbt radfw &gt; radfw.hyyy123yyysw
Loaded 42096 bytes from fileyyy123yyysw
ZAPTELVERSION="1.2.12" build_tools/make_version_h &gt; version.h.tmpyyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
  LD [M]  /usr/src/zaptel-1.2.12/ztd-loc.koyyy123yyysw
  CC      /usr/src/zaptel-1.2.12/ztdummy.mod.oyyy123yyysw
  LD [M]  /usr/src/zaptel-1.2.12/ztdummy.koyyy123yyysw
  CC      /usr/src/zaptel-1.2.12/ztdynamic.mod.oyyy123yyysw
  LD [M]  /usr/src/zaptel-1.2.12/ztdynamic.koyyy123yyysw
make[1]: Leaving directory `/usr/src/kernel-headers-2.6.8-3-686'yyy123yyysw
cc -shared -Wl,-soname,libtonezone.so.1.0 -lm -o libtonezone.so zonedata.lo tonezone.loyyy123yyysw
debian:/usr/src/zaptel-1.2.12# make installyyy123yyysw
ZAPTELVERSION="1.2.12" build_tools/make_version_h &gt; version.h.tmpyyy123yyysw
if cmp -s version.h.tmp version.h ; then echo; else \yyy123yyysw
        mv version.h.tmp version.h ; \yyy123yyysw
fiyyy123yyysw
yyy123yyysw
rm -f version.h.tmpyyy123yyysw
/lib/modules/2.6.8-3-686/buildyyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
[ -f /etc/zaptel.conf ] || install -D -m 644 zaptel.conf.sample /etc/zaptel.confyyy123yyysw
build_tools/genmodconf linux26 "" "tor2 torisa wcusb wcfxo wctdm wctdm24xxp ztdynamic ztd-eth wct1xxp wcte11xp pciradio ztd-loc ztdummy wct4xxp"yyy123yyysw
Building /etc/modprobe.d/zaptel...yyy123yyysw
***yyy123yyysw
*** WARNING:yyy123yyysw
*** If you had custom settings in /etc/modprobe.d/zaptel,yyy123yyysw
*** they have been moved to /etc/modprobe.d/zaptel.bak.yyy123yyysw
***yyy123yyysw
*** In the future, do not edit /etc/modprobe.d/zaptel, butyyy123yyysw
*** instead put your changes in another fileyyy123yyysw
*** in the same directory so that they will notyyy123yyysw
*** be overwritten by future Zaptel updates.yyy123yyysw
***yyy123yyysw
debian:/usr/src/zaptel-1.2.12#yyy123yyysw</screen></para>

    <para>Jetzt kann der Befehl <command>make b410p</command> aufgerufen
    werden und das Skript lädt selbstständig die notwendigen Dateien nach und
    baut die ISDN-Treiber für die Karte:<screen>debian:/usr/src/zaptel-1.2.12# make b410pyyy123yyysw
[ -f misdn-b410p.tar.gz ] || wget ftp://ftp.digium.com/pub/zaptel/b410p/misdn-b410p.tar.gzyyy123yyysw
--12:27:54--  ftp://ftp.digium.com/pub/zaptel/b410p/misdn-b410p.tar.gzyyy123yyysw
           =&gt; `misdn-b410p.tar.gz'yyy123yyysw
Auflösen des Hostnamen »ftp.digium.com«.... 216.27.40.102yyy123yyysw
Verbindungsaufbau zu ftp.digium.com[216.27.40.102]:21... verbunden.yyy123yyysw
Anmelden als anonymous ... Angemeldet!yyy123yyysw
==&gt; SYST ... fertig.    ==&gt; PWD ... fertig.yyy123yyysw
==&gt; TYPE I ... fertig.  ==&gt; CWD /pub/zaptel/b410p ... fertig.yyy123yyysw
==&gt; PASV ... fertig.    ==&gt; RETR misdn-b410p.tar.gz ... fertig.yyy123yyysw
Länge: 572,153 (unmaßgeblich)yyy123yyysw
yyy123yyysw
100%[====================================&gt;] 572,153      183.53K/s    ETA 00:00yyy123yyysw
yyy123yyysw
12:27:59 (183.04 KB/s) - »misdn-b410p.tar.gz« gespeichert [572153]yyy123yyysw
yyy123yyysw
tar -zxf misdn-b410p.tar.gzyyy123yyysw
make -C misdn installyyy123yyysw
make[1]: Entering directory `/usr/src/zaptel-1.2.12/misdn'yyy123yyysw
yyy123yyysw
Makeing mISDNyyy123yyysw
=============yyy123yyysw
yyy123yyysw
cp /usr/src/zaptel-1.2.12/misdn/drivers/isdn/hardware/mISDN/Makefile.v2.6 /usr/src/zaptel-1.2.12/misdn/drivers/isdn/hardware/mISDN/Makefileyyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
make[3]: Leaving directory `/usr/src/zaptel-1.2.12/mISDNuser/tenovis'yyy123yyysw
make[3]: Entering directory `/usr/src/zaptel-1.2.12/mISDNuser/voip'yyy123yyysw
for i in voipisdn ; do \yyy123yyysw
        install -m 755 $i //usr/bin ;\yyy123yyysw
doneyyy123yyysw
make[3]: Leaving directory `/usr/src/zaptel-1.2.12/mISDNuser/voip'yyy123yyysw
make[2]: Leaving directory `/usr/src/zaptel-1.2.12/mISDNuser'yyy123yyysw
cp include/*.h //usr/include/mISDNuser/yyy123yyysw
make[1]: Leaving directory `/usr/src/zaptel-1.2.12/mISDNuser'yyy123yyysw
debian:/usr/src/zaptel-1.2.12# yyy123yyysw</screen></para>

    <para>Jetzt wieder mit <command>cd ..</command> ins Verzeichnis
    <filename>/usr/src</filename> wechseln und den Asterisk Tarball mit
    <command>tar xvzf asterisk-1.2-current.tar.gz</command> entpackt:</para>

    <para><screen>debian:/usr/src/zaptel-1.2.12# cd ..yyy123yyysw
debian:/usr/src# tar xvzf asterisk-1.2-current.tar.gz yyy123yyysw
asterisk-1.2.14/yyy123yyysw
asterisk-1.2.14/build_tools/yyy123yyysw
asterisk-1.2.14/build_tools/make_svn_branch_nameyyy123yyysw
asterisk-1.2.14/build_tools/mkdepyyy123yyysw
asterisk-1.2.14/build_tools/make_build_hyyy123yyysw
asterisk-1.2.14/build_tools/make_version_hyyy123yyysw
asterisk-1.2.14/build_tools/make_defaults_hyyy123yyysw
asterisk-1.2.14/aesopt.hyyy123yyysw
asterisk-1.2.14/utils.cyyy123yyysw
asterisk-1.2.14/keys/yyy123yyysw
[...]yyy123yyysw
asterisk-1.2.14/cli.cyyy123yyysw
asterisk-1.2.14/io.cyyy123yyysw
asterisk-1.2.14/ulaw.cyyy123yyysw
asterisk-1.2.14/logger.cyyy123yyysw
debian:/usr/src# yyy123yyysw</screen></para>

    <para>Die entpackten Dateien müssen jetzt kompiliert werden. Dies
    geschieht mit dem Befehl <command>make</command> im gerade entpackten
    Verzeichnis.<warning>
        <para>Bitte achten Sie darauf, dass die hier in der Dokumentation
        benutzte Version 1.2.14 vielleicht zum Zeitpunkt Ihrer Installation
        nicht mehr aktuell ist. Entsprechend werden sich die Verzeichnisnamen
        ändern.</para>
      </warning>Übrigens ist dies jetzt ein guter Moment, sich einen Kaffee
    oder Tee zu kochen. Der Kompiliervorgang kann je nach Rechenleistung des
    PCs wenige Minuten oder bis zu einer Stunde dauern.</para>

    <screen>debian:/usr/src# cd asterisk-1.2.14 yyy123yyysw
debian:/usr/src/asterisk-1.2.14# makeyyy123yyysw
if cmp -s .cleancount .lastclean ; then echo ; else \yyy123yyysw
        make clean; cp -f .cleancount .lastclean;\yyy123yyysw
fiyyy123yyysw
yyy123yyysw
build_tools/make_version_h &gt; include/asterisk/version.h.tmpyyy123yyysw
if cmp -s include/asterisk/version.h.tmp include/asterisk/version.h ; then echo; else \yyy123yyysw
        mv include/asterisk/version.h.tmp include/asterisk/version.h ; \yyy123yyysw
fiyyy123yyysw
rm -f include/asterisk/version.h.tmpyyy123yyysw
build_tools/mkdep  -pipe  -Wall -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -g3  -Iinclude -I../include -D_REENTRANT -D_GNU_SOURCE  -O6 -march=i686         -fomit-frame-pointer  acl.c aescrypt.c aeskey.c aestab.c alaw.c app.c asterisk.c ast_expr2.c ast_expr2f.c astmm.c autoservice.c buildinfo.c callerid.c cdr.c channel.c chanvars.c cli.c config.c cryptostub.c db.c devicestate.c dlfcn.c dns.c dnsmgr.c dsp.c enum.c file.c frame.c fskmodem.c image.c indications.c io.c jitterbuf.c loader.c logger.c manager.c md5.c muted.c netsock.c pbx.c plc.c poll.c privacy.c rtp.c say.c sched.c slinfactory.c srv.c strcompat.c tdd.cyyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
make[1]: Nothing to be done for `all'.yyy123yyysw
make[1]: Leaving directory `/usr/src/asterisk-1.2.14/stdtime'yyy123yyysw
 +--------- Asterisk Build Complete ---------+yyy123yyysw
 + Asterisk has successfully been built, but +yyy123yyysw
 + cannot be run before being installed by   +yyy123yyysw
 + running:                                  +yyy123yyysw
 +                                           +yyy123yyysw
 +               make install                +yyy123yyysw
 +-------------------------------------------+yyy123yyysw</screen>

    <para>Die Software ist jetzt kompiliert und muss nur noch mit
    <command>make install</command> installiert (sprich an die vorgesehenen
    Stellen im Dateisystem kopiert) werden:</para>

    <screen>debian:/usr/src/asterisk-1.2.14# make installyyy123yyysw
build_tools/make_version_h &gt; include/asterisk/version.h.tmpyyy123yyysw
if cmp -s include/asterisk/version.h.tmp include/asterisk/version.h ; yyy123yyysw
then echo;yyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
 +---- Asterisk Installation Complete -------+yyy123yyysw
 +                                           +yyy123yyysw
 +    YOU MUST READ THE SECURITY DOCUMENT    +yyy123yyysw
 +                                           +yyy123yyysw
 + Asterisk has successfully been installed. +yyy123yyysw
 + If you would like to install the sample   +yyy123yyysw
 + configuration files (overwriting any      +yyy123yyysw
 + existing config files), run:              +yyy123yyysw
 +                                           +yyy123yyysw
 +               make samples                +yyy123yyysw
 +                                           +yyy123yyysw
 +-----------------  or ---------------------+yyy123yyysw
 +                                           +yyy123yyysw
 + You can go ahead and install the asterisk +yyy123yyysw
 + program documentation now or later run:   +yyy123yyysw
 +                                           +yyy123yyysw
 +              make progdocs                +yyy123yyysw
 +                                           +yyy123yyysw
 + **Note** This requires that you have      +yyy123yyysw
 + doxygen installed on your local system    +yyy123yyysw
 +-------------------------------------------+yyy123yyysw
debian:/usr/src/asterisk-1.2.14#yyy123yyysw</screen>

    <para>Geschafft! Die soeben kompilierten Programmdateien sind jetzt auf
    dem System installiert. Allerdings finden wir im
    Asterisk-Konfigurationsverzeichnis <filename>/etc/asterisk/</filename>
    noch gähnende Leere vor. In diesem Verzeichnis liegen die
    Konfigurationsdateien von Asterisk und da wir nicht von Null beginnen
    möchten, lassen wir uns die Standarddateien erstellen. Dies erreichen wir
    mit <command>make samples</command>:</para>

    <screen>debian:/usr/src/asterisk-1.2.14# make samplesyyy123yyysw
build_tools/make_version_h &gt; include/asterisk/version.h.tmpyyy123yyysw
if cmp -s include/asterisk/version.h.tmp include/asterisk/version.h ; yyy123yyysw
then echo;yyy123yyysw
yyy123yyysw
[...]yyy123yyysw
yyy123yyysw
doneyyy123yyysw
debian:/usr/src/asterisk-1.2.14#yyy123yyysw</screen>

    <para>Fertig! Asterisk ist auf Ihrem System installiert. Mit dem Befehl
    <command>asterisk -V</command> können Sie die installierte Version
    herausfinden (bitte achten Sie auf das großgeschriebene V):<screen>debian:/usr/src/asterisk-1.2.14# asterisk -Vyyy123yyysw
Asterisk 1.2.14yyy123yyysw
debian:/usr/src/asterisk-1.2.14#yyy123yyysw</screen></para>
  </section>

  <section id="isdn-1.2-digium-b410p-konfiguration">
    <title>Konfiguration des mISDN Treibers</title>

    <para>Mit dem Skript <filename>/etc/init.d/misdn-init</filename> können
    Sie jetzt Ihre ISDN-Karte konfigurieren. Als erstes überprüfen wir aber
    mit <command>/etc/init.d/misdn-init scan</command>, ob die Karte auch
    erkannt wird:<screen>debian:/usr/src/asterisk-1.2.14# /etc/init.d/misdn-init scanyyy123yyysw
[OK] found the following devices:yyy123yyysw
card=1,0x4yyy123yyysw
[ii] run "/etc/init.d/misdn-init config" to store this information to /etc/misdn-init.confyyy123yyysw
debian:/usr/src/asterisk-1.2.14#yyy123yyysw</screen></para>

    <para>Das sieht sehr gut aus und führt zum nächsten Schritt: Der
    Konfiguration mit <command>/etc/init.d/misdn-init config</command><screen>debian:/usr/src/asterisk-1.2.14# /etc/init.d/misdn-init configyyy123yyysw
[OK] /etc/misdn-init.conf created. It's now safe to run "/etc/init.d/misdn-init start"yyy123yyysw
[ii] make your ports (1-4) available in asterisk by editing "/etc/asterisk/misdn.conf"yyy123yyysw
debian:/usr/src/asterisk-1.2.14#yyy123yyysw</screen>Die Konfigurationsdatei
    <filename>/etc/misdn-init.conf</filename> wurde geschrieben und wir können
    mit dieser Standardkonfiguration schon mal loslegen und
    <command>/etc/init.d/misdn-init start</command> ausführen:<screen>debian:/usr/src/asterisk-1.2.14# /etc/init.d/misdn-init startyyy123yyysw
-----------------------------------------yyy123yyysw
 Loading module(s) for your misdn-cards:yyy123yyysw
-----------------------------------------yyy123yyysw
modprobe --ignore-install hfcmulti type=0x4 protocol=0x12,0x12,0x12,0x12 layermask=0x3,0x3,0x3,0x3 poll=128 debug=0xfyyy123yyysw
[i] creating device node: /dev/mISDNyyy123yyysw
debian:/usr/src/asterisk-1.2.14#yyy123yyysw</screen></para>

    <para>Um auch ganz sicher zu gehen, kann man noch mit <command>lsmod |
    grep hfcmulti</command> überprüfen, ob das Modul sauber geladen wurde und
    mit <command>dmesg | grep Digium</command> ob die Karte vom Modul gefunden
    wurde:<screen>debian:/usr/src/asterisk-1.2.14# lsmod | grep hfcmultiyyy123yyysw
hfcmulti               76360  0 yyy123yyysw
mISDN_core             85216  6 mISDN_dsp,hfcmulti,mISDN_capi,l3udss1,mISDN_l2,mISDN_l1yyy123yyysw
debian:/usr/src/asterisk-1.2.14# dmesg | grep Digiumyyy123yyysw
HFC-multi: card manufacturer: 'Cologne Chip AG' card name: 'HFC-4S Digium Card' clock: normalyyy123yyysw
debian:/usr/src/asterisk-1.2.14#yyy123yyysw</screen></para>

    <para>Die Konfigurationsdateien <filename>/etc/misdn-init.conf</filename>
    und <filename>/etc/asterisk/misdn.conf</filename> sind sehr gut
    dokumentiert. Für den ersten Test sollten Sie nur sicher stellen, das in
    der <filename>/etc/misdn-init.conf</filename> der Eintrag Port settings
    für Ihre Bedürfnisse passend ist. Per Default steht da
    <parameter>nt_ptmp=1,2,3,4</parameter> und das bedeutet, das auf allen
    vier Ports Point-to-Multi-Point signalisiert wird. Bitte nach einer
    Anpassung dieser Datei das <command>/etc/init.d/misdn-init
    restart</command> nicht vergessen.</para>
  </section>

  <section id="isdn-1.2-digium-b410p-incoming">
    <title>Incoming</title>

    <para>Starten Sie Asterisk mit <command>asterisk -vvvvvvc</command> und
    verbinden Sie den ersten Port der Karte mit Ihrem ISDN-Anschluss. Wenn Sie
    jetzt auf diesem Anschluss von extern (z.B. vom Handy aus) anrufen, werden
    Sie im CLI eine Fehlermeldung sehen (da Sie ja noch keine entsprechende
    Extension im Dialplan haben). Falls der hier aufgeführte Context
    <parameter>[Intern]</parameter> heisst, können Sie mit der folgendem
    folgenden Abschnitt im Dialplan alle Gespräche an Ihr SIP Telefone mit der
    Nummer 2000 weiterleiten:<programlisting>[Intern]yyy123yyysw
exten =&gt; _.,1,Dial(SIP/2000)yyy123yyysw</programlisting></para>
  </section>

  <section id="isdn-1.2-digium-b410p-outgoing">
    <title>Outgoing</title>

    <para>Wenn Sie möchten das für alle Telefone im Context
    <parameter>[verkauf]</parameter> die Möglichkeit besteht über eine
    führende 0 (Null) eine Amtsleitung auf dem ersten Port Ihrer Karte zum
    ISDN-Netz zu bekommen, dann können Sie das mit den folgenden Zeilen in
    Ihrer <filename>extensions.conf</filename> einstellen:<programlisting>[verkauf]yyy123yyysw
exten =&gt; _00.,1,Dial(misdn/1/${EXTEN:1})yyy123yyysw</programlisting></para>

    <para>Wenn Sie nicht über einen bestimmten Port, sondern über einen freien
    Port in einer bestimmten Gruppe telefonieren wollen, so können Sie das
    über das <parameter>g:gruppenname</parameter> Konstrukt machen. In der
    Standardkonfiguration ist eine Gruppe intern für die Ports 1 und 2
    definiert (siehe <parameter>[intern]</parameter> in der
    <filename>/etc/asterisk/misdn.conf</filename>. Über diese Gruppe kann wie
    folgt raustelefoniert werden (gleiches Beispiel wie oben):<programlisting>[verkauf]yyy123yyysw
exten =&gt; _00.,1,Dial(misdn/g:intern/${EXTEN:1})yyy123yyysw</programlisting></para>
  </section>

  <section id="isdn-1.2-digium-b410p-echo-cancellation">
    <title>Echo Cancellation</title>

    <para>Die Digium B410P ISDN-Karte hat eine eingebaut
    Echo-Cancellation-Funktion die in der Kartenhardware abgebildet ist und
    somit Rechenlast von der CPU nimmt. Sie kann mit dem
    <filename>misdn.conf</filename> Parameter
    <parameter>echocancel=yes</parameter> aktiviert werden.</para>
  </section>

  <section id="isdn-1.2-digium-b410p-support">
    <title>Zusätzliche Informationen und Support</title>

    <para>Auf der Homepage <ulink url="http://www.misdn.org">
    <citetitle>http://www.misdn.org</citetitle> </ulink> befinden sich einige
    Informationen zu den aktuellen Versionen von mISDN. Weiterhin gibt es ein
    deutsches Forum zu mISDN auf <ulink
    url="http://www.ip-phone-forum.de/forumdisplay.php?f=521">
    <citetitle>http://www.ip-phone-forum.de/forumdisplay.php?f=521</citetitle>
    </ulink>. Schliesslich gibt es auf dem Voip-Info-Wiki hilfreiche Infos
    <ulink url="http://www.voip-info.org/wiki/view/chan_mISDN">
    <citetitle>http://www.voip-info.org/wiki/view/chan_mISDN</citetitle>
    </ulink>. Und am Ende können Sie natürlich auch noch beim technischen
    Support von Digium anrufen (siehe <ulink
    url="http://www.digium.com"><citetitle>http://www.digium.com</citetitle></ulink>).</para>
  </section>
</section>