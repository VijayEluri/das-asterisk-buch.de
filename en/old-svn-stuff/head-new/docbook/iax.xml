<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section id="iax" lang="en" revision="$Revision: 1384 $">
  <!--% Copyright (c) 2006 - Stefan Wintermeyer <sw@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
-->

  <!--% translated from the German by Stephen Bosch <sbosch@vodacomm.ca>-->

  <!--% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title id="iax.title">IAX</title>

  <indexterm significance="preferred">
    <primary><filename>iax.conf</filename></primary>
  </indexterm>

  <simpara>IAX<footnote>
      <simpara>Here, we are always referring to IAX2, or IAX version
      2.</simpara>
    </footnote> is the Inter-Asterisk-eXchange protocol. This is the
  Asterisk-native and preferred protocol.</simpara>

  <section id="warum-iax">
    <title>Why IAX?</title>

    <simpara>Does the world really need yet another VoIP protocol, when we
    already have SIP, H.323, MGCP and an array of proprietary protocols? Of
    course, this point remains arguable. Nevertheless, IAX has certain
    advantages:</simpara>

    <itemizedlist>
      <listitem>
        <simpara>Minimal overhead: Compared with SIP (and the RTP encapsulated
        within it), IAX has, as a purely UDP protocol, a significantly better
        payload-overhead ratio.</simpara>
      </listitem>

      <listitem>
        <simpara>NAT/firewall friendly: This is perhaps its biggest advantage
        -- IAX, because it uses only a single port, is easy to accommodate in
        firewall rulesets (in the case of SIP, this is at a minimum three,
        often large port ranges).</simpara>
      </listitem>

      <listitem>
        <simpara>Simplicity: There is no need to parse strings, which makes
        IAX inherently less vulnerable to buffer overflow security
        flaws.</simpara>
      </listitem>

      <listitem>
        <simpara>Call routing and transfer: Calls can be patched by a central
        server or connected directly between two users.</simpara>
      </listitem>

      <listitem>
        <para>Trunking. Allows multiple calls to be passed through a single
        IAX connection, minimizing overhead (see <xref
        linkend="codecs-trunking" />).</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="iax-beispielkonf">
    <title>Example of an IAX configuration</title>

    <simpara>The IAX configuration file <filename>iax.conf</filename> always
    begins with the section heading <code>[general]</code>. Just as with
    <filename>sip.conf</filename>, <code>[general]</code> contains global
    parameters which apply to all the individual IAX connections which
    follow.</simpara>

    <simpara>To demonstrate the possibilities offered by the IAX protocol, we
    will connect two IAX PBX systems. In this way, calls can be routed
    directly between them without need for using the PSTN.</simpara>

    <simpara>There are two Asterisk systems, named <code>ast1</code> and
    <code>ast2</code>, each with two telephones (1000 and 1001). Each system
    must be able to connect calls to the other via IAX. For this purpose we
    assign a dialing prefix to each server; <code>0901</code> connects calls
    to <code>ast1</code> and <code>0902</code> connects calls to
    <code>ast2</code>. The <code>ast1</code> system has the IP
    <code>192.168.0.101</code> and <code>ast2</code> has
    IP<code>192.168.0.102</code>.</simpara>

    <section id="iax-beispielkonf-ast1">
      <title>Configuration of ast1</title>

      <para>The <filename>iax.conf</filename> for <code>ast1</code> contains
      the following configuration: <programlisting>[ast2]
type=friend
host=192.168.0.102
secret=1234
context=test-telephones
permit=0.0.0.0/0.0.0.0</programlisting>The file
      <filename>extensions.conf</filename> contains this configuration:
      <programlisting>[via-asterisk2]
exten =&gt; 09021000,1,Dial(IAX2/ast2/1000)
exten =&gt; 09021001,1,Dial(IAX2/ast2/1001)
;          ^   ^               ^     ^
;          |   |               |     |
; virt.prefix  ext      connection  ext</programlisting></para>
    </section>

    <section id="iax-beispielkonf-ast2">
      <title>Configuration of ast2</title>

      <para>The <filename>iax.conf</filename> for <code>ast2</code> contains
      the following configuration: <programlisting>[ast1]
type=friend
host=192.168.0.101
secret=1234
context=test-telephones
permit=0.0.0.0/0.0.0.0</programlisting>The file
      <filename>extensions.conf</filename> contains this configuration:
      <programlisting>[via-asterisk1]
exten =&gt; 09011000,1,Dial(IAX2/ast1/1000)
exten =&gt; 09011001,1,Dial(IAX2/ast1/1001)</programlisting></para>
    </section>
  </section>

  <section id="iax-globalekonf">
    <title>Global settings</title>

    <simpara>The following parameters can only be used in the
    <code>[general]</code> section, and so are valid for all channels. You can
    also use some of the channel parameters described in <xref
    linkend="iax-channelkonf" /> in the <code>[general]</code>
    section.</simpara>

    <itemizedlist>
      <listitem>
        <synopsis>bandwidth=[low|medium|high]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>bandwidth</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>bandwidth</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Groups different audio codecs and allows the administrator to
        quickly tailor configurations for specific situations. This is a
        simpler alternative to using <code>allow</code> and
        <code>disallow</code> (<xref
        linkend="iax-globalekonf-allow" />).</simpara>

        <itemizedlist>
          <listitem>
            <para><code>high</code></para>

            <para>Allows all codecs: G.723.1, GSM, ulaw (G.711), alaw, G.726,
            ADPCM, slinear, LPC10, G.729, Speex, iLBC. Should only be used for
            network connections of 10 Mb/s or higher.</para>
          </listitem>

          <listitem>
            <para><code>medium</code></para>

            <para>Disables slinear, ulaw and alaw.</para>
          </listitem>

          <listitem>
            <para><code>low</code></para>

            <para>In addition, disallows G.726 and ADPCM.</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <synopsis>allow=[all|<replaceable>name_of_codec</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>allow</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>allow</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Codecs may be specifically allowed (<code>allow</code>) or
        disabled (<code>disallow</code>). The default is
        <code>allow=all</code>. Available codecs include:<code> g723.1</code>,
        <code>gsm</code>, <code>ulaw</code>, <code>alaw</code>,
        <code>g726</code>, <code>slinear</code>, <code>plc10</code>,
        <code>adpcm</code>, <code>g729</code>, <code>speex</code>,
        <code>ilbc</code>, <code>h261</code>, <code>h263</code> and the
        placeholder <code>all</code>. See also <code>bandwidth</code> (<xref
        linkend="iax-globalekonf-bandwidth" />) for a simple alternative. The
        parameters <code>allow</code> and <code>disallow</code> are the only
        ones which may be used more than once.</simpara>

        <simpara>In this example, only <code>ulaw</code> and <code>gsm</code>
        are allowed:</simpara>

        <programlisting>disallow=all
allow=ulaw
allow=gsm</programlisting>
      </listitem>

      <listitem>
        <synopsis>disallow=[all|<replaceable>name_of_codec</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>disallow</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>disallow</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>See <code>allow</code> (<xref
        linkend="iax-globalekonf-allow" />).</simpara>
      </listitem>

      <listitem>
        <synopsis>codecpriority=[caller|host|disabled|reqonly]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>codecpriority</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>codecpriority</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Sets which party on an incoming call has higher priority in
        audio processing. Default: <code>host.</code></simpara>

        <itemizedlist>
          <listitem>
            <para>caller</para>

            <para>The caller has priority over the host.</para>
          </listitem>

          <listitem>
            <para>host</para>

            <para>The host has priority over the caller.</para>
          </listitem>

          <listitem>
            <para>disabled</para>

            <para>Codec preferences are ignored.</para>
          </listitem>

          <listitem>
            <para>reqonly</para>

            <para>Codec preferences are ignored and the call only accepted if
            the codec is available.</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <synopsis>authdebug=[yes|no]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>authdebug</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>authdebug</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Simple debug output for IAX authorization is on by default.
        This can be deactivated with <code>authdebug=no</code>.</simpara>
      </listitem>

      <listitem>
        <synopsis>autokill=[yes|<replaceable>timeout_in_milliseconds</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>autokill</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>autokill</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>If <code>autokill</code> is not set, Asterisk will attempt to
        reach an unreachable host for a long time. If many such attempts occur
        in parallel, it can have consequences for overall system performance.
        When <code>autokill=yes</code>, the connection is terminated after
        2000 milliseconds; alternatively, the timeout may be
        specified.</simpara>
      </listitem>

      <listitem>
        <synopsis>amaflags=[default|omit|billing|documentation]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>amaflags</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>amaflags</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>AMA is short for "Automatic Message Accounting", which
        specifies a standard call logging and reporting format (see <xref
        linkend="glossary-AMA" />) for call detail records (CDR).</simpara>

        <simpara>When set to <code>omit</code>, no AMA flags are
        set..</simpara>
      </listitem>

      <listitem>
        <synopsis>bindaddr=[<replaceable>ip_address</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>bindaddr</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>bindaddr</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Sets listener IP address. Default: <code>0.0.0.0</code>
        (meaning all addresses).</simpara>
      </listitem>

      <listitem>
        <synopsis>bindport=[<replaceable>port_number</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>bindport</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>bindport</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Sets the listening port. The default port for IAX2 is 4569
        (IAX Version 1: 5036).</simpara>

        <warning>
          <simpara>This setting must always appear <emphasis>before</emphasis>
          <code>bindaddr</code>!</simpara>
        </warning>
      </listitem>

      <listitem>
        <synopsis>delayreject=[yes|no]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>delayreject</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>delayreject</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Set this to <code>yes</code> to hinder brute-force password
        crack attempts. When set <code>yes</code>, the listener waits 1000 ms
        (or 1 second) before accepting a new attempt. Default:
        <code>no</code></simpara>
      </listitem>

      <listitem>
        <synopsis>language=[<replaceable>language_abbreviation</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>language</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>language</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Sets the language for the corresponding channel. The global
        default is English. The set language is sent by the channel as a tag
        and is read by applications such as <code>SayNumber()</code>, in order
        to decide which audio files to use for playback.</simpara>

        <simpara>Language abbreviations are two-letter codes based on ISO
        3166-1 alpha-2:</simpara>

        <programlisting>language=es</programlisting>
      </listitem>

      <listitem>
        <synopsis>tos=[cs0|cs1|cs2|cs3|cs4|cs5|cs6|cs7|af11|af12|af13|af21|af22|af23|af31|af32|af33|af41|af42|af43|ef]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>tos</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>tos</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>ToS (or "Type of Service"); sets flags in the IP header which
        are used for prioritizing traffic in network routers and switches.
        This is so that time-sensitive traffic can be transmitted before other
        data. The recommended setting for IAX is <code>tos=ef</code>. EF means
        "Expedited Forwarding"; this seeks reduced latency, reduced loss rate,
        and low jitter. The default is <code><code>none</code></code> (for
        backwards compatibility).</simpara>

        <simpara>The large number of allowed values and flags will not be
        described here. If you want to read further, have a look at the
        specifications for differentiated services in RFC 2474 and the
        IANA-DSCP registry (http://www.iana.org/assignments/dscp-registry).
        Asterisk specific details may be found in
        <filename>doc/ip-tos.txt</filename>.</simpara>
      </listitem>

      <listitem>
        <synopsis>adsi=[yes|no]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>adsi</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>adsi</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>ADSI (Analog Display Services Interface) are a suite of data
        services for analog telephones <footnote>
            <simpara>Relayed to the set using FSK (Frequency Shift
            Keying).</simpara>
          </footnote>with a display, such as the Nortel Vista series
        phones.</simpara>

        <simpara>You can activate this service if your sets support
        it.</simpara>
      </listitem>

      <listitem>
        <synopsis>register =&gt; <replaceable>username[:password]@remote-host</replaceable></synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>register</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>register</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>If our Asterisk server is only reachable via a dynamically
        assigned IP (assuming no DNS, just an IP address), it must register
        itself whenever the IP address changes so that the remote system will
        know where to send calls. This behavior is set with <code>register
        =&gt;</code>.</simpara>

        <simpara>Note that <code>register</code> settings are only used when
        the remote host has defined your system as a peer and set
        <code>host=dynamic</code> in its own configuration.</simpara>

        <simpara>The basic form of a register setting looks like
        this:</simpara>

        <simpara><code>register =&gt;
        username[:password]@remote-host</code></simpara>

        <simpara>You may embed an RSA key name<footnote>
            <simpara>Asterisk RSA keys may be found in
            <filename>/var/lib/asterisk/keys/</filename>. You can generate
            your own using the <command>astkey</command> script
            provided.</simpara>
          </footnote> instead of using a password. If you do this, the key
        name must be in square brackets:<footnote>
            <simpara>The square brackets are required and should not be
            interpreted as describing an option, as they do in the rest of the
            book.</simpara>
          </footnote></simpara>

        <simpara><code>register =&gt;
        username:[<replaceable>rsa-key-name</replaceable>]@<replaceable>remote-host</replaceable></code></simpara>

        <simpara>Registration requests are sent over port 4569 by default.
        This may be overridden by appending the suffix
        <code>:<replaceable>portnumber</replaceable></code>
        (<emphasis>e.g.</emphasis> <code>:4444</code>) to the
        hostname.</simpara>
      </listitem>
    </itemizedlist>
  </section>

  <section id="iax-channelkonf">
    <title>Channel-specific settings</title>

    <simpara>The following parameters may be set for individual channels. Some
    of them may also be used in the <code>[general]</code> section.</simpara>

    <itemizedlist>
      <listitem>
        <synopsis>type=[user|peer|friend]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>type</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>type</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Sets whether we are connecting to a <code>user</code>
        (<emphasis>e.g.</emphasis> a user device, which connects to us) or a
        <code>peer</code> (<emphasis>e.g.</emphasis> a gateway, another
        Asterisk PBX, we connect to it). The setting <code>friend</code>
        implies both.</simpara>

        <warning>
          <simpara>If you have not set IP-based access control for all user
          entries (<code>type=user</code>) (see <xref
          linkend="iax-channelkonf-permit" />), you must have a
          <code>[guest]</code> entry in <filename>iax.conf</filename>
          containing neither <code>auth</code> nor <code>secret</code>
          parameters. If you do <emphasis>not</emphasis> do this, you are
          vulnerable to a random user gaining access to your system through a
          guessed password.</simpara>

          <simpara>The configuration might look like this:</simpara>

          <programlisting>[guest]
type=user
callerid="IAX-Guest-User"</programlisting>
        </warning>
      </listitem>

      <listitem>
        <synopsis>accountcode=[<replaceable>account_code</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>accountcode</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>accountcode</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>The provided string is used for the base filename of the call
        accounting files written to
        <filename>/var/log/asterisk/cdr-csv/</filename>. Use only small
        letters, numbers, a dash (-) or underscore (_).</simpara>
      </listitem>

      <listitem>
        <synopsis>bandwidth=[low|medium|high]</synopsis>

        <indexterm>
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>bandwidth</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>bandwidth</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara><code>bandwidth</code> is a parameter which groups audio
        codecs according to bandwidth requirement (see <xref
        linkend="iax-globalekonf-bandwidth" />).</simpara>
      </listitem>

      <listitem>
        <synopsis>allow=[g723|gsm|ulaw|alaw|g726|adpcm|slin|lpc10|g729|speex|ilbc|g726_aal2|all]</synopsis>

        <indexterm>
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>allow</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>allow</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Codecs may be specifically allowed (<code>allow</code>) or
        disabled (<code>disallow</code>). The default is
        <code>allow=all</code>. Available codecs include:<code>g723.1</code>,
        <code>gsm</code>, <code>ulaw</code>, <code>alaw</code>,
        <code>g726</code>, <code>slinear</code>, <code>plc10</code>,
        <code>adpcm</code>, <code>g729</code>, <code>speex</code>,
        <code>ilbc</code>, <code>h261</code>, <code>h263</code> and the
        placeholder <code>all</code>. See also <code>bandwidth</code> (<xref
        linkend="iax-globalekonf-bandwidth" />) for a simple
        alternative.</simpara>

        <simpara>Note that if you specify channel-specific codecs, you may
        need to first disallow codecs that were initially enabled in the
        <code>[general]</code> section with
        <code>disallow=all</code>.</simpara>

        <simpara>Don't confuse these parameters with <code>permit</code> and
        <code>deny</code> (see <xref
        linkend="iax-channelkonf-permit" />).</simpara>

        <programlisting>disallow=all
allow=ulaw
allow=gsm</programlisting>
      </listitem>

      <listitem>
        <synopsis>disallow=[g723|gsm|ulaw|alaw|g726|adpcm|slin|lpc10|g729|speex|ilbc|g726_aal2|all]</synopsis>

        <indexterm>
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>disallow</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>disallow</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>See <code>allow</code> (<xref
        linkend="iax-channelkonf-allow" />)</simpara>
      </listitem>

      <listitem>
        <synopsis>codecpriority=[caller|host|disabled|reqonly]</synopsis>

        <indexterm>
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>codecpriority</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>codecpriority</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Sets which party has priority when processing audio (see
        <xref linkend="iax-globalekonf-codecpriority" />).</simpara>
      </listitem>

      <listitem>
        <synopsis>amaflags=[default|omit|billing|documentation]</synopsis>

        <indexterm>
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>amaflags</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>amaflags</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>AMA is short for "Automatic Message Accounting", a standard
        format for creating and sending call logs and records (see <xref
        linkend="iax-globalekonf-amaflags" />).</simpara>
      </listitem>

      <listitem>
        <synopsis>callerid=[<replaceable>name</replaceable>[ &lt;<replaceable>number</replaceable>&gt;]]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>callerid</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>callerid</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>The parameter <code>callerid</code> lets you set the caller
        ID for a user or peer. Once defined, all calls which come in over this
        channel will be assigned this caller ID, irrespective of what the
        remote host has sent. This is recommended unless you have good reason
        to trust the caller ID information provided by the remote host; in
        many cases it is a simple matter to falsify caller ID
        information.</simpara>

        <simpara>Here is a properly formatted caller ID line:</simpara>

        <simpara><code>callerid="Ron Popeil"
        &lt;8005556000&gt;</code></simpara>
      </listitem>

      <listitem>
        <synopsis>host=[<replaceable>host</replaceable>|<replaceable>dynamic</replaceable>]</synopsis>

        <indexterm>
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>host</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>host</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>The <replaceable>host</replaceable> is either the hostname or
        the IP address of the remote system. If the host has a dynamic IP
        address (that is, one that changes frequently), the setting
        <code>dynamic</code> is used, preferably in combination with
        <code>defaultip</code> (<xref
        linkend="iax-channelkonf-defaultip" />).</simpara>
      </listitem>

      <listitem>
        <synopsis>defaultip=[<replaceable>ip_address</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>defaultip</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>defaultip</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>The <code>defaultip</code> setting is an extension to
        <code>host=dynamic</code> (see <xref
        linkend="iax-channelkonf-host" />). If a dynamic host has not yet
        registered, Asterisk will attempt to contact the host at the provided
        IP first.</simpara>
      </listitem>

      <listitem>
        <synopsis>permit=[<replaceable>ip_address</replaceable>[/<replaceable>netmask</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>permit</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>permit</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara><code>permit</code> and <code>deny</code> allow and limit the
        IP addresses which are allowed to connect to this channel. As a matter
        of good practice, this starts with a <code>deny=0.0.0.0/0.0.0.0</code>
        (block all), and then the trusted IP addresses are explicitly allowed
        with <code>permit</code> statements. Order is significant, and both
        <code>deny</code> and <code>permit</code> may appear multiple times.
        If only a single host is intended, you may omit the netmask (which
        would be <code>255.255.255.255</code>).</simpara>

        <para>This example allows only connections from
        <code>192.168.0.*</code> (netmask 24 bits, class C):</para>

        <programlisting>deny=0.0.0.0/0.0.0.0                ; deny all
permit=192.168.0.102/255.255.255.0  ; allow 192.168.0.*
permit=192.168.5.5                  ; allow 192.168.5.5</programlisting>

        <simpara>Here, we allow everyone <emphasis>except</emphasis>
        <code>192.168.*.*</code>:</simpara>

        <para><programlisting>permit=0.0.0.0/0.0.0.0              ; allow all
deny=192.168.0.0/255.255.0.0        ; deny 192.168.*.*</programlisting></para>

        <simpara>The following example does not make any sense, since it
        begins by denying <code>192.168.0.0</code> -
        <code>192.168.0.127</code>, but then allows everyone, which supersedes
        the initial deny rule. In this case, nothing is denied:</simpara>

        <para><programlisting>deny=192.168.0.0/255.255.255.127
permit=0.0.0.0/0.0.0.0              ; allow all</programlisting></para>
      </listitem>

      <listitem>
        <synopsis>deny=[<replaceable>ip_address</replaceable>/[<replaceable>netmask</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>deny</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>deny</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>See <code>permit</code> (<xref
        linkend="iax-channelkonf-permit" />).</simpara>
      </listitem>

      <listitem>
        <synopsis>auth=[plaintext|md5|rsa]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>auth</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>auth</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Used to identify the remote peers and users. There are three
        available methods: <code>plaintext</code>, <code>md5</code> and
        <code>rsa</code>.</simpara>

        <itemizedlist>
          <listitem>
            <para><code>plaintext</code></para>

            <indexterm significance="preferred">
              <primary><filename>iax.conf</filename></primary>

              <secondary>authentication methods</secondary>

              <tertiary><code>plaintext</code></tertiary>
            </indexterm>

            <indexterm>
              <primary><code>plaintext</code></primary>

              <see><filename>iax.conf</filename>: Parameter:
              <code>auth</code></see>
            </indexterm>

            <para>Very insecure, since the password may be sniffed in transit.
            Not recommended. The password is set with <code>secret</code> (see
            <xref linkend="iax-channelkonf-secret" />).</para>
          </listitem>

          <listitem>
            <para><code>md5</code></para>

            <indexterm significance="preferred">
              <primary><filename>iax.conf</filename></primary>

              <secondary>authentication methods</secondary>

              <tertiary><code>md5</code></tertiary>
            </indexterm>

            <indexterm>
              <primary><code>md5</code></primary>

              <see><filename>iax.conf</filename>: Parameter:
              <code>auth</code></see>
            </indexterm>

            <para>Checks passwords by transmitting an MD5 hash of the password
            in a challenge/response handshake. The password is set with
            <code>secret</code> (see <xref
            linkend="iax-channelkonf-secret" />).</para>
          </listitem>

          <listitem>
            <para><code>rsa</code></para>

            <indexterm significance="preferred">
              <primary><filename>iax.conf</filename></primary>

              <secondary>authentication methods</secondary>

              <tertiary><code>rsa</code></tertiary>
            </indexterm>

            <indexterm>
              <primary><code>rsa</code></primary>

              <see><filename>iax.conf</filename>: Parameter:
              <code>auth</code></see>
            </indexterm>

            <para>The most secure process, which uses public and private key
            pairs. These keys are specified with <code>inkeys</code> (see
            <xref linkend="iax-channelkonf-inkeys" />) and
            <code>outkeys</code> (see <xref
            linkend="iax-channelkonf-outkey" />).</para>
          </listitem>
        </itemizedlist>

        <simpara>Multiple methods may be separated by commas:</simpara>

        <para><programlisting>auth=rsa,md5</programlisting></para>

        <simpara>If neither <code>auth</code> nor <code>secret</code> are
        specified, no authentication is required.</simpara>
      </listitem>

      <listitem>
        <synopsis>secret=[<replaceable>password</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>secret</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>secret</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Sets the passwords for <code>plaintext</code> or
        <code>md5</code> authentication (see <xref
        linkend="iax-channelkonf-auth" />).</simpara>
      </listitem>

      <listitem>
        <synopsis>inkeys=[<replaceable>rsa-key</replaceable>:<replaceable>rsa-key</replaceable>:<replaceable>...</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>inkeys</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>inkeys</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Defines the allowed public keys for <code>rsa</code>
        authentication (see <xref linkend="iax-channelkonf-auth" />) of a
        remote system. Multiple keys are separated with a colon
        (<code>:</code>). Any of the specified keys will be considered
        acceptable for authentication.</simpara>

        <simpara>These keys must be specified with pathnames like so:
        <filename>/var/lib/asterisk/keys/<replaceable>keyname</replaceable>.pub</filename></simpara>
      </listitem>

      <listitem>
        <synopsis>outkey=[<replaceable>rsa-key</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>outkey</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>outkey</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>You may use the <code>outkey</code> to set the private RSA
        key to be used for authenticating with a peer. For outgoing
        authentication, only a single key may be specified. The
        <code>outkey</code> is not distributed; it is a private key and should
        be 3DES encrypted.</simpara>

        <simpara>These keys must be specified with pathnames like so:
        <filename>/var/lib/asterisk/keys/<replaceable>keyname</replaceable>.key</filename></simpara>
      </listitem>

      <listitem>
        <synopsis>mailbox=[<replaceable>mailbox_name</replaceable>[@<replaceable>mailbox-context</replaceable>]]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>mailbox</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>mailbox</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>If set, the voicemail module sends an MWI (message waiting
        indicator) flag to the node at the other end of the channel when there
        are new messages waiting. If the mailbox is in a voicemail context
        other than <code>default</code>, you can specify the context with
        <code><replaceable>mailbox@context</replaceable></code>. To associate
        multiple mailboxes with a single peer, use <code>mailbox</code>
        multiple times.</simpara>
      </listitem>

      <listitem>
        <synopsis>language=[<replaceable>language_abbreviation</replaceable>]</synopsis>

        <indexterm>
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>language</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>language</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Sets the language for the channel. The default language is
        English. This setting is heeded by the voicemail module and speech
        applications such as <code>SayNumber()</code>, to determine which
        sound files to use.</simpara>

        <simpara>Language abbreviations are two-letter codes based on ISO
        3166-1 alpha-2:</simpara>

        <programlisting>language=es</programlisting>
      </listitem>

      <listitem>
        <synopsis>context=[<replaceable>context</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>context</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>context</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>The default context for calls arriving via this
        peer.</simpara>
      </listitem>

      <listitem>
        <synopsis>regcontext=[<replaceable>context</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>regcontext</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>regcontext</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>When specified, execution begins automatically in this
        context upon first registration of the peer. If no extension is
        specified in <code>regexten</code>, the name of the peer is used for
        the extension. Note that in this case, execution always begins with a
        <code>NoOp</code> at priority 1. The first priority in your extension,
        then, should be 2. Multiple contexts may be specified, separated by
        ampersand (<code>&amp;)</code>.</simpara>
      </listitem>

      <listitem>
        <synopsis>regexten=[<replaceable>extension_number</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>regexten</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>regexten</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Used in connection with <code>regcontext</code> to specify
        the extension to be executed in the context. If <code>regexten</code>
        is not explicitly defined, the name of the connecting peer is
        used.</simpara>
      </listitem>

      <listitem>
        <synopsis>jitterbuffer=[yes|no]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>jitterbuffer</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>jitterbuffer</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Turns the jitter buffer on or off (valid for connections in
        which Asterisk is the endpoint). The jitter buffer balances the
        latency of incoming packets.</simpara>

        <simpara>The jitter buffer can have problems if <code>trunk</code> is
        activated (see <xref linkend="iax-channelkonf-trunk" />).</simpara>
      </listitem>

      <listitem>
        <synopsis>forcejitterbuffer=[yes|no]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>forcejitterbuffer</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>forcejitterbuffer</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>It is typically the job of the device to implement a jitter
        buffer.<footnote>
            <simpara>Jitter refers to variable latency of packets in a data
            stream. If the variability is too great, it can cause dropouts or
            artifacts in the resulting audio.</simpara>
          </footnote> In the event the remote device has a poorly-functioning
        jitter buffer, you can use Asterisk as a VoIP bridge and use
        Asterisk's jitter buffer.</simpara>
      </listitem>

      <listitem>
        <synopsis>maxjitterbuffer=[<replaceable>milliseconds</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>maxjitterbuffer</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>maxjitterbuffer</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Sets the maximum size of the jitter buffer. As a rule, this
        shouldn't be set higher than 500, since large jitter buffering can
        itself lead to audio dropouts.</simpara>
      </listitem>

      <listitem>
        <synopsis>resyncthreshold=[<replaceable>milliseconds</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>resyncthreshold</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>resyncthreshold</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>If jitter increases dramatically over a small number of
        frames, Asterisk will resynchronize them under the assumption that the
        large variation is caused by an error in the timestamps. The
        resynchronization threshold is the sum of the measured variance and
        the value of <code>resyncthreshold</code>, given in
        milliseconds.</simpara>
      </listitem>

      <listitem>
        <synopsis>trunk=[yes|no]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>trunk</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>trunk</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>When set to <code>yes</code>, Asterisk will stream multiple
        active calls over a single connection. This can dramatically reduce
        overhead. The trunk mode works only with suitable hardware (Digium
        Zaptel) or emulation software for timing purposes.</simpara>

        <note>
          <simpara>In Version 1.2.x, the jitter buffer (see <xref
          linkend="iax-channelkonf-jitterbuffer" />) does not work well when
          <code>trunk=yes</code>.</simpara>
        </note>
      </listitem>

      <listitem>
        <synopsis>trunkfreq=[<replaceable>interval_in_milliseconds</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>trunkfreq</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>trunkfreq</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>Defines how often Asterisk will send trunk messages. Valid
        only when <code>trunk=yes</code>.</simpara>
      </listitem>

      <listitem>
        <synopsis>qualify=[yes|no|<replaceable>interval_in_milliseconds</replaceable>]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>qualify</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>qualify</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>When <code>qualify=yes</code>, Asterisk sends messages at set
        intervals to peers to check if they are available, and, if so,
        determine the latency. If no reply is received within 2000 ms, the
        peer is flagged as unavailable. The wait interval can also be
        specified explicitly. Note that some devices (hard- or softphones) do
        not handle qualify messages properly.</simpara>
      </listitem>

      <listitem>
        <synopsis>qualifysmoothing=[yes|no]</synopsis>

        <indexterm significance="preferred">
          <primary><filename>iax.conf</filename></primary>

          <secondary>Parameter</secondary>

          <tertiary><code>qualifysmoothing</code></tertiary>
        </indexterm>

        <indexterm>
          <primary><code>qualifysmoothing</code></primary>

          <see><filename>iax.conf</filename></see>
        </indexterm>

        <simpara>When set to <code>yes</code>, the average of the last two
        replies are used as the input for the availability test. Hosts with
        unstable connections might otherwise be incorrectly labelled as
        unavailable.</simpara>
      </listitem>
    </itemizedlist>
  </section>
</section>
