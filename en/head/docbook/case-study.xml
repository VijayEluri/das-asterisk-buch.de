<?xml version="1.0" encoding="UTF-8"?>
<chapter id="case-study" lang="de" revision="$Revision:495 $">
  <!--% Copyright (c) 2006 - 2007 by 
% Stefan Wintermeyer <sw@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation;
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de-->

  <title>Case example: A typical business telephone system</title>

  <section id="grosse-anlage-einleitung">
    <title id="einleitung">Introduction</title>

    <para>Building on what we've learned in <xref
    linkend="kapitel-installation" />, we'll put together a more comprehensive
    system for a fictional business. This will show you how to handle the
    requirements you're likely to be faced with in real installations.</para>
  </section>

  <section id="personen-der-apfelmus-gmbh">
    <title id="die-apfelmus-gmbh">Widgets, Inc.</title>

    <para>Our fictional company is in the widget manufacturing business. We've
    been charged with the task of planning a phone system for the new office,
    which houses the following departments:</para>

    <itemizedlist>
      <listitem>
        <para>Management (2 people)</para>
      </listitem>

      <listitem>
        <para>Reception (3 people)</para>
      </listitem>

      <listitem>
        <para>Domestic sales (6 people)</para>
      </listitem>

      <listitem>
        <para>International sales (4 people)</para>
      </listitem>

      <listitem>
        <para>Production (50 people)</para>
      </listitem>

      <listitem>
        <para>Shipping (10 people)</para>
      </listitem>

      <listitem>
        <para>IT (2 people)</para>
      </listitem>

      <listitem>
        <para>Building manager (1 person)</para>
      </listitem>
    </itemizedlist>

    <para>Every employee has his or her own phone.</para>
  </section>

  <section id="apfelmus-rufnummernplan">
    <title id="rufnummernplan">The numbering plan</title>

    <para>The business has 78 employees. Though it's possible to get by with
    two-digit extension numbers, we'll use three; this leaves us some
    breathing room in the event the company expands or we need more extensions
    (for example, for fax machines or for group numbers).</para>

    <informaltable>
      <tgroup cols="3">
        <tbody>
          <row>
            <entry><emphasis role="bold">Number range</emphasis></entry>

            <entry><emphasis role="bold">Description</emphasis></entry>

            <entry><emphasis role="bold">Explanation</emphasis></entry>
          </row>

          <row>
            <entry>911</entry>

            <entry>Emergency number</entry>

            <entry>Emergency numbers should be absolutely intuitive. In the
            case of fire or serious injury, no employee should have to think
            twice about what number to dial.<footnote>
                <para>9-1-1 is the universal emergency number for the North
                American Numbering Plan (NANP). If you are configuring systems
                for an international business, you may wish to consider adding
                9-9-9 and 1-1-2 as well, as these are standard emergency
                numbers for the UK and continental Europe,
                respectively.</para>
              </footnote></entry>
          </row>

          <row>
            <entry>150 - 159</entry>

            <entry>Building manager</entry>

            <entry>The building manager is responsible for all building
            operations.</entry>
          </row>

          <row>
            <entry>160 - 169</entry>

            <entry>IT</entry>

            <entry>The IT department is responsible for computer and network
            operations.</entry>
          </row>

          <row>
            <entry>200 - 229</entry>

            <entry>Management</entry>

            <entry>The managers have 2XX extensions.</entry>
          </row>

          <row>
            <entry>230 - 269</entry>

            <entry>Reception</entry>

            <entry>As reception will mostly be fielding calls to management,
            they have numbers in the range 230-269. Numbers from 270-299 are
            kept in reserve.</entry>
          </row>

          <row>
            <entry>300 - 349</entry>

            <entry>Domestic Sales</entry>

            <entry>Sales gets the entire 3XX number block, to ensure adequate
            reserve in case of expansion. The first 50 numbers are allocated
            to Domestic Sales.</entry>
          </row>

          <row>
            <entry>350 - 399</entry>

            <entry>International Sales</entry>

            <entry>The second 50 numbers are allocated to International
            Sales.</entry>
          </row>

          <row>
            <entry>400 - 449</entry>

            <entry>Shipping</entry>

            <entry>The first half of the 4XX number block is allocated to
            Shipping.</entry>
          </row>

          <row>
            <entry>500 - 599</entry>

            <entry>Production</entry>

            <entry>Production is the largest department and gets the entire
            5XX block.</entry>
          </row>

          <row>
            <entry>800 - 899</entry>

            <entry>Internal services</entry>

            <entry>Special services and non-standard extensions, e.g.,
            voicemail or teleconferencing.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>

  <section id="apfelmus-infrastruktur">
    <title>Auswahl der Infrastruktur</title>

    <para>Da in dem neuen Gebäude bereits eine strukturierte und moderne
    Netzwerkverkabelung vorliegt, ist es eine naheliegende Idee, jeden
    Arbeitsplatz mit einem SIP-Telefon auszustatten. So müssen nicht extra
    Kabel für das Telefonnetz verlegt werden. Die Faxe und schnurlosen
    Telefone werden über SIP-to-Analog-Adapter angeschlossen. Der
    Asterisk-Server wird in einem ordentlich ausgestatteten Serverraum mit
    entsprechender Klimatisierung untergebracht, mit Sicherheitseinrichtungen
    und Zugangskonzept. Durch das Zugangskonzept und die
    Sicherheitseinrichtungen haben auch nur diejenigen Personen Zugriff auf
    die Anlage, die dazu berechtigt sind.<footnote>
        <para>Noch vor 10 Jahren war es bei vielen Telefonanlagenherstellern
        üblich, sich ''Hintertüren'' in große Anlagen einzubauen. So konnte
        man ohne großen Aufwand bei Problemen schnell helfen, indem man sich
        über einen offenen Port von außen in die Anlage einwählte. Böse
        Geister nutzten diese Möglichkeit allerdings auch, um auf Kosten der
        Eigentümer (meistens große Behörden, in denen die Übersicht fehlte)
        Fern- oder Auslandsgespräche zu führen.</para>
      </footnote></para>

    <section id="apfelmus-netzwerk">
      <title>Netzwerk</title>

      <para>Die wichtigste Regel, der man sich stets bewusst sein sollte, ist,
      dass Telefonie ein synchrones Medium ist, d.h. die Informationen müssen
      für den Sender und den Empfänger praktisch "gleichzeitig" vorliegen und
      dies über die Dauer der gesamten Kommunikation. Während wir in einem
      Telefongespräch Verzögerungen bis ca. 300 ms noch einigermaßen
      tolerieren, werden Pausen von einer halben Sekunde und mehr als sehr
      störend empfunden und kaum akzeptiert. Bei der IP-Telefonie wird ein
      synchrones Kommunikationsmittel über eine asynchrone Technik
      transportiert. Die Funktionsweise des TCP/IP-Protokolls des Internets
      wurde auf Störfestigkeit und Robustheit hin ausgelegt und nicht auf
      einen Datentransport in Echtzeit. Für den Transport von E-Mails zum
      Beispiel ist es völlig unerheblich, ob im Datentransport mehrere
      Unterbrechungen von einigen Sekunden liegen. Dass es überhaupt möglich
      ist, Telefonie via IP unter diesen Bedingungen erfolgreich umzusetzen,
      liegt an der Leistungsfähigkeit der heutigen Netzwerktechnologie.
      Dadurch, dass die zu übertragene Datenmenge im Verhältnis zur
      vorhandenen Übertragungskapazität deutlich geringer ist, können die
      Anforderungen quasi in Echtzeit umgesetzt werden. Bei den meisten
      Netzwerken liegen jedoch häufig unterschiedliche Lastzustände vor, d.h.
      die zur Verfügung stehende Bandbreite wird zu unterschiedlichen Zeiten
      mal stärker und mal weniger stark ausgenutzt. In fast allen Unternehmen
      kann man beobachten, wie die Auslastung des Netzwerks dem Rhythmus des
      Arbeitstages folgt. Zwischen 8 Uhr morgens und 18 Uhr abends steigt die
      Auslastung in der Regel, da die Mitarbeiter zum Beispiel E-Mails
      schreiben, im Web surfen, Daten herunterladen etc. Zu den Zeiten, in
      denen die Mitarbeiter intensiv arbeiten, telefonieren sie aber auch,
      d.h. unsere IP-Telefone konkurrieren mit dem restlichen Netzwerkverkehr
      um die zur Verfügung stehende Bandbreite. Und während es für die
      Zustellung einer E-Mail kein größeres Problem darstellt, wenn die
      Verbindungsgeschwindigkeit sinkt -- es dauert halt etwas länger --, kann
      es für unsere IP-Telefone kritisch werden, wenn die Bandbreite unter den
      Mindestbedarf fällt. Die Sprachqualität leidet dann deutlich, es kommt
      zu Aussetzern und Sprachfetzen. Wie störend das ist, kennt sicherlich
      jeder von Telefonaten mit dem Mobiltelefon bei einer schlechten
      Verbindung. Um mit den unterschiedlichen Anforderungen der jeweiligen
      Verbindungsarten besser umgehen zu können, verfügen professionelle
      Netzwerkrouter über die Möglichkeit, Netzwerkverkehr je nach Typ zu
      priorisieren.<footnote>
          <para>TOS - Type Of Service</para>
        </footnote></para>

      <para>Diese Maßnahme ist zwar geeignet, den Netzwerkverkehr nach innen
      und außerhalb des eigenen Netzwerkanschlusses zum Internet-Provider
      entsprechend zu regeln, jedoch hat dies keinen Einfluss auf die
      Lastsituation im Netz des Providers. Erst wenn der Provider
      entsprechende Garantien für Übertragungskapazitäten für bestimmte
      Verbindungstypen<footnote>
          <para>QOS - Quality Of Service</para>
        </footnote> anbietet, kann die Kette lückenlos geschlossen werden.
      Falls Sie also mehrere Standorte in Ihrem Unternehmen via IP-Telefonie
      verbinden möchten, sollten Sie dies in Ihrer Planung berücksichtigen und
      mit Ihrem Provider darüber sprechen. Die Telefonanlage der Apfelmus GmbH
      bedient 78 Endgeräte. Das heißt, dass im schlimmsten Fall 39 zeitgleiche
      interne Verbindungen zustande kommen können, wenn die Mitarbeiter sich
      nur intern anrufen. Abhängig vom verwendeten Codec für die Kodierung des
      Audiosignals ergibt sich ein Netzwerkverkehr von maximal 6.500
      kbps<footnote>
          <para>kbps = kilobits per second</para>
        </footnote>, was für die heute gängigen 100 Mbps<footnote>
          <para>Mbps = Megabits per second, also 1.024 kbps</para>
        </footnote> an Netzwerkbandbreite in strukturierten
      Inhouse-Verkabelungen keine Herausforderung darstellt. Dennoch sollten
      Sie berücksichtigen, dass anderer Netzwerkverkehr ebenfalls übertragen
      wird und die verfügbare Bandbreite rasch an Grenzen stoßen kann. Wie
      kommt der Wert von 6.500 kbps zu Stande? Für die Inhouse-Verbindungen
      greifen wir in unserem Beispiel auf den a-law<footnote>
          <para>Eigentlich G.711, der in zwei Varianten auftritt als a-law und
          u-law.</para>
        </footnote> Codec zurück, der auch im ISDN-Netz zum Einsatz kommt. Er
      bietet eine sehr gute Sprachqualität, benötigt dafür aber auch 64 kbps
      Bandbreite. Jede Verbindung besteht aus einem eingehenden und einem
      ausgehenden Kanal mit jeweils 64 kbps, die 39 Verbindungen summieren
      sich auf: 2*39*64 kbps = 4.992 kbps. Zum Bandbreitenbedarf des Codecs
      kommt noch ein Overhead durch das TCP/IP-Protokoll hinzu, so dass aus
      den 64 kbps ca. 80 kbps an Netzwerkverkehr werden. Legt man der Rechnung
      nun die 80 kbps zu Grunde, ergibt das 6.280 kbps, aufgerundet erhält man
      die genannten 6.500 kbps. Dabei sind die 6.500 kbps natürlich nur ein
      Worst-Case-Szenario. Trotzdem sollte man immer für genau dieses gerüstet
      sein!<footnote>
          <para>Auf der Webseite <ulink
          url="http://www.asteriskguru.com/tools/bandwidth_calculator.php">http://www.asteriskguru.com/tools/bandwidth_calculator.php</ulink>
          finden Sie ein einfaches Online-Tool zur Bandbreitenberechnung
          verschiedener Codecs.</para>
        </footnote><tip>
          <para>Wer sich am Anfang einer solchen Installation nicht sicher
          ist, ob die Netzwerkbandbreite ausreicht, sollte lieber einen
          verlustbehafteteren Codec wie GSM benutzen. Der benötigt mit 13-15
          kbps nur ein Fünftel der Bandbreite vom a-law Codec und hat eine
          akzeptable Sprachqualität. Später kann man dann einzelne Bereiche
          Stück für Stück auf bessere Codecs umstellen und dabei beobachten,
          ob es Netzwerkprobleme gibt. Sie sollten dabei jedoch die Auslastung
          der CPU im Auge behalten, da die komprimierenden Codecs deutlich
          mehr Rechenleistung in Anspruch nehmen.</para>
        </tip></para>
    </section>

    <section id="apfelmus-server-hardware">
      <title>Server-Hardware</title>

      <para>Die Anforderungen, die ans Netzwerk gestellt werden, treffen im
      Prinzip auch auf die verwendete Hardware des Rechners zu. Die
      Notwendigkeit der synchronen Datenübertragung erfordert auch eine
      entsprechend zeitnahe Abarbeitung der notwendigen Vorgänge durch den
      verwendeten Rechner. Hierbei gibt die Kodierung und Dekodierung des
      Sprachsignals den Leistungsbedarf vor, insbesondere dann, wenn die
      beteiligten Endgeräte unterschiedliche Codecs verwenden und Asterisk die
      ankommenden und ausgehenden Datenströme umkodieren muss. Aufgrund der
      großen Bandbreite an verfügbarer Hardware und dem jeweils spezifischen
      Leistungsvermögen gibt es keine einfache Regel für die Bemessung. Als
      eine erste Orientierung soll folgende Staffelung dienen:</para>

      <informaltable>
        <tgroup cols="3">
          <tbody>
            <row>
              <entry>CPU</entry>

              <entry>Anzahl der Verbindungen</entry>

              <entry>Anzahl der Nebenstellen</entry>
            </row>

            <row>
              <entry>1,0 GHz</entry>

              <entry>15</entry>

              <entry>40</entry>
            </row>

            <row>
              <entry>1,5 GHz</entry>

              <entry>40</entry>

              <entry>100</entry>
            </row>

            <row>
              <entry>2,0 GHz</entry>

              <entry>80</entry>

              <entry>200</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>Mit CPU ist an dieser Stelle eine handelsübliche CPU eines IBM-PC
      kompatiblen Rechners (z.B. von Intel, AMD) gemeint. Bei der Berechnung
      der möglichen Anzahl von Nebenstellen gehen wir davon aus, dass nicht
      alle Nutzer zur gleichen Zeit telefonieren, sondern im Mittel ein
      Drittel bis die Hälfte. Bitte betrachten Sie die angegebenen Werte
      lediglich als eine grobe Orientierung, die zudem eher konservativ
      geschätzt wurde, d.h. mit deutlicher Reserve. Fallen wenig
      Umkodierungen, Konferenzschaltungen und Echo-Unterdrückungen an, dann
      können deutlich mehr gleichzeitige Verbindungen bewältigt werden. Die
      genaue Zahl kann oftmals nur durch sinnvolles Ausprobieren ermittelt
      werden.</para>

      <tip>
        <para>Unter Linux gibt es mit <command>top</command> ein einfaches
        Tool, um im laufenden Betrieb zu sehen, wie hoch die Last auf dem
        Rechner ist. Allerdings gibt Ihnen das natürlich immer nur den
        aktuellen Wert und reicht nicht für eine Langzeitanalyse. Dazu können
        Sie leistungsstarke Tools wie Nagios <ulink
        url="http://www.nagios.org">http://www.nagios.org</ulink> verwenden.
        Wer sich mit "Bordmitteln" weiterhelfen will, kann auch einen cronjob
        (siehe <command>man crontab</command>) mit folgendem Befehl
        aufsetzen:<programlisting>w | head -n 1 | logger</programlisting></para>

        <para>Damit kann man sich (entsprechend in
        <filename>/etc/cronjob</filename> eingestellt) jede Minute einmal die
        aktuelle Systemlast in die Datei
        <filename>/var/log/messages</filename> schreiben lassen und diese dann
        am Monatsende auswerten.<footnote>
            <para>Es sollte jedem Leser bewusst sein, dass dieser Cronjob
            wirklich nur ein sehr einfaches Mittel zur Analyse ist.</para>
          </footnote></para>
      </tip>

      <para>In unserem Beispiel haben wir 78 Benutzer, bei denen im Mittel
      nicht mehr als 40 gleichzeitige Verbindungen vorliegen sollten, somit
      wäre ein Rechner mit einer halbwegs aktuellen CPU<footnote>
          <para>Zum Beispiel Pentium 4, AMD Athlon</para>
        </footnote></para>

      <para>mit 1,5 GHz Taktfrequenz geeignet. Je aktueller CPU und
      Gesamtsystem sind, desto höher ist in der Regel die Leistung und es
      können bei gleicher Taktfrequenz deutlich mehr Gespräche gleichzeitig
      abgearbeitet werden. Ein Dual-CPU System verbessert hier den Wert
      ebenfalls, da die Rechenleistung für notwendige Aufgaben des
      Betriebssystems besser verteilt wird. Für die Voicemailboxen benötigt
      man ca. 0,1 MByte pro aufgezeichneter Minute<footnote>
          <para>Dies gilt für das Format wav49 oder GSM, wenn Sie hingegen das
          unkomprimierte Format WAV verwenden, steigt der Platzbedarf um ein
          Vielfaches.</para>
        </footnote> an Speicherplatz. Stattet man jeden Nutzer mit 30 Minuten
      aus, wären für unser Beispiel ca. 2 GByte an freiem Festplattenspeicher
      ausreichend bemessen. Da die aufgezeichneten Daten denselben Stellenwert
      wie Geschäftsdaten haben, sollten sie entsprechend gegen Ausfall und
      Verlust abgesichert werden. Ein RAID-System<footnote>
          <para>Bitte beachten Sie, dass ein Software-RAID die CPU
          entsprechend zusätzlich belastet, was in unserem Fall eher
          unerwünscht ist, deshalb ist eine vernünftige Lösung in Hardware
          angeraten.</para>
        </footnote> mit zwei Festplatten im Mirroring-Modus (Level 1) sollte
      hierbei ausreichend Absicherung gewährleisten. Für unser Beispiel würden
      zwei 18 GByte SCSI-Festplatten im RAID 1-Verbund ausreichend sein. Die
      Anforderungen an den verfügbaren Arbeitsspeicher (RAM) sind sehr
      moderat. Mit 512 MByte ist das System ausreichend bemessen und ab 1
      GByte können selbst große Gruppen problemlos versorgt werden. Alle
      zusätzlichen Maßnahmen, wie die Auswahl professioneller Hardware für den
      Einsatz in Servern, die Ausstattung mit redundanten Netzteilen und mit
      hochwertigen Komponenten erhöhen die Ausfallsicherheit und Betriebstreue
      des Systems und damit in Folge die Akzeptanz durch die Nutzer - die es
      eher gelassen nehmen, wenn der E-Mail-Server mal 10 Minuten offline ist,
      aber das Telefon muss immer funktionieren.</para>
    </section>
  </section>

  <section id="apfelmus-grundkonfiguration">
    <title>Die Grundkonfiguration</title>

    <para>Als Erstes wird die Telefonanlage so konfiguriert, dass alle
    Teilnehmer intern miteinander telefonieren können und jeder eine
    persönliche Voicemailbox hat. Danach kann die Anlage mit einzelnen
    Bausteinen erweitert werden.</para>

    <section id="apfelmus-sip.conf">
      <title>sip.conf für fast 100 Teilnehmer</title>

      <para>Der Aufbau einer <filename>/etc/asterisk/sip.conf</filename> für 2
      Teilnehmer unterscheidet sich nicht vom Aufbau für 100 Teilnehmer. In
      der <filename>sip.conf</filename> müssen alle SIP-Telefone eingetragen
      werden. Folgend finden Sie die gekürzte Fassung der Konfigurationsdatei
      <filename>sip.conf</filename> für die Apfelmus GmbH. Kommentare werden
      hier immer mit <code>;</code> eingeleitet. Diese Konfigurationsdatei ist
      analog zum Beispiel im Kapitel 1 aufgebaut. Bei der Auswahl der
      Rufnummern wurden an die Teilnehmer vornehmlich Nummern vergeben, die
      nicht auf die Ziffer 0 enden. Der Grund hierfür ist, dass die Endziffer
      0 an späterer Stelle für die Zuteilung von Gruppenrufnummern dienen
      soll. Lediglich beim Hausmeister wurde eine Ausnahme gemacht, da für ihn
      keine Gruppenrufnummer vorgesehen ist.</para>

      <programlisting>[general]
port = 5060
bindaddr = 0.0.0.0
context = sonstige

; Hausmeister
;
[150]  ; normales Telefon im Buero
context=hausmeister
secret=1234
callerid="Hausmeister" &lt;150&gt;
type=friend
host=dynamic

[151]  ; Mobiltelefon
context=hausmeister
secret=1234
callerid="Hausmeister" &lt;150&gt;
type=friend
host=dynamic

; Interne IT Abteilung
;
[161]  ; Mitarbeiter 1
context=it
secret=1234
type=friend
host=dynamic

[162]  ; Mitarbeiter 2
context=it
secret=1234
type=friend
host=dynamic

[165]  ; Mobiles Telefon
context=it
secret=1234
type=friend
host=dynamic

; Geschaeftsfuehrung
;
[201]  ; Geschaeftsfuehrer 1
context=geschaeftsfuehrung
secret=1234
type=friend
host=dynamic

[202]  ; Geschaeftsfuehrer 2
context=geschaeftsfuehrung
secret=1234
type=friend
host=dynamic

; Sekretariat
;
[231]  ; Assistentin 1
context=sekretariat
secret=1234
type=friend
host=dynamic

[232]  ; Assistentin 2
context=sekretariat
secret=1234
type=friend
host=dynamic

[233]  ; Assistentin 3
context=sekretariat
secret=1234
type=friend
host=dynamic

; Verkauf National
;
[301]  ; Verkaeufer 1
context=verkauf-national
secret=1234
type=friend
host=dynamic

[302]  ; Verkaeufer 2
context=verkauf-national
secret=1234
type=friend
host=dynamic

[303]  ; Verkaeufer 3
context=verkauf-national
secret=1234
type=friend
host=dynamic

[304]  ; Verkaeufer 4
context=verkauf-national
secret=1234
type=friend
host=dynamic

[305]  ; Verkaeufer 5
context=verkauf-national
secret=1234
type=friend
host=dynamic

[306]  ; Verkaeufer 6
context=verkauf-national
secret=1234
type=friend
host=dynamic

; Verkauf Ausland
;
[351]  ; Verkaeufer 1
context=verkauf-ausland
secret=1234
type=friend
host=dynamic

[352]  ; Verkaeufer 2
context=verkauf-ausland
secret=1234
type=friend
host=dynamic

[353]  ; Verkaeufer 3
context=verkauf-ausland
secret=1234
type=friend
host=dynamic

[354]  ; Verkaeufer 4
context=verkauf-ausland
secret=1234
type=friend
host=dynamic

; Versand
;
[401]  ; Mitarbeiter 1
context=versand
secret=1234
type=friend
host=dynamic

; die weiteren 9 Eintraege fuer den 
; Versand sind hier ausgelassen.

; Produktion
;
[501]  ; Mitarbeiter 1
context=produktion
secret=1234
type=friend
host=dynamic

; die weiteren 49 Eintraege fuer die 
; Produktion sind hier ausgelassen.</programlisting>

      <para>Wer die sip.conf komfortabler mit Templates gestalten will, findet
      im <xref linkend="anhang-conf-templates" /> weitere Informationen
      dazu.</para>

      <section id="apfelmus-callerid">
        <title>CallerID</title>

        <para>In der <filename>sip.conf</filename> kommt zweimal die Variable
        <code>callerid</code> vor. Mit dieser Variable wird festgelegt, was
        beim Angerufenen auf dem Display angezeigt wird. Im konkreten
        Beispiel:<programlisting>callerid = "Hausmeister" &lt;150&gt;</programlisting>Dies
        sagt aus, dass sich beide Telefone (150 und 151) mit der Caller-ID 150
        und dem Text ''Hausmeister'' zu erkennen geben. Dadurch ist
        sichergestellt, dass Rückrufe immer nur auf die 150 gehen.</para>
      </section>
    </section>

    <section id="apfelmus-dialplan">
      <title>Der Wählplan (Dialplan)</title>

      <para>Im ersten Kapitel haben wir schon einen einfachen Dialplan für
      zwei Telefone erstellt. Diesmal haben wir jedoch deutlich mehr
      Teilnehmer und obwohl es im Grunde lediglich Fleißarbeit bedeutet, ist
      die Pflege einer Konfiguration mit einigen Hundert Teilnehmern
      zeitaufwändig. Weiterhin fördert eine schlechte Übersichtlichkeit das
      Einschleichen von Fehlern. Aus diesen Gründen beschäftigen wir uns am
      Anfang dieses Abschnitts mit ein paar Asterisk-Funktionen, die uns das
      Leben einfacher und die <filename>extensions.conf</filename>
      übersichtlicher machen.</para>

      <section id="apfelmus-pattern-matching">
        <title>Platzhalter - Pattern Matching</title>

        <para>Asterisk bietet die Möglichkeit mit Platzhaltern<footnote>
            <para>Unix- und Linux-Fans werden das Konzept des ''Pattern
            Matching'' von den ''regulären Ausdrücken'' in Programmen wie
            <command>grep</command> und <command>sed</command> kennen.</para>
          </footnote> zu arbeiten. Durch sinnvolles Gruppieren von
        Nummernblöcken und Zuordnungen können mit Platzhaltern ganze
        Nummernbereiche mit einzelnen Konfigurationszeilen verwaltet werden.
        Im Prinzip enthält eine Konfigurationszeile einen variablen
        Nummernbereich, der mit Hilfe von ''Pattern Matching'' die definierte
        Regel auf eine Vielzahl von Nummern anwendet. So kann man anstatt der
        folgenden 10 Zeilen: <programlisting>exten =&gt; 2000,1,Dial(SIP/2000,20)
exten =&gt; 2001,1,Dial(SIP/2000,20)
exten =&gt; 2002,1,Dial(SIP/2000,20) 
exten =&gt; 2003,1,Dial(SIP/2000,20)
exten =&gt; 2004,1,Dial(SIP/2000,20)
exten =&gt; 2005,1,Dial(SIP/2000,20)
exten =&gt; 2006,1,Dial(SIP/2000,20)
exten =&gt; 2007,1,Dial(SIP/2000,20)
exten =&gt; 2008,1,Dial(SIP/2000,20)
exten =&gt; 2009,1,Dial(SIP/2000,20)</programlisting>auch nur eine Zeile
        schreiben:</para>

        <programlisting>exten =&gt; _200X,1,Dial(SIP/2000,20)</programlisting>

        <para>Das <code>X</code> steht dann für alle Zahlen von 0 bis
        9.<footnote>
            <para>Das Beispiel macht natürlich wenig Sinn. Warum sollte der
            Anrufer die 2009 wählen, um zur 2000 verbunden zu werden? Zur
            Lösung dieses Problems kommen wir gleich.</para>
          </footnote> Wichtig dabei ist, dass der Suchbegriff (das Pattern)
        mit einem <code>_</code> (Underscore) anfängt, sonst würde Asterisk
        nur auf <code>200X</code> (also eine 200 und den Buchstaben X)
        reagieren, da ja Nebenstellen nicht nur aus Ziffern bestehen
        können/müssen. Das Definieren von Platzhaltern mit Pattern
        Matching<footnote>
            <para>Es gibt keinen wirklich passenden deutschen Begriff zum
            Fachbegriff ''Pattern Matching''. Eine mögliche Übersetzung könnte
            ''Musterabgleich'' oder ''Mustervergleich'' lauten.</para>
          </footnote> beinhaltet, dass man bestimmte Zeichenketten oder
        Zahlenfolgen durch entsprechend vordefinierte Platzhalter
        ersetzt.</para>

        <para>In Asterisk kann man folgende Patterns benutzen:</para>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><emphasis role="bold">Pattern</emphasis></entry>

                <entry><emphasis role="bold">Beschreibung</emphasis></entry>
              </row>

              <row>
                <entry><code>X</code></entry>

                <entry>Alle Zahlen von 0 bis 9</entry>
              </row>

              <row>
                <entry><code>Z</code></entry>

                <entry>Alle Zahlen von 1 bis 9</entry>
              </row>

              <row>
                <entry><code>N</code></entry>

                <entry>Alle Zahlen von 2 bis 9<footnote>
                    <para>Der Grund für das Pattern <code>N</code> liegt in
                    der Rufnummernplanung von Amerika. Dort beginnt die
                    Vorwahl nicht wie in Deutschland mit einer 0, sondern mit
                    einer 1. Beispiel: 1-555-12345678</para>
                  </footnote></entry>
              </row>

              <row>
                <entry><code>[nm]</code></entry>

                <entry>Die Zahlen n und m</entry>
              </row>

              <row>
                <entry><code>[n-m]</code></entry>

                <entry>Alle Zahlen von n bis m</entry>
              </row>

              <row>
                <entry><code>.</code></entry>

                <entry>Eine oder mehrere beliebige Zahlen und
                Buchstaben</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

        <warning>
          <para>Ein Pattern muss immer mit einem <code>_</code> (Underscore)
          anfangen!</para>

          <para>Für Asterisk ist sowohl ein <code>2XXX</code> als auch ein
          <code>_2XXX</code> als Wert sinnvoll, wird jedoch vollkommen
          unterschiedlich ausgewertet.</para>
        </warning>

        <section id="apfelmus-patternbeispiele">
          <title>Beispiele für Patterns</title>

          <para>Die folgenden Varianten dienen als Beispiele für die
          Möglichkeiten:</para>

          <informaltable>
            <tgroup cols="2">
              <tbody>
                <row>
                  <entry><emphasis role="bold">Pattern</emphasis></entry>

                  <entry><emphasis role="bold">Beschreibung</emphasis></entry>
                </row>

                <row>
                  <entry>_XXX</entry>

                  <entry>Alle 3-stelligen Zahlen. Wobei auch <code>007</code>
                  eine 3-stellige Zahl ist.</entry>
                </row>

                <row>
                  <entry>_XXX[13579]</entry>

                  <entry>Alle 4-stelligen Zahlen, die ungerade sind.</entry>
                </row>

                <row>
                  <entry>_[1-5]X</entry>

                  <entry>Alle 2-stelligen Zahlen von 10 bis 59.</entry>
                </row>

                <row>
                  <entry>_0.</entry>

                  <entry>Eine beliebige Zeichenkette, die mit einer 0
                  anfängt.</entry>
                </row>

                <row>
                  <entry>_.</entry>

                  <entry>Alles! Sollte mit entsprechender Vorsicht benutzt
                  werden, da es immer mit der höchsten Priorität gematcht
                  wird.</entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>

          <para>Detailierte Informationen zum Thema Pattern Matching finden
          Sie in <xref linkend="regular-expression" />.</para>
        </section>
      </section>

      <section id="apfelmus-exten-var">
        <title>Die Variable ${EXTEN}</title>

        <para>Obwohl wir eigentlich erst später über Variablen sprechen,
        möchte ich eine sehr einfache und intuitiv zu benutzende Variable
        schon hier vorstellen. Es handelt sich um <code>${EXTEN}</code>. In
        dieser Variable ist die gewählte Nummer gespeichert. Ich kann also in
        der <filename>extensions.conf</filename> anstatt:<programlisting>exten =&gt; 2000,1,Dial(SIP/2000)</programlisting>auch
        einfach<programlisting>exten =&gt; 2000,1,Dial(SIP/${EXTEN})</programlisting>schreiben.
        Bei einer Zeile ist das natürlich noch wenig sinnvoll, aber wenn man
        diese Funktionalität mit Pattern Matching kombiniert, dann kann man
        sehr viel Zeit und Aufwand sparen und bekommt zusätzlich auch noch
        eine viel übersichtlichere Konfiguration.</para>

        <para>Um somit alle SIP-Telefone mit den Durchwahlen 2000 bis 2999 in
        der <filename>extensions.conf</filename> anwählbar zu machen, reicht
        folgende Zeile:<programlisting>exten =&gt; _2XXX,1,Dial(SIP/${EXTEN})</programlisting></para>
      </section>

      <section id="apfelmus-include">
        <title>Include</title>

        <para>Innerhalb der <filename>extensions.conf</filename> können
        Bereiche mit einem <code>include =&gt; Contextname</code> eingefügt
        werden. So kann man eine einmal erstellte Definition in mehreren
        Contexten wiederverwenden. Beispiel:<programlisting>[telefone-im-ersten-stock]
include =&gt; 2000er
include =&gt; anrufbeantworter

[telefone-im-zweiten-stock]
include =&gt; 2000er
include =&gt; anrufbeantworter

[telefone-im-dritten-stock]
include =&gt; 2000er

[2000er]
exten =&gt; _2XXX,1,Dial(SIP/${EXTEN})

[anrufbeantworter]
exten =&gt; 3000,1,VoicemailMain(${CALLERID(num)})</programlisting>Der Vorteil
        dieses Weges ist, dass wenn man z.B. die Rufnummer des
        Anrufbeantworters ändern will, es reicht, dieses genau in einem
        Bereich zu machen.</para>

        <tip>
          <para>Die Funktion <code>${CALLERID(num)}</code> übergibt die Nummer
          des Anrufenden. So kann die Applikation <code>VoiceMailMain()</code>
          mit dieser Variable aufgerufen werden und fragt dann nicht mehr nach
          der Mailbox, sondern nur noch nach dem Passwort der entsprechenden
          Mailbox.</para>
        </tip>

        <warning>
          <para>Wer intensiv mit Includes arbeitet, sollte <xref
          linkend="includes-im-dialplan" /> lesen.</para>
        </warning>
      </section>

      <section id="apfelmus-extensions.conf">
        <title>Die extensions.conf für die Apfelmus GmbH</title>

        <para>Der von uns entwickelte Rufnummernplan<footnote>
            <para>Mit Ausnahme der Notrufnummern, die wir später behandeln, da
            wir jetzt noch keine Verbindung zur Außenwelt eingerichtet
            haben.</para>
          </footnote> lässt sich nun wie folgt in eine übersichtliche
        <filename>extensions.conf</filename> übertragen:<programlisting>[sonstige]

[hausmeister]
include =&gt; interne-gespraeche
include =&gt; voicemailsystem-komfort

[it]
include =&gt; interne-gespraeche
include =&gt; voicemailsystem-komfort
;
; Aus Debugging Gruenden ist es fuer
; die IT Abteilung teilweise nuetzlich
; auf alle Voicemailboxen zugreifen 
; zu koennen.
;
include =&gt; voicemailsystem-normal

[geschaeftsfuehrer]
include =&gt; interne-gespraeche
include =&gt; voicemailsystem-komfort

[sekretariat]
include =&gt; interne-gespraeche
include =&gt; voicemailsystem-komfort

[verkauf-national]
include =&gt; interne-gespraeche
include =&gt; voicemailsystem-komfort

[verkauf-ausland]
include =&gt; interne-gespraeche
include =&gt; voicemailsystem-komfort

[versand]
include =&gt; interne-gespraeche
include =&gt; voicemailsystem-komfort

[produktion]
include =&gt; interne-gespraeche
include =&gt; voicemailsystem-komfort

[interne-gespraeche]
exten =&gt; _[1-5]XX,1,Dial(SIP/${EXTEN},60)
exten =&gt; _[1-5]XX,2,VoiceMail(${EXTEN},u)

[voicemailsystem-komfort]
;
; Der User muss nicht die Nummer der 
; Voicemailbox eingeben.
;
exten =&gt; 800,1,VoicemailMain(${CALLERID(num)})

[voicemailsystem-normal]
exten =&gt; 801,1,VoicemailMain()</programlisting>Der Context
        <code>[interne-gespraeche]</code> definiert, dass alle Anrufe an die
        Nummern 100 bis 599 mit dem Programm <application>Dial()</application>
        auch mit dieser Nebenstelle verbunden werden. Wer die 800 anruft,
        bekommt die Voicemailbox für sein eigenes Telefon. Nur die
        IT-Abteilung kann die 801 anrufen und wird dann vom System erst nach
        der gewünschten Nebenstelle (Extension) gefragt. Da die IT-Abteilung
        auch den internen Support der Telefonanlage zur Verfügung stellt,
        benötigt sie diese Funktion zur Störungsermittlung (Debugging).</para>

        <section id="schwarze-loecher-im-dialplan">
          <title>Schwarze Löcher im Rufnummernplan</title>

          <para>Genau genommen müsste dieser Dialplan noch etwas komplexer
          sein, da es ja laut Rufnummernplan Bereiche gibt (z.B. 270 bis 299),
          die gar nicht mit Telefonen belegt sind. Da wir dies nicht beachten,
          kann es zu Missverständnissen kommen. Ein Anrufer kann eine nicht
          vergebene Rufnummer anrufen und dort auf dem Anrufbeantworter eine
          Nachricht hinterlassen. Diese Nachricht würde aber nie abgehört
          werden. Um dies zu vermeiden, müsste man korrekterweise den Context
          <code>[interne-gespraeche]</code> wie folgt
          gestalten:<programlisting>[interne-gespraeche]
exten =&gt; _1[5-6]X,1,Dial(SIP/${EXTEN},60)
exten =&gt; _1[5-6]X,2,VoiceMail(${EXTEN},u)

exten =&gt; _2[0-6]X,1,Dial(SIP/${EXTEN},60)
exten =&gt; _2[0-6]X,2,VoiceMail(${EXTEN},u)

exten =&gt; _[358]XX,1,Dial(SIP/${EXTEN},60)
exten =&gt; _[358]XX,2,VoiceMail(${EXTEN},u)

exten =&gt; _4[0-4]XX,1,Dial(SIP/${EXTEN},60)
exten =&gt; _4[0-4]XX,2,VoiceMail(${EXTEN},u)
</programlisting>Wir verzichten bei der Apfelmus GmbH der Einfachheit halber
          auf diese ausführlichere Variante und benutzen nur den folgenden
          Context:<programlisting>[interne-gespraeche]
exten =&gt; _[1-5]XX,1,Dial(SIP/${EXTEN},60)
exten =&gt; _[1-5]XX,2,VoiceMail(${EXTEN},u)
</programlisting></para>
        </section>
      </section>

      <section id="apfelmus-voicemail.conf">
        <title>voicemail.conf</title>

        <para>Die <filename>voicemail.conf</filename> bleibt wie im ersten
        Kapitel beschrieben. Es werden einfach nur ein paar mehr Einträge
        eingefügt:</para>

        <programlisting>[general]
format = gsm
serveremail = voicemail@apfelmus-gmbh.de
maxmessage = 600

[local]
150 =&gt; 999999,Hans Hausmeister,hausmeister@apfelmus-gmbh.de
200 =&gt; 999999,Ernst Wichtig,ernst.wichtig@apfelmus-gmbh.de
201 =&gt; 999999,Hans Toll,hans.toll@apfelmus-gmbh.de

; Ich verzichte hier darauf, die restlichen Eintraege aufzulisten, sie sind analog zu den aufgefuehrten Zeilen</programlisting>
      </section>
    </section>
  </section>

  <section id="apfelmus-weiter">
    <title>Wie geht es weiter?</title>

    <para>Die hier besprochene Konfiguration der Apfelmus GmbH dient als
    Planungsbeispiel für alle Anlagen dieser Größenordnung. Einige Beispiele
    in diesem Buch können Sie mit dieser Konfiguration durchspielen.</para>
  </section>

  <section id="apfelmus-faq">
    <title>FAQ</title>

    <para></para>

    <qandaset>
      <qandadiv>
        <qandaentry>
          <question>
            <para>Welche Kosten kommen auf die Apfelmus GmbH zu?</para>
          </question>

          <answer>
            <para>Das hängt ganz von den Entscheidern in dieser Firma ab.
            Folgende Faktoren spielen dabei eine Rolle:</para>

            <itemizedlist>
              <listitem>
                <para>Soll der Asterisk-Server ausfallsicher sein? Reicht ein
                Cold-Standby oder soll es ein Hot-Standby sein?</para>
              </listitem>

              <listitem>
                <para>Welche Server-Hardware wird gekauft? Für eine solche
                Telefonanlage reicht ein relativ normaler Rechner. Es muss
                also nicht das allerneueste und damit oft auch teuerste System
                gekauft werden.</para>
              </listitem>

              <listitem>
                <para>Welche Telefone werden eingesetzt? Hierbei kann man von
                30 bis weit über 300 Euro pro Telefon ausgeben.</para>
              </listitem>
            </itemizedlist>
          </answer>
        </qandaentry>

        <qandaentry>
          <question>
            <para>Lohnt sich Asterisk für die Apfelmus GmbH oder handelt es
            sich vielmehr um eine Arbeitsbeschaffungsmaßnahme für die
            IT-Abteilung?</para>
          </question>

          <answer>
            <para>Das hängt stark von den Angeboten der klassischen
            Telefonanlagenherstellern und von den Bedürfnissen der Apfelmus
            GmbH ab. Oft bieten klassische Telefonanlagenhersteller extreme
            Sonderrabatte, wenn sie erfahren, dass als Alternative das
            kostenlose Asterisk in Erwägung gezogen wird. Allerdings ist man
            dann meistens in einem starren Vertrag und kann die nächsten 5
            Jahre nur bei diesem Hersteller einkaufen.</para>

            <para>Einer der großen Vorteile von Asterisk ist die Wahl des
            Supports und des Consultings. Man kann entweder alles selber
            machen oder einen externen Consultant einkaufen. Sollte dieser
            nicht den Ansprüchen genügen, kann man ihn gegen einen anderen
            austauschen (das ist so mit einer klassischen Telefonanlage wegen
            der Vertragsbindung nicht möglich).</para>

            <para>Ob sich Asterisk betriebswirtschaftlich lohnt, muss jeder
            für seinen individuellen Fall ausrechnen. Die Erfahrung zeigt,
            dass dies in den meisten Fällen der Fall ist. Berücksichtigt man
            noch die Möglichkeiten einer Erweiterung mit neuen Funktionen
            durch ein einfaches Softwareupdate, dann entwickeln sich die
            mittel- bis langfristigen Unterhalts- und Investitionskosten
            äußerst günstig.</para>
          </answer>
        </qandaentry>
      </qandadiv>
    </qandaset>
  </section>
</chapter>