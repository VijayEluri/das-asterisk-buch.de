<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section id="applications-macro" lang="en" revision="$Revision$">
  <!--
% Copyright (c) 2006 - 2008 by 
% Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
% Philipp Kempgen <philipp.kempgen@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de
-->

    <title><literal>Macro()</literal></title>

    <indexterm significance="preferred">
      <primary>Dialplan Applications</primary>

      <secondary><code>Macro()</code></secondary>
    </indexterm>

    <simpara>Executes a previously defined macro.</simpara>

    <synopsis>Macro(<replaceable>macroname</replaceable>[,<replaceable>arg1</replaceable>[,<replaceable>arg2</replaceable>[,<replaceable>...</replaceable>]]])</synopsis>

    <simpara>Executes a macro defined in the context
    <code>macro-<replaceable>macroname</replaceable></code> by handing the
    channel over to the <code>s</code> extension in the macro and returning
    after the macro has finished running.</simpara>

    <simpara>The called extension, context and priority are passed to the
    macro in the variables<code> ${MACRO_EXTEN}</code>,
    <code>${MACRO_CONTEXT}</code> and <code>${MACRO_PRIORITY}</code>. The
    arguments are passed to the macro in <code>${ARG1}</code>,
    <code>${ARG2}</code>, and so on.</simpara>

    <simpara><command><code>Macro()</code></command> returns -1 if any step in
    the macro returns -1, otherwise it returns 0. If the variable
    <code>${MACRO_OFFSET}</code> is set when the macro finishes, the
    application will continue executing at priority
    <replaceable>n</replaceable>+1+<code>MACRO_OFFSET</code> if it exists,
    otherwise it will continue at <replaceable>n</replaceable>+1.</simpara>

    <simpara>If <code><command>Goto()</command></code> is called from within
    the macro, macro execution ends and the call continues in the priority
    specified in <command>Goto()</command>.</simpara>

    <programlisting>; define a macro that counts down from the provided value:
[macro-countdown]
exten =&gt; s,1,Set(COUNT=${ARG1})
exten =&gt; s,n,While($[ ${COUNT} &gt; 0])
exten =&gt; s,n,SayNumber(${COUNT})
exten =&gt; s,n,Set(COUNT=$[ ${COUNT} - 1 ])
exten =&gt; s,n,EndWhile()

[default]
exten =&gt; 123,1,Macro(countdown,3)   ; call the macro "countdown" with ARG1=3
exten =&gt; 124,1,Macro(countdown,5)   ; call the macro "countdown" with ARG1=5</programlisting>

    <xi:include href="macro-help.xml" parse="xml" xmlns:xi="http://www.w3.org/2001/XInclude" xpointer="xpointer(/note/*)" />

    <formalpara>
      <title>See also</title>

      <para><xref linkend="applications-goto" />, <xref
      linkend="applications-gosub" /></para>
    </formalpara>
</section>
