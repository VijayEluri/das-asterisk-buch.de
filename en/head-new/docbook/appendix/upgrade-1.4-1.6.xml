<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<appendix id="upgrade-1.4-1.6" lang="de" revision="$Revision: 1914 $">
  <title>Upgrading from Asterisk 1.4 to 1.6<indexterm>
      <primary>Upgrade</primary>

      <secondary>1.4 to 1.6</secondary>
    </indexterm></title>

  <para>We explain, using the contents of <filename>UPGRADE-1.6.txt</filename>
  along with some additional examples and commentary, what you need to
  consider when upgrading from Asterisk 1.4 to 1.6:</para>

  <section id="upgrade-1.4-1.6-ael">
    <title>AEL</title>

    <itemizedlist>
      <listitem>
        <para>Macros are now implemented underneath with the
        <command>Gosub()</command> application. Heaven Help You if you wrote
        code depending on any aspect of this! Previous to 1.6, macros were
        implemented with the <command>Macro()</command> app, which provided a
        nice feature of auto-returning. The compiler will do its best to
        insert a <command>Return()</command> app call at the end of your macro
        if you did not include it, but really, you should make sure that all
        execution paths within your macros end in "return;" as in the example
        below:</para>

        <para><programlisting>macro my-macro () {
    // do something
    return;
}</programlisting></para>
      </listitem>

      <listitem>
        <para>The <literal>conf2ael</literal> program is
        <quote>introduced</quote> in this release; it is in a rather crude
        state, but deemed useful for making a first pass at converting
        extensions.conf code into AEL. More intelligence will come with
        time.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="upgrade-1.4-1.6-core">
    <title>Core</title>

    <itemizedlist>
      <listitem>
        <para>The <code>languageprefix</code> option in
        <filename>asterisk.conf</filename> is now deprecated, and the default
        sound file layout for non-English sounds is the 'new style' layout
        introduced in Asterisk 1.4 (and used by the automatic sound file
        installer in the Makefile).</para>
      </listitem>

      <listitem>
        <para>The <literal>ast_expr2</literal> stuff has been modified to
        handle floating-point numbers. Numbers of the format
        <replaceable>D.D</replaceable> are now acceptable input for the expr
        parser, where <replaceable>D</replaceable> is a string of base-10
        digits. All math is now done in "long double", if it is available on
        your compiler/architecture. This was half-way between a bug-fix
        (because the MATH func returns fp by default), and an enhancement.
        Also, for those counting on, or needing, integer operations, a series
        of <quote>functions</quote> were also added to the expr language, to
        allow several styles of rounding/truncation, along with a set of
        common floating point operations, like <emphasis>sin</emphasis>,
        <emphasis>cos</emphasis>, <emphasis>tan</emphasis>,
        <emphasis>log</emphasis>, <emphasis>pow</emphasis>, etc. The ability
        to call external functions like
        <function><code>CDR()</code></function>, etc. was also added, without
        having to use the <code>${...}</code> notation. </para>
      </listitem>

      <listitem>
        <para>The delimiter passed to applications has been changed to the
        comma (<quote><code>,</code></quote>), as that is what people are used
        to using within <filename>extensions.conf</filename>. If you are using
        realtime extensions, you will need to translate your existing dialplan
        to use this separator. To use a literal comma, you need merely to
        escape it with a backslash ('\'). Another possible side effect is that
        you may need to remove the obscene level of backslashing that was
        necessary for the dialplan to work correctly in 1.4 and previous
        versions. This should make writing dialplans less painful in the
        future, albeit with the pain of a one-time conversion. If you would
        like to avoid this conversion immediately, set
        <code>pbx_realtime=1.4</code> in the <code>[compat]</code> section of
        <filename>asterisk.conf</filename>. After transitioning, set
        <code>pbx_realtime=1.6</code> in the same section.</para>
      </listitem>

      <listitem>
        <para>For the same reason as above, you may set
        <code>res_agi=1.4</code> in the <code>[compat]</code> section of
        <code>asterisk.conf</code> to continue to use the
        <quote><code>|</code></quote> delimiter in the <literal>EXEC</literal>
        arguments of AGI applications. After converting to use the
        <quote><code>,</code></quote> delimiter, change this option to
        <code>res_agi=1.6</code>.</para>
      </listitem>

      <listitem>
        <para>As a side-effect of the application delimiter change, many
        places that used to need quotes in order to get the proper meaning are
        no longer required. You now only need to quote strings in
        configuration files if you literally want quotation marks within a
        string.</para>
      </listitem>

      <listitem>
        <para>The <filename>logger.conf</filename> option
        <code>rotatetimestamp</code> has been deprecated in favor of
        <code>rotatestrategy</code>. This new option supports a
        <quote>rotate</quote> strategy that more closely mimics the system
        logger in terms of file rotation.</para>
      </listitem>

      <listitem>
        <para>The <code>concise</code> versions of various CLI commands are
        now deprecated. We recommend using the manager interface (AMI) for
        application integration with Asterisk instead of using <code>asterisk
        -rx "command"</code>.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="upgrade-1.4-1.6-voicemail">
    <title>Voicemail</title>

    <itemizedlist>
      <listitem>
        <para>The voicemail configuration values <code>maxmessage</code> and
        <code>minmessage</code> have been changed to <code>maxsecs</code> and
        <code>minsecs</code> to clarify their purpose and to make them more
        distinguishable from <code>maxmsgs</code>, which sets folder size. The
        old variables will continue to work in this version, albeit with a
        deprecation warning.</para>
      </listitem>

      <listitem>
        <para>If you use any interface for modifying voicemail aside from the
        built in dialplan applications, then the option
        <code>pollmailboxes</code> <emphasis>must</emphasis> be set in the
        <literal>general</literal> section of
        <filename>voicemail.conf</filename> for message waiting indication
        (MWI) to work properly; the polling frequency is set with
        <code>pollfreq</code>. This is because voicemail notification is now
        event-based instead of polling-based. The channel drivers are no
        longer responsible for constantly manually checking mailboxes for
        changes so that they can send MWI information to users. Examples of
        situations that would require this option are web interfaces to
        voicemail or an email client in the case of using IMAP storage.
        </para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="upgrade-1.4-1.6-applications">
    <title>Dialplan applications and functions</title>

    <itemizedlist>
      <listitem>
        <para><command>ChanIsAvail()</command> now has a <code>t</code>
        option, which allows the specified device to be queried for state
        without consulting the channel drivers. This performs mostly a
        <quote>ChanExists</quote> sort of function.</para>
      </listitem>

      <listitem>
        <para><command>ChannelRedirect()</command> will not terminate the
        channel that fails to do a channelredirect as it has done previously.
        Instead <literal>CHANNELREDIRECT_STATUS</literal> will reflect if the
        attempt was successful of not. </para>
      </listitem>

      <listitem>
        <para><command>SetCallerPres()</command> has been replaced with the
        <function><code>CALLERPRES()</code></function> dialplan function and
        is now deprecated.</para>
      </listitem>

      <listitem>
        <para><command>DISA()</command>'s fifth argument is now an options
        argument. If you have previously used <code>NOANSWER</code> in this
        argument, you'll need to convert that to the new option
        <code>n</code>.</para>
      </listitem>

      <listitem>
        <para><command>Macro()</command> is now deprecated. If you need
        subroutines, you should use the
        <command>Gosub()</command>/<command>Return()</command> applications.
        To replace <command>MacroExclusive()</command>, we have introduced
        dialplan functions <code><function>LOCK()</function></code>,
        <code><function>TRYLOCK()</function></code>, and
        <function><code>UNLOCK()</code></function>. You may use these
        functions in any location where you desire to ensure that only one
        channel is executing that path at any one time. The
        <command>Macro()</command> applications are deprecated for performance
        reasons. However, since <command>Macro()</command> has been around for
        a long time and so many dialplans depend heavily on it, for the sake
        of backwards compatibility it will not be removed. It is also worth
        noting that using both <command>Macro()</command> and
        <command>GoSub()</command> at the same time is
        <emphasis>heavily</emphasis> discouraged.</para>
      </listitem>

      <listitem>
        <para><command>Read()</command> now sets a
        <literal>READSTATUS</literal> variable on exit. It does NOT
        automatically return -1 (and hangup) anymore on error. If you want to
        hangup on error, you need to do so explicitly in your dialplan.</para>
      </listitem>

      <listitem>
        <para><command>Privacy()</command> no longer uses
        <filename>privacy.conf</filename>, so any options must be specified
        directly in the application arguments.</para>
      </listitem>

      <listitem>
        <para><command>MusicOnHold()</command> application now has duration
        parameter which allows specifying timeout in seconds.</para>
      </listitem>

      <listitem>
        <para><command>WaitMusicOnHold()</command> application is now
        deprecated in favor of extended MusicOnHold. </para>
      </listitem>

      <listitem>
        <para><command>SetMusicOnHold()</command> is now deprecated. You
        should use
        <code><function>Set(CHANNEL(musicclass)=...)</function></code>
        instead.</para>
      </listitem>

      <listitem>
        <para>The arguments in <command>ExecIf()</command> changed a bit, to
        be more like other applications. The old syntax is:</para>

        <para><programlisting>ExecIf(<replaceable>expression</replaceable>,<replaceable>application</replaceable>,<replaceable>arguments</replaceable>)</programlisting>The
        new syntax is</para>

        <para><programlisting>The syntax is now <code>ExecIf(&lt;<replaceable>expression</replaceable>&gt;?<replaceable>application_if_true</replaceable>(<replaceable>args</replaceable>):<replaceable>application_if_false</replaceable>(<replaceable>args</replaceable>))</code>.</programlisting></para>
      </listitem>

      <listitem>
        <para>The behavior of the <command>Set()</command> application now
        depends upon a compatibility option, set in
        <filename>asterisk.conf</filename>. To use the old 1.4 behavior, which
        allowed <command>Set()</command> to take multiple key/value pairs, set
        <code>app_set=1.4</code> in <code>[compat]</code> in
        <filename>asterisk.conf</filename>. To use the new behavior, which
        permits variables to be set with embedded commas, set
        <code>app_set=1.6</code> in <code>[compat]</code> in
        <code>asterisk.conf</code>. Note that you can have both behaviors at
        the same time, if you switch to using <command>MSet()</command> if you
        want the old behavior.</para>
      </listitem>

      <listitem>
        <para>The function <function>QUEUE_MEMBER_COUNT()</function> has been
        deprecated in favor of the <function>QUEUE_MEMBER()</function>
        function. For more information, issue a <code>show function
        QUEUE_MEMBER</code> from the CLI.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="upgrade-1.4-1.6-cdr">
    <title>CDR</title>

    <itemizedlist>
      <listitem>
        <para>The <literal>cdr_sqlite</literal> module has been marked as
        deprecated in favor of <literal>cdr_sqlite3_custom</literal>. It will
        potentially be removed from the tree after Asterisk 1.6 is
        released.</para>
      </listitem>

      <listitem>
        <para>The <literal>cdr_odbc</literal> module now uses
        <literal>res_odbc</literal> to manage its connections. The username
        and password parameters in <filename>cdr_odbc.conf</filename>,
        therefore, are no longer used. The <code>dsn</code> parameter now
        points to an entry in <filename>res_odbc.conf</filename>.</para>
      </listitem>

      <listitem>
        <para>The <literal>uniqueid</literal> field in the core Asterisk
        structure has been changed from a maximum 31 character field to a 149
        character field, to account for all possible values the
        <literal>systemname</literal> prefix could be. In the past, if the
        <literal>systemname</literal> was too long, the
        <literal>uniqueid</literal> would have been truncated.</para>
      </listitem>

      <listitem>
        <para>The <literal>cdr_tds</literal> module now supports all versions
        of FreeTDS that contain the db-lib frontend. It will also now log the
        <literal>userfield</literal> variable if the target database table
        contains a column for it.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="upgrade-1.4-1.6-formats">
    <title>Audio formats</title>

    <itemizedlist>
      <listitem>
        <para><literal>format_wav</literal>: The GAIN preprocessor definition
        and source code that used it is removed. This change was made in
        response to user complaints of choppiness or the clipping of loud
        signal peaks. To increase the volume of voicemail messages, use the
        <code>volgain</code> option in <code>voicemail.conf</code></para>
      </listitem>

      <listitem>
        <para>Previously, the Asterisk source code distribution included the
        iLBC encoder/decoder source code, from Global IP Solutions (<ulink
        url="???">http://www.gipscorp.com</ulink>). This code is not licensed
        for distribution, and thus has been removed from the Asterisk source
        code distribution. If you wish to use <literal>codec_ilbc</literal> to
        support iLBC channels in Asterisk, you can run the
        <filename>contrib/scripts/get_ilbc_source.sh</filename> script to
        download the source and put it in the proper place in the Asterisk
        build tree. Once that is done you can follow your normal steps of
        building Asterisk. You will need to run <command>menuselect</command>
        and enable the iLBC codec in the <quote>Codec Translators</quote>
        category, then <command>make</command> and <command>make
        install</command>.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="upgrade-1.4-1.6-channels">
    <title>Channel drivers</title>

    <itemizedlist>
      <listitem>
        <para>SIP: a small upgrade to support the "Record" button on the
        SNOM360, which sends a sip INFO message with a "Record: on" or
        "Record: off" header. If Asterisk is set up (through the
        <code>automon</code> parameter in <filename>features.conf</filename>)
        to accept <quote>One Touch Monitor</quote> requests (by default, via
        <literal>*1</literal>), then the user-configured dialpad sequence is
        generated, and recording can be started and stopped via this button.
        The file names and formats are all controlled via the normal
        mechanisms. If the user has not configured the automon feature, the
        normal <literal>415 Unsupported media type</literal> is returned, and
        nothing is done.</para>
      </listitem>

      <listitem>
        <para>SIP: The <code>call-limit</code> option in
        <filename>sip.conf</filename> is marked as deprecated. It still works
        in this version of Asterisk, but will be removed in the following
        version. Please use the <function><code>GROUP()</code></function>,
        <code><function>GROUP_COUNT()</function></code> and
        <code><function>GROUP_MATCH_COUNT()</function></code> functions in the
        dialplan to enforce call limits. The <code>limitonpeer</code>
        configuration option is now renamed to
        <code>counteronpeer</code>.</para>
      </listitem>

      <listitem>
        <para>SIP: The <code>username</code> option is now renamed to
        <code>defaultuser</code> to match <code>defaultip</code>. These are
        used only before registration to call a peer with the uri
        <literal>sip:defaultuser@defaultip</literal>. The
        <code>username</code> setting still work, but is deprecated and will
        not work in the next version of Asterisk.</para>
      </listitem>

      <listitem>
        <para><filename>chan_local.c</filename>: the comma delimiter inside
        the channel name has been changed to a semicolon, in order to make the
        Local channel driver compatible with the comma delimiter change in
        applications.</para>
      </listitem>

      <listitem>
        <para>H323: The <code>tos</code> setting has changed name to
        <code>tos_audio</code> and <code>cos</code> to <code>cos_audio</code>
        to be compatible with settings in <filename>sip.conf</filename>. The
        <code>tos</code> and <code>cos</code> configuration is deprecated and
        will stop working in the next release of Asterisk.</para>
      </listitem>

      <listitem>
        <para>Console: A new console channel driver,
        <code><literal>chan_console</literal></code>, has been added to
        Asterisk. This new module can not be loaded at the same time as
        <literal>chan_alsa</literal> or <literal>chan_oss</literal>. The
        default modules.conf only loads one of them (chan_oss by default). So,
        unless you have modified your modules.conf to not use the autoload
        option, then you will need to modify modules.conf to add another
        "noload" line to ensure that only one of these three modules gets
        loaded.</para>
      </listitem>

      <listitem>
        <para>DAHDI: The <literal>chan_zap</literal> module that supported
        PSTN interfaces using Zaptel has been renamed to
        <literal>chan_dahdi</literal>, and only supports the DAHDI telephony
        driver package for PSTN interfaces. See the
        <filename>Zaptel-to-DAHDI.txt</filename> file for more details on this
        transition.</para>
      </listitem>

      <listitem>
        <para>DAHDI: The <code>msdstrip</code> option has been deprecated, as
        it provides no value over the method of stripping digits in the
        dialplan using variable substring syntax.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="upgrade-1.4-1.6-configuration">
    <title>Configuration</title>

    <itemizedlist>
      <listitem>
        <para><filename>dundi.conf</filename>: <code>tos</code> parameter
        changed to use new values. Old values like <code>lowdelay</code>,
        <code>lowcost</code> and <code>other</code> are not acceptable now.
        Look into <filename>doc/tex/qos.tex</filename> for description of this
        parameter.</para>
      </listitem>

      <listitem>
        <para><filename>queues.conf</filename>: the
        <code>queue-lessthan</code> sound file option is no longer available,
        and the <code>queue-round-seconds</code> option no longer takes
        <code>1</code> as a valid parameter.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="upgrade-1.4-1.6-manager">
    <title>Asterisk Manager Interface</title>

    <itemizedlist>
      <listitem>
        <para>Manager has been upgraded to version 1.1 with a lot of changes.
        Please check <filename>doc/manager_1_1.txt</filename> for
        information.</para>
      </listitem>

      <listitem>
        <para>The <command>IAXpeers</command> command output has been changed
        to more closely resemble the output of the <command>SIPpeers</command>
        command.</para>
      </listitem>

      <listitem>
        <para>The <literal>cdr_manager</literal> module now reports at the
        <literal><code>cdr</code></literal> level, not at
        <literal><code>call</code></literal> as it was before. You may need to
        change your <filename>manager.conf</filename> to add the level to
        existing AMI users, if they want to see the CDR events
        generated.</para>
      </listitem>

      <listitem>
        <para>The <command>Originate</command> command now requires
        <code>write</code> permission. For <command>Originate</command> with
        the <code>Application</code> parameter, you need the additional
        <code>system</code> privilege if you want to do anything that calls
        out to a subshell.</para>
      </listitem>
    </itemizedlist>
  </section>
</appendix>
