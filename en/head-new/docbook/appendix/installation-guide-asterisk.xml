<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<appendix id="installation-1.4-debian" lang="en" revision="$Revision: 1912 $">
  <!--
% Copyright (c) 2006 - 2007 by 
% Stefan Wintermeyer <sw@amooma.de>
% 2009 Philipp Kempgen <philipp.kempgen@amooma.de>
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.2
% or any later version published by the Free Software Foundation;
% with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
% Texts. A copy of the license is included in the section entitled "GNU
% Free Documentation License".
% Asterisk training and consulting is offered at http://www.amooma.de
-->

  <title>Installing Asterisk 1.4.x in Debian Linux</title>

  <indexterm>
    <primary>Installation</primary>

    <secondary>Asterisk 1.4</secondary>

    <tertiary>Debian</tertiary>
  </indexterm>

  <para>Following these instructions will install the components necessary to
  use all the features covered in this book (except where otherwise
  indicated). As a result, it is a little more comprehensive than a typical
  installation but offers the advantage that you won't have to install
  additional components in future.</para>

  <para><tip>
      <para>If you don't want to install a new operating system on the
      computer, you can try installing using a <link
      linkend="installation-1.4-knoppix-5.1">Knoppix-Live-System</link>.</para>
    </tip></para>

  <para>We assume a freshly installed Debian GNU/Linux 5.0
  (<quote>Lenny</quote>). You can find an ISO image for the installation CD at
  <ulink
  url="http://www.debian.org/releases/lenny/debian-installer/">http://www.debian.org/releases/lenny/debian-installer/</ulink>.
  We recommend the 150 MByte network install image (you will most likely need
  the one for the i386 architecture). You can find installation instructions
  for Debian GNU/Linux at <ulink
  url="http://www.debian.org/releases/lenny/i386/">http://www.debian.org/releases/lenny/i386/</ulink>.</para>

  <para>Before continuing, please log in as <literal>root</literal>.</para>

  <note>
    <para>Some users will undoubtedly want to install an SSH server
    immediately, in order to work on the server from their regular
    workstation. The installation command to do this is
    <literal><command>aptitude install ssh</command></literal>. We will assume
    you are comfortable with <command>ssh</command> or will be working
    directly at the server console.</para>
  </note>

  <para>Begin by making sure that your package lists are current:<screen>debian:~# <emphasis
        role="bold"><command>aptitude update</command></emphasis>
Get http://ftp.debian.org lenny Release.gpg
<replaceable>[...]</replaceable>
1820kB downloaded in 13s (138kB/s)
Reading package lists... Done

debian:~# </screen></para>

  <para>Also, make sure that any already installed packages are the most
  current:<screen>debian:~# <emphasis role="bold"><command>aptitude -y upgrade</command></emphasis>
Reading package lists... Done
Building dependency tree
[...]
No packages will be installed, upgraded, or removed.
0 packages upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 0B of archives. After unpacking 0B will be used.
debian:~# </screen></para>

  <para>Just in case the updates installed a new kernel, we restart the system
  with <literal><command>shutdown -r now</command></literal> (or
  <literal><command>reboot</command></literal>):<screen>debian:~# <emphasis
        role="bold"><command>shutdown -r now</command></emphasis>

Broadcast message from root@debian (pts/0) (Mon Mar 23 17:42:04 2009):

The system is going down for reboot NOW!</screen></para>

  <para>After boot, log in again as <literal>root</literal>.</para>

  <tip>
    <para>It is a good idea to install NTP (Network Time Protocol); this keeps
    the system time accurate and current:<screen>debian:~# <emphasis
          role="bold"><command>aptitude -y install ntp ntpdate</command></emphasis></screen></para>
  </tip>

  <para>First, we must install a working build environment
  (<emphasis>i.e.</emphasis>, compiler, linker, autoconf,
  <emphasis>etc.</emphasis> and any necessary dependencies) so that we can
  compile and install Asterisk.<screen>debian:~# <emphasis role="bold"><command>aptitude -y install build-essential</command></emphasis>
<replaceable>[...]</replaceable>
The following NEW packages will be installed:
  binutils{a} build-essential bzip2{a} cpp{a} cpp-4.3{a} 
  dpkg-dev{a} g++{a} g++-4.3{a} gcc{a} gcc-4.3{a} 
  libc6-dev{a} libgmp3c2{a} libgomp1{a} libmpfr1ldbl{a} 
  libstdc++6-4.3-dev{a} libtimedate-perl{a} 
  linux-libc-dev{a} make{a} patch{a} 
0 packages upgraded, 19 newly installed, 0 to remove and 0 not upgraded.
Need to get 19.4MB of archives. After unpacking 60.4MB will be used.
<replaceable>[...]</replaceable>
Setting up libstdc++6-4.3-dev (4.3.2-1.1) ...
Setting up g++-4.3 (4.3.2-1.1) ...
Setting up g++ (4:4.3.2-2) ...
Setting up build-essential (11.4) ...
<replaceable>[...]</replaceable></screen></para>

  <para>The Linux kernel headers are also required:<screen>debian:~# <emphasis
        role="bold"><command>aptitude -y install linux-headers-`uname -r`</command></emphasis>
The following NEW packages will be installed:
  cpp-4.1{a} gcc-4.1{a} gcc-4.1-base{a} 
  linux-headers-2.6.26-1-686 
  linux-headers-2.6.26-1-common{a} 
  linux-kbuild-2.6.26{a} 
0 packages upgraded, 19 newly installed, 0 to remove and 0 not upgraded.
Need to get 7326kB of archives. After unpacking 41.3MB will be used.
<replaceable>[...]</replaceable></screen></para>

  <bridgehead id="installation-1.4-debian-libpri">LibPRI</bridgehead>

  <para>The libpri library contains the PRI stack (see <xref
  linkend="glossar-pri" />), which includes some functions used for BRI (see
  <xref linkend="glossar-bri" />) connections. This is not required for all
  types of installations, but won't do any harm, either. Obtain the package
  this way:<screen>debian:~# <emphasis role="bold"><command>cd /usr/src/</command></emphasis>
debian:/usr/src# <emphasis role="bold"><command>wget http://downloads.digium.com/pub/libpri/libpri-1.4-current.tar.gz</command></emphasis>
<replaceable>[...]</replaceable>
2009-03-23 10:24:55 (108 KB/s) - »libpri-1.4-current.tar.gz« saved [94075/94075]</screen></para>

  <para>Then, unpack it with <command>tar</command>:<screen>debian:/usr/src# <emphasis
        role="bold"><command>tar xvzf libpri-1.4-current.tar.gz</command></emphasis>
libpri-1.4.9/
libpri-1.4.9/build_tools/
<replaceable>[...]</replaceable>
debian:/usr/src# <emphasis role="bold"><command>rm libpri-1.4-current.tar.gz</command></emphasis> </screen></para>

  <para>Finally, compile and install it:<screen>debian:/usr/src# <emphasis
        role="bold"><command>cd libpri-1.4.9/</command></emphasis>
debian:/usr/src/libpri-1.4.9# <emphasis role="bold"><command>make</command></emphasis>
<replaceable>[...]</replaceable>
debian:/usr/src/libpri-1.4.9# <emphasis role="bold"><command>make install</command></emphasis>
<replaceable>[...]</replaceable></screen></para>

  <bridgehead id="installation-1.4-debian-dahdi">Dahdi</bridgehead>

  <para>DAHDI handles telephony adapter card (which includes both analog and
  digital) communications, and until Asterisk 1.4.21 was known as Zaptel (see
  <xref linkend="zaptel-to-dahdi" />). Even if you have no such cards
  installed, you should install this package, since it performs other
  important functions, such as providing a time source for conferences.</para>

  <para>Get the DAHDI package like so:<screen>debian:~# <emphasis role="bold"><command>cd /usr/src/</command></emphasis>
debian:/usr/src# <emphasis role="bold"><command>wget http://downloads.digium.com/pub/telephony/dahdi-linux/dahdi-linux-current.tar.gz</command></emphasis>
<replaceable>[...]</replaceable>
2009-03-23 10:33:37 (165 KB/s) - »dahdi-linux-current.tar.gz« saved [1251822/1251822]

debian:/usr/src# <emphasis role="bold"><command>wget http://downloads.digium.com/pub/telephony/dahdi-tools/dahdi-tools-current.tar.gz</command></emphasis>
<replaceable>[...]</replaceable>
2009-03-23 10:37:49 (147 KB/s) - »dahdi-tools-current.tar.gz« saved [413598/413598]

debian:/usr/src# </screen></para>

  <para>Unpack the tar.gz archives:<screen>debian:/usr/src# <emphasis
        role="bold"><command>tar xvzf dahdi-linux-current.tar.gz</command></emphasis> 
dahdi-linux-2.1.0.4/
dahdi-linux-2.1.0.4/include/
<replaceable>[...]</replaceable>
debian:/usr/src# <emphasis role="bold"><command>tar xvzf dahdi-tools-current.tar.gz</command></emphasis> 
dahdi-tools-2.1.0.2/
dahdi-tools-2.1.0.2/hdlctest.c
<replaceable>[...]</replaceable>
debian:/usr/src# <emphasis role="bold"><command>rm dahdi-linux-current.tar.gz</command></emphasis> 
debian:/usr/src# <emphasis role="bold"><command>rm dahdi-tools-current.tar.gz</command></emphasis> </screen></para>

  <para>Now, install the dependencies:<screen>debian:/usr/src# <emphasis
        role="bold"><command>aptitude -y install libusb-dev libnewt-dev</command></emphasis>
<replaceable>[...]</replaceable>
The following NEW packages will be installed:
  libnewt-dev libpng12-0{a} libpng12-dev{a} 
  libslang2-dev{a} libusb-dev zlib1g-dev{a} 
0 packages upgraded, 6 newly installed, 0 to remove and 0 not upgraded.
Need to get 1176kB of archives. After unpacking 3113kB will be used.
<replaceable>[...]</replaceable>
Setting up libnewt-dev (0.52.2-11.3) ...
Setting up libusb-dev (2:0.1.12-13) ...
<replaceable>[...]</replaceable></screen></para>

  <para>Finally, compile and install DAHDI and the tools:<screen>debian:/usr/src# <emphasis
        role="bold"><command>cd dahdi-linux-2.1.0.4/</command></emphasis>
debian:/usr/src/dahdi-linux-2.1.0.4# <emphasis role="bold"><command>make</command></emphasis>
<replaceable>[...]</replaceable>
make[1]: Leaving directory `/usr/src/linux-headers-2.6.26-1-686'
debian:/usr/src/dahdi-linux-2.1.0.4# <emphasis role="bold"><command>make install</command></emphasis>
<replaceable>[...]</replaceable>
  DEPMOD  2.6.26-1-686
make[1]: Leaving directory `/usr/src/linux-headers-2.6.26-1-686'
<replaceable>[...]</replaceable>
###################################################
###
### DAHDI installed successfully.
### If you have not done so before, install the package
### dahdi-tools.
###
###################################################</screen></para>

  <para><screen>debian:/usr/src/dahdi-linux-2.1.0.4# <emphasis role="bold"><command>cd ..</command></emphasis>
debian:/usr/src# <emphasis role="bold"><command>cd dahdi-tools-2.1.0.2/</command></emphasis>
debian:/usr/src/dahdi-tools-2.1.0.2# <emphasis role="bold"><command>./configure</command></emphasis> 
<replaceable>[...]</replaceable>
checking for newtBell in -lnewt... yes
checking newt.h usability... yes
checking newt.h presence... yes
checking for newt.h... yes
checking for usb_init in -lusb... yes
checking usb.h usability... yes
checking usb.h presence... yes
checking for usb.h... yes
<replaceable>[...]</replaceable>
debian:/usr/src/dahdi-tools-2.1.0.2# <emphasis role="bold"><command>make</command></emphasis>
<replaceable>[...]</replaceable>
make[1]: Leaving directory `/usr/src/dahdi-tools-2.1.0.2'
debian:/usr/src/dahdi-tools-2.1.0.2# <emphasis role="bold"><command>make install</command></emphasis>
<replaceable>[...]</replaceable>
###################################################
###
### DAHDI tools installed successfully.
### If you have not done so before, install init scripts with:
###
###   make config
###
###################################################
debian:/usr/src/dahdi-tools-2.1.0.2# </screen></para>

  <para>To install init scripts and configuration files, run make
  config:<screen>debian:/usr/src/dahdi-tools-2.1.0.2# <emphasis role="bold"><command>make config</command></emphasis>
install -D dahdi.init /etc/init.d/dahdi
/usr/bin/install -c -D -m 644 init.conf.sample /etc/dahdi/init.conf
/usr/bin/install -c -D -m 644 modules.sample /etc/dahdi/modules
/usr/bin/install -c -D -m 644 modprobe.conf.sample /etc/modprobe.d/dahdi
/usr/bin/install -c -D -m 644 blacklist.sample /etc/modprobe.d/dahdi.blacklist
/usr/sbin/update-rc.d dahdi defaults 15 30
 Adding system startup for /etc/init.d/dahdi ...
   /etc/rc0.d/K30dahdi -&gt; ../init.d/dahdi
   /etc/rc1.d/K30dahdi -&gt; ../init.d/dahdi
   /etc/rc6.d/K30dahdi -&gt; ../init.d/dahdi
   /etc/rc2.d/S15dahdi -&gt; ../init.d/dahdi
   /etc/rc3.d/S15dahdi -&gt; ../init.d/dahdi
   /etc/rc4.d/S15dahdi -&gt; ../init.d/dahdi
   /etc/rc5.d/S15dahdi -&gt; ../init.d/dahdi
DAHDI has been configured.

If you have any DAHDI hardware it is now recommended you 
edit /etc/dahdi/modules in order to load support for only
the DAHDI hardware installed in this system.  By default 
support for all DAHDI hardware is loaded at DAHDI start. 

I think that the DAHDI hardware you have on your system is:
debian:/usr/src/dahdi-tools-2.1.0.2# </screen></para>

  <para>There is no harm in leaving the defaults in place. If you have no
  cards installed, you can safely comment out all of the modules in
  <filename>/etc/dahdi/modules</filename>. To avoid a reboot, we simply
  restart DAHDI:</para>

  <para><screen>debian:~# <emphasis role="bold"><command>/etc/init.d/dahdi restart</command></emphasis>
Unloading DAHDI hardware modules: done
Loading DAHDI hardware modules:

No hardware timing source found in /proc/dahdi, loading dahdi_dummy
Running dahdi_cfg: done.
debian:~# </screen>As there are no built-in cards in our example,
  <literal>dahdi_dummy</literal> (formerly <literal>ztdummy</literal>) is
  loaded so that we have a timing source.</para>

  <bridgehead id="installation-1.4-debian-asterisk">Asterisk</bridgehead>

  <para>Now it's time to install Asterisk itself. You can obtain the necessary
  source files at the Asterisk homepage, <ulink
  url="http://www.asterisk.org/">http://www.asterisk.org</ulink>. Please get a
  stable (not a development) version:<screen>debian:~# <emphasis role="bold"><command>cd /usr/src/</command></emphasis>
debian:/usr/src# <emphasis role="bold"><command>wget http://downloads.digium.com/pub/asterisk/asterisk-1.4-current.tar.gz</command></emphasis>
<replaceable>[...]</replaceable>
2009-03-23 10:45:32 (172 KB/s) - »asterisk-1.4-current.tar.gz« saved [11858197/11858197]</screen></para>

  <para>Now, unpack the sources:<screen>debian:/usr/src# <emphasis role="bold"><command>tar xvzf asterisk-1.4-current.tar.gz</command></emphasis> 
asterisk-1.4.24/
<replaceable>[...]</replaceable>
debian:/usr/src# <emphasis role="bold"><command>rm asterisk-1.4-current.tar.gz</command></emphasis> </screen></para>

  <para>Next, install the required dependencies:<screen>debian:/usr/src# <emphasis
        role="bold"><command>aptitude -y install libncurses5-dev libnewt-dev</command></emphasis>
<replaceable>[...]</replaceable>
The following NEW packages will be installed:
  libncurses5-dev 
0 packages upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 1546kB of archives. After unpacking 6599kB will be used.
<replaceable>[...]</replaceable></screen></para>

  <para><screen>debian:/usr/src# <emphasis role="bold"><command>aptitude -y install libcurl4-openssl-dev</command></emphasis>
<replaceable>[...]</replaceable>
The following NEW packages will be installed:
  ca-certificates{a} comerr-dev{a} libcurl3{a} 
  libcurl4-openssl-dev libglib2.0-0{a} 
  libglib2.0-data{a} libidn11{a} libidn11-dev{a} 
  libkadm55{a} libkrb5-dev{a} libldap2-dev{a} 
  libpcre3{a} libssh2-1{a} libssh2-1-dev{a} 
  libssl-dev{a} openssl{a} pkg-config{a} 
0 packages upgraded, 17 newly installed, 0 to remove and 0 not upgraded.
Need to get 8171kB of archives. After unpacking 23.2MB will be used.
<replaceable>[...</replaceable><replaceable>]</replaceable></screen></para>

  <para><screen>debian:/usr/src# <emphasis role="bold"><command>aptitude -y install libspeex-dev libspeexdsp-dev</command></emphasis>
<replaceable>[...]</replaceable>
The following NEW packages will be installed:
  libspeex-dev libspeex1{a} 
  libspeexdsp-dev libspeexdsp1{a} 
0 packages upgraded, 2 newly installed, 0 to remove and 0 not upgraded.
Need to get 320kB of archives. After unpacking 717kB will be used.
<replaceable>[...]</replaceable></screen></para>

  <para><screen>debian:/usr/src# <emphasis role="bold"><command>aptitude -y install libiksemel-dev</command></emphasis>
<replaceable>[...]</replaceable>
The following NEW packages will be installed:
  libiksemel-dev libiksemel3{a} 
0 packages upgraded, 2 newly installed, 0 to remove and 0 not upgraded.
Need to get 91.9kB of archives. After unpacking 299kB will be used.
<replaceable>[...]</replaceable></screen></para>

  <para><screen>debian:/usr/src# <emphasis role="bold"><command>aptitude -y install unixodbc-dev</command></emphasis>
<replaceable>[...]</replaceable>
The following NEW packages will be installed:
  autotools-dev{a} defoma{a} file{a} fontconfig{a} 
  fontconfig-config{a} libaudio2{a} libdrm2{a} 
  libexpat1{a} libfontconfig1{a} libfreetype6{a} 
  libgl1-mesa-glx{a} libglu1-mesa{a} libice6{a} 
  libjpeg62{a} liblcms1{a} libltdl3{a} libltdl3-dev{a} 
  libmagic1{a} libmng1{a} libodbcinstq1c2{a} 
  libqt3-mt{a} libsm6{a} libtool{a} libxcursor1{a} 
  libxdamage1{a} libxfixes3{a} libxft2{a} libxi6{a} 
  libxinerama1{a} libxmu6{a} libxrandr2{a} 
  libxrender1{a} libxt6{a} libxxf86vm1{a} 
  odbcinst1debian1{a} ttf-dejavu{a} ttf-dejavu-core{a} 
  ttf-dejavu-extra{a} ucf{a}unixodbc{a} unixodbc-dev 
0 packages upgraded, 41 newly installed, 0 to remove and 0 not upgraded.
Need to get 12.8MB of archives. After unpacking 32.2MB will be used.
<replaceable>[...]</replaceable></screen></para>

  <para>To prepare for compilation, run the configure script with the Asterisk
  sources:<screen>debian:/usr/src# <emphasis role="bold"><command>cd asterisk-1.4.24/</command></emphasis>
debian:/usr/src/asterisk-1.4.24# <emphasis role="bold"><command>./configure</command></emphasis> 
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking for gcc... gcc
<replaceable>[...]</replaceable>
configure: Package configured for: 
configure: OS type  : linux-gnu
configure: Host CPU : i686
debian:/usr/src/asterisk-1.4.24# </screen></para>

  <para>Now you can begin compiling:<tip>
      <para>Experienced users can interactively select specific modules by
      invoking <literal><command>make menuselect</command></literal>.</para>
    </tip><screen>debian:/usr/src/asterisk-1.4.24# <emphasis role="bold"><command>make</command></emphasis>
<replaceable>[...]</replaceable>
   [CC] astman.c -&gt; astman.o
   [CC] md5.c -&gt; md5.o
   [LD] astman.o md5.o -&gt; astman
   [CC] stereorize.c -&gt; stereorize.o
<replaceable>[...]</replaceable>
make[1]: Leaving directory `/usr/src/asterisk-1.4.24/main'
 +--------- Asterisk Build Complete ---------+
 + Asterisk has successfully been built, and +
 + can be installed by running:              +
 +                                           +
 +               make install                +
 +-------------------------------------------+
debian:/usr/src/asterisk-1.4.24# </screen></para>

  <para>Finally, install the compiled sources by invoking <command>make
  install</command>:<screen>debian:/usr/src/asterisk-1.4.24# <emphasis
        role="bold"><command>make install</command></emphasis>
<replaceable>[...]</replaceable>
 +---- Asterisk Installation Complete -------+
 +                                           +
 +    YOU MUST READ THE SECURITY DOCUMENT    +
 +                                           +
 + Asterisk has successfully been installed. +
 + If you would like to install the sample   +
 + configuration files (overwriting any      +
 + existing config files), run:              +
 +                                           +
 +               make samples                +
 +                                           +
 +-----------------  or ---------------------+
 +                                           +
 + You can go ahead and install the asterisk +
 + program documentation now or later run:   +
 +                                           +
 +              make progdocs                +
 +                                           +
 + **Note** This requires that you have      +
 + doxygen installed on your local system    +
 +-------------------------------------------+
debian:/usr/src/asterisk-1.4.24# </screen></para>

  <para>All the binaries and libraries are now installed, but the
  configuration directory <filename>/etc/asterisk/</filename> is completely
  empty. Since we don't want to start from completely from scratch, we want
  the sample configuration files. Get those by invoking <command>make
  samples</command>:<screen>debian:/usr/src/asterisk-1.4.24# <emphasis
        role="bold"><command>make samples</command></emphasis>
<replaceable>[...]</replaceable>
debian:/usr/src/asterisk-1.4.24# </screen></para>

  <para>To set up Asterisk so that it starts and stops automatically at boot
  time and shut down, we need the init scripts. We get those with
  <command>make config</command>:<screen>debian:/usr/src/asterisk-1.4.24# <emphasis
        role="bold"><command>make config</command></emphasis>
update-rc.d: warning: /etc/init.d/asterisk missing LSB information
update-rc.d: see &lt;http://wiki.debian.org/LSBInitScripts&gt;
 Adding system startup for /etc/init.d/asterisk ...
   /etc/rc2.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc3.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc4.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc5.d/K91asterisk -&gt; ../init.d/asterisk
   /etc/rc2.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc3.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc4.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc5.d/S50asterisk -&gt; ../init.d/asterisk
debian:/usr/src/asterisk-1.4.24# </screen></para>

  <para>We're almost done. Unfortunately, the Asterisk installer sets the init
  sequence incorrectly for a Debian Linux system. We correct that like
  so:<screen>debian:/usr/src/asterisk-1.4.24# <emphasis role="bold"><command>cd</command></emphasis>
debian:~# <emphasis role="bold"><command>update-rc.d -f asterisk remove</command></emphasis>
 Removing any system startup links for /etc/init.d/asterisk ...
   /etc/rc2.d/S50asterisk
   /etc/rc2.d/K91asterisk
   /etc/rc3.d/S50asterisk
   /etc/rc3.d/K91asterisk
   /etc/rc4.d/S50asterisk
   /etc/rc4.d/K91asterisk
   /etc/rc5.d/S50asterisk
   /etc/rc5.d/K91asterisk
debian:~# <emphasis role="bold"><command>update-rc.d asterisk defaults 50 15</command></emphasis>
update-rc.d: warning: /etc/init.d/asterisk missing LSB information
update-rc.d: see &lt;http://wiki.debian.org/LSBInitScripts&gt;
 Adding system startup for /etc/init.d/asterisk ...
   /etc/rc0.d/K15asterisk -&gt; ../init.d/asterisk
   /etc/rc1.d/K15asterisk -&gt; ../init.d/asterisk
   /etc/rc6.d/K15asterisk -&gt; ../init.d/asterisk
   /etc/rc2.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc3.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc4.d/S50asterisk -&gt; ../init.d/asterisk
   /etc/rc5.d/S50asterisk -&gt; ../init.d/asterisk
debian:~# </screen></para>

  <para>Done! Asterisk is now installed. You can determine the installed
  version by running <literal><command>asterisk -V</command></literal> (that's
  an upper case V):<screen>debian:~# <emphasis role="bold"><command>asterisk -V</command></emphasis>
Asterisk 1.4.24
debian:~# </screen></para>
</appendix>
